create or replace package scmdata.pkg_qc_view is

  -- Author  : SANFU
  -- Created : 2022/7/12 17:05:46
  -- Purpose : qc品控记录查看通用包

  --生成批版记录sql
  FUNCTION F_GET_APPROVE_VERSION_SQL(V_ID     IN VARCHAR2,
                                     V_COMPID IN VARCHAR2) RETURN CLOB;

  --生成面料检测sql
  FUNCTION F_GET_FABRIC_SQL(V_ID IN VARCHAR2, V_COMPID IN VARCHAR2)
    RETURN CLOB;

  --生成产前会sql
  FUNCTION F_GET_QC_PRE_MEETING_SQL(V_ID IN VARCHAR2, V_COMPID IN VARCHAR2)
    RETURN CLOB;

  --生成洗水测试sql
  FUNCTION F_GET_QC_WASH_TESTING_SQL(V_ID     IN VARCHAR2,
                                     V_COMPID IN VARCHAR2) RETURN CLOB;

  --生成qc其余检测环节sql
  FUNCTION F_GET_QC_ELSE_SQL(V_ID IN VARCHAR2, V_COMPID IN VARCHAR2)
    RETURN CLOB;

  --生成QA检测sql
  FUNCTION F_GET_QA_REPORT_SQL(V_ID IN VARCHAR2, V_COMPID IN VARCHAR2)
    RETURN CLOB;

  --获取多重展示页面正确sql
  FUNCTION F_GET_RIGHT_SQL_FOR_MULTI_VIEW(V_ID     IN VARCHAR2,
                                          V_COMPID IN VARCHAR2) RETURN CLOB;

end pkg_qc_view;
/

create or replace package body scmdata.pkg_qc_view is

  --生成批版记录sql
  FUNCTION F_GET_APPROVE_VERSION_SQL(V_ID     IN VARCHAR2,
                                     V_COMPID IN VARCHAR2) RETURN CLOB IS
    V_EXESQL CLOB;
  BEGIN
    V_EXESQL := 'WITH TMP AS
   (SELECT *
      FROM SCMDATA.T_APPROVE_RISK_ASSESSMENT
     WHERE APPROVE_VERSION_ID = ''' || V_ID ||
                '''),
  FILE_TEMP AS
   (SELECT *
      FROM SCMDATA.T_APPROVE_FILE
     WHERE APPROVE_VERSION_ID = ''' || V_ID ||
                '''),
  G_DIC AS
   (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
      FROM SCMDATA.SYS_GROUP_DICT),
  C_DIC AS
   (SELECT COMPANY_DICT_VALUE,
           COMPANY_DICT_NAME,
           COMPANY_DICT_TYPE,
           COMPANY_ID
      FROM SCMDATA.SYS_COMPANY_DICT)
  SELECT CI.RELA_GOO_ID,
         A.STYLE_CODE,
         CI.STYLE_NAME,
         (SELECT SUPPLIER_COMPANY_NAME
            FROM SCMDATA.T_SUPPLIER_INFO
           WHERE COMPANY_ID = A.COMPANY_ID
             AND SUPPLIER_CODE = CI.SUPPLIER_CODE) SUPPLIER,
         (SELECT GROUP_DICT_NAME
            FROM SCMDATA.SYS_GROUP_DICT
           WHERE GROUP_DICT_VALUE = A.APPROVE_RESULT) APPROVE_RESULT,
         A.APPROVE_NUMBER,
         (SELECT COMPANY_USER_NAME
            FROM SCMDATA.SYS_COMPANY_USER
           WHERE USER_ID = A.APPROVE_USER_ID
             AND COMPANY_ID = ''' || V_COMPID ||
                ''') APPROVE_USER,
         A.APPROVE_TIME,
         A.REMARKS,
         ''面辅料'' ASSESS_TYPE_DESC_1,
         (SELECT COMPANY_USER_NAME
            FROM SCMDATA.SYS_COMPANY_USER
           WHERE COMPANY_ID =
                 (SELECT COMPANY_ID FROM TMP WHERE ASSESS_TYPE = ''EVAL11'')
             AND USER_ID =
                 (SELECT ASSESS_USER_ID FROM TMP WHERE ASSESS_TYPE = ''EVAL11'')) MFL_AU,
         (SELECT GROUP_DICT_NAME
            FROM G_DIC
           WHERE GROUP_DICT_TYPE = ''EVAL_RESULT''
             AND GROUP_DICT_VALUE =
                 (SELECT ASSESS_RESULT FROM TMP WHERE ASSESS_TYPE = ''EVAL11'')) MFL_AR,
         (SELECT GROUP_DICT_NAME
            FROM G_DIC
           WHERE GROUP_DICT_TYPE = ''APPROVE_RISK_WARNING''
             AND GROUP_DICT_VALUE =
                 (SELECT RISK_WARNING FROM TMP WHERE ASSESS_TYPE = ''EVAL11'')) MFL_RW,
         (SELECT COMPANY_DICT_NAME
            FROM C_DIC
           WHERE COMPANY_DICT_TYPE = ''EVAL11''
             AND COMPANY_ID = ''' || V_COMPID || '''
             AND COMPANY_DICT_VALUE =
                 (SELECT UNQUALIFIED_SAY FROM TMP WHERE ASSESS_TYPE = ''EVAL11'')) MFL_US,
         (SELECT ASSESS_SAY FROM TMP WHERE ASSESS_TYPE = ''EVAL11'') APR_MFL_AS,
         ''印绣花'' ASSESS_TYPE_DESC_2,
         (SELECT COMPANY_USER_NAME
            FROM SCMDATA.SYS_COMPANY_USER
           WHERE COMPANY_ID =
                 (SELECT COMPANY_ID FROM TMP WHERE ASSESS_TYPE = ''EVAL12'')
             AND USER_ID =
                 (SELECT ASSESS_USER_ID FROM TMP WHERE ASSESS_TYPE = ''EVAL12'')) YXH_AU,
         (SELECT GROUP_DICT_NAME
            FROM G_DIC
           WHERE GROUP_DICT_TYPE = ''EVAL_RESULT''
             AND GROUP_DICT_VALUE =
                 (SELECT ASSESS_RESULT FROM TMP WHERE ASSESS_TYPE = ''EVAL12'')) YXH_AR,
         (SELECT GROUP_DICT_NAME
            FROM G_DIC
           WHERE GROUP_DICT_TYPE = ''APPROVE_RISK_WARNING''
             AND GROUP_DICT_VALUE =
                 (SELECT RISK_WARNING FROM TMP WHERE ASSESS_TYPE = ''EVAL12'')) YXH_RW,
         (SELECT COMPANY_DICT_NAME
            FROM C_DIC
           WHERE COMPANY_DICT_TYPE = ''EVAL12''
             AND COMPANY_ID = ''' || V_COMPID || '''
             AND COMPANY_DICT_VALUE =
                 (SELECT UNQUALIFIED_SAY FROM TMP WHERE ASSESS_TYPE = ''EVAL12'')) YXH_US,
         (SELECT ASSESS_SAY FROM TMP WHERE ASSESS_TYPE = ''EVAL12'') YXH_AS,
         ''工艺'' ASSESS_TYPE_DESC_3,
         (SELECT COMPANY_USER_NAME
            FROM SCMDATA.SYS_COMPANY_USER
           WHERE COMPANY_ID =
                 (SELECT COMPANY_ID FROM TMP WHERE ASSESS_TYPE = ''EVAL13'')
             AND USER_ID =
                 (SELECT ASSESS_USER_ID FROM TMP WHERE ASSESS_TYPE = ''EVAL13'')) GY_AU,
         (SELECT GROUP_DICT_NAME
            FROM G_DIC
           WHERE GROUP_DICT_TYPE = ''EVAL_RESULT''
             AND GROUP_DICT_VALUE =
                 (SELECT ASSESS_RESULT FROM TMP WHERE ASSESS_TYPE = ''EVAL13'')) GY_AR,
         (SELECT GROUP_DICT_NAME
            FROM G_DIC
           WHERE GROUP_DICT_TYPE = ''APPROVE_RISK_WARNING''
             AND GROUP_DICT_VALUE =
                 (SELECT RISK_WARNING FROM TMP WHERE ASSESS_TYPE = ''EVAL13'')) GY_RW,
         (SELECT COMPANY_DICT_NAME
            FROM C_DIC
           WHERE COMPANY_DICT_TYPE = ''EVAL13''
             AND COMPANY_ID = ''' || V_COMPID || '''
             AND COMPANY_DICT_VALUE =
                 (SELECT UNQUALIFIED_SAY FROM TMP WHERE ASSESS_TYPE = ''EVAL13'')) GY_US,
         (SELECT ASSESS_SAY FROM TMP WHERE ASSESS_TYPE = ''EVAL13'') GY_AS,
         ''版型尺寸'' ASSESS_TYPE_DESC_4,
         (SELECT COMPANY_USER_NAME
            FROM SCMDATA.SYS_COMPANY_USER
           WHERE COMPANY_ID =
                 (SELECT COMPANY_ID FROM TMP WHERE ASSESS_TYPE = ''EVAL14'')
             AND USER_ID =
                 (SELECT ASSESS_USER_ID FROM TMP WHERE ASSESS_TYPE = ''EVAL14'')) BXCC_AU,
         (SELECT GROUP_DICT_NAME
            FROM G_DIC
           WHERE GROUP_DICT_TYPE = ''EVAL_RESULT''
             AND GROUP_DICT_VALUE =
                 (SELECT ASSESS_RESULT FROM TMP WHERE ASSESS_TYPE = ''EVAL14'')) BXCC_AR,
         (SELECT GROUP_DICT_NAME
            FROM G_DIC
           WHERE GROUP_DICT_TYPE = ''APPROVE_RISK_WARNING''
             AND GROUP_DICT_VALUE =
                 (SELECT RISK_WARNING FROM TMP WHERE ASSESS_TYPE = ''EVAL14'')) BXCC_RW,
         (SELECT COMPANY_DICT_NAME
            FROM C_DIC
           WHERE COMPANY_DICT_TYPE = ''EVAL14''
             AND COMPANY_ID = ''' || V_COMPID || '''
             AND COMPANY_DICT_VALUE =
                 (SELECT UNQUALIFIED_SAY FROM TMP WHERE ASSESS_TYPE = ''EVAL14'')) BXCC_US,
         (SELECT ASSESS_SAY FROM TMP WHERE ASSESS_TYPE = ''EVAL14'') BXCC_AS,
         (SELECT LISTAGG(FILE_ID, '','') FROM FILE_TEMP) FILE_ID_PR
    FROM (SELECT *
            FROM SCMDATA.T_APPROVE_VERSION
           WHERE APPROVE_VERSION_ID = ''' || V_ID || '''
             AND COMPANY_ID = ''' || V_COMPID ||
                ''') A
   INNER JOIN SCMDATA.T_COMMODITY_INFO CI
      ON CI.GOO_ID = A.GOO_ID
     AND A.COMPANY_ID = CI.COMPANY_ID';
    RETURN V_EXESQL;
  END F_GET_APPROVE_VERSION_SQL;

  --生成面料检测sql
  FUNCTION F_GET_FABRIC_SQL(V_ID IN VARCHAR2, V_COMPID IN VARCHAR2)
    RETURN CLOB IS
    V_EXESQL CLOB;
  BEGIN
    V_EXESQL := 'SELECT A.GOO_ID,
         A.SEND_CHECK_AMOUNT,
         A.CHECK_COMPANY_NAME FABRIC_CHECK_COMPANY_NAME,
         G.RELA_GOO_ID,
         NVL(A.SEND_CHECK_SUP_NAME, SI.SUPPLIER_COMPANY_NAME) SEND_CHECK_SUP_NAME,
         A.CHECK_TYPE,
         G.STYLE_NUMBER,
         A.SEND_CHECK_USER_NAME,
         NVL(U.COMPANY_USER_NAME, FABRIC_CHECK_USER_NAME) FABRIC_CHECK_USER_NAME,
         A.COLOR_LIST,
         A.SEND_CHECK_DATE,
         A.CHECK_DATE FABRIC_CHECK_DATE,
         A.CHECK_RESULT,
         A.UNQUALIFIED_TYPE,
         A.UNQUALIFIED_COLOR,
         A.CHECK_LINK,
         A.ARCHIVES_NUMBER,
         A.SEND_CHECK_FILE_ID,
         A.CHECK_REPORT_FILE_ID FABRIC_CHECK_REPORT_FILE,
         A.MEMO
    FROM (SELECT *
            FROM SCMDATA.T_CHECK_REQUEST
           WHERE CHECK_REQUEST_CODE = ''' || V_ID || '''
             AND COMPANY_ID = ''' || V_COMPID ||
                ''') A
   INNER JOIN SCMDATA.T_COMMODITY_INFO G
      ON G.GOO_ID = A.GOO_ID
     AND G.COMPANY_ID = A.COMPANY_ID
   INNER JOIN SCMDATA.SYS_GROUP_DICT GD1
      ON GD1.GROUP_DICT_TYPE = ''PRODUCT_TYPE''
     AND GD1.GROUP_DICT_VALUE = G.CATEGORY
   INNER JOIN SCMDATA.SYS_GROUP_DICT GD2
      ON GD2.GROUP_DICT_TYPE = GD1.GROUP_DICT_VALUE
     AND GD2.GROUP_DICT_VALUE = G.PRODUCT_CATE
   INNER JOIN SCMDATA.SYS_COMPANY_DICT CD
      ON CD.COMPANY_DICT_TYPE = GD2.GROUP_DICT_VALUE
     AND CD.COMPANY_DICT_VALUE = G.SAMLL_CATEGORY
     AND CD.COMPANY_ID = ''' || V_COMPID || '''
   INNER JOIN SCMDATA.SYS_COMPANY_USER U
      ON U.USER_ID = A.CHECK_USER_ID
     AND U.COMPANY_ID = A.COMPANY_ID
    LEFT JOIN SCMDATA.T_SUPPLIER_INFO SI
      ON SI.SUPPLIER_INFO_ID = A.SEND_CHECK_SUP_ID
     AND SI.COMPANY_ID = A.COMPANY_ID
   ORDER BY A.CREATE_TIME DESC';
    RETURN V_EXESQL;
  END F_GET_FABRIC_SQL;

  --生成产前会sql
  FUNCTION F_GET_QC_PRE_MEETING_SQL(V_ID IN VARCHAR2, V_COMPID IN VARCHAR2)
    RETURN CLOB IS
    V_EXESQL CLOB;
  BEGIN
    V_EXESQL := 'SELECT CI.RELA_GOO_ID,
         CI.STYLE_NUMBER,
         SI.SUPPLIER_COMPANY_NAME SUPPLIER,
         FI.SUPPLIER_COMPANY_NAME PRODUCT_FACTORY,
         A.QC_CHECK_NUM PRE_MEETING_NUM,
         A.PRE_MEETING_TIME,
         A.IS_FABRIC_BACK,
         A.FABRIC_BACK_DATE,
         A.IS_SUB_FABRIC_BACK,
         A.SUB_FABRIC_BACK_DATE,
         A.IS_CAPACITY_MATCH,
         A.CAPACITY_UNQ_SAY,
         A.DELAY_RISK_LEVEL,
         A.DELAY_RISK_SAY,
         A.PRE_MEETING_RECORD,
         (SELECT LISTAGG(O.ORDER_ID, ''; '') WITHIN GROUP(ORDER BY 1)
            FROM SCMDATA.T_QC_CHECK_RELA_ORDER K
           INNER JOIN SCMDATA.T_ORDERS O
              ON O.ORDERS_ID = K.ORDERS_ID
           WHERE K.QC_CHECK_ID = A.QC_CHECK_ID) RELA_ORDER_ID,
         A.MEMO,
         (SELECT COMPANY_USER_NAME
            FROM SCMDATA.SYS_COMPANY_USER
           WHERE USER_ID = A.FINISH_QC_ID
             AND COMPANY_ID = ''' || V_COMPID ||
                ''') QC_CHECK_USER,
         A.FINISH_TIME SUBMIT_TIME
    FROM SCMDATA.T_QC_CHECK A
   INNER JOIN SCMDATA.T_COMMODITY_INFO CI
      ON CI.GOO_ID = A.GOO_ID
     AND A.COMPANY_ID = CI.COMPANY_ID
    LEFT JOIN SCMDATA.T_SUPPLIER_INFO SI
      ON SI.SUPPLIER_CODE = A.SUPPLIER_CODE
     AND A.COMPANY_ID = SI.COMPANY_ID
    LEFT JOIN SCMDATA.T_SUPPLIER_INFO FI
      ON FI.SUPPLIER_CODE = A.FACTORY_CODE
     AND A.COMPANY_ID = FI.COMPANY_ID
   WHERE A.QC_CHECK_CODE = ''' || V_ID || '''
     AND A.COMPANY_ID = ''' || V_COMPID || '''';
    RETURN V_EXESQL;
  END F_GET_QC_PRE_MEETING_SQL;

  --生成洗水测试sql
  FUNCTION F_GET_QC_WASH_TESTING_SQL(V_ID     IN VARCHAR2,
                                     V_COMPID IN VARCHAR2) RETURN CLOB IS
    V_EXESQL CLOB;
  BEGIN
    V_EXESQL := 'SELECT CI.RELA_GOO_ID,
         CI.STYLE_NUMBER,
         SI.SUPPLIER_COMPANY_NAME SUPPLIER,
         FI.SUPPLIER_COMPANY_NAME PRODUCT_FACTORY,
         A.QC_CHECK_NUM WASH_TEST_NUM,
         QW.WASH_TEST_DATE,
         QW.WASH_FLOAT,
         QW.WASH_FLOAT_UNQ,
         QW.DYED_STAIN,
         QW.DYED_STAIN_UNQ,
         QW.CLOTH_SHRINKAGE,
         QW.CLOTH_SHRINKAGE_UNQ,
         QW.APPEARANCE_AF,
         QW.APPEARANCE_AF_UNQ,
         A.QC_RESULT WASH_TEST_RESULT,
         A.QC_UNQ_SAY WASH_TEST_UNQ_SAY,
         a.qc_unq_advice,
         QW.WASH_TEST_LOG,
         (SELECT LISTAGG(O.ORDER_ID, ''; '') WITHIN GROUP(ORDER BY 1)
            FROM SCMDATA.T_QC_CHECK_RELA_ORDER K
           INNER JOIN SCMDATA.T_ORDERS O
              ON O.ORDERS_ID = K.ORDERS_ID
           WHERE K.QC_CHECK_ID = A.QC_CHECK_ID) WASH_TEST_ORDER_ID,
         A.MEMO,
         (SELECT COMPANY_USER_NAME
            FROM SCMDATA.SYS_COMPANY_USER
           WHERE USER_ID = A.FINISH_QC_ID
             AND COMPANY_ID = ''' || V_COMPID ||
                ''') QC_CHECK_USER
    FROM SCMDATA.T_QC_CHECK A
   INNER JOIN SCMDATA.T_QC_CHECK_WASH QW
      ON A.QC_CHECK_ID = QW.QC_CHECK_ID
   INNER JOIN SCMDATA.T_COMMODITY_INFO CI
      ON CI.GOO_ID = A.GOO_ID
     AND A.COMPANY_ID = CI.COMPANY_ID
    LEFT JOIN SCMDATA.T_SUPPLIER_INFO SI
      ON SI.SUPPLIER_CODE = A.SUPPLIER_CODE
     AND A.COMPANY_ID = SI.COMPANY_ID
    LEFT JOIN SCMDATA.T_SUPPLIER_INFO FI
      ON FI.SUPPLIER_CODE = A.FACTORY_CODE
     AND A.COMPANY_ID = FI.COMPANY_ID
   WHERE A.QC_CHECK_CODE = ''' || V_ID || '''
     AND A.COMPANY_ID = ''' || V_COMPID || '''';
    RETURN V_EXESQL;
  END F_GET_QC_WASH_TESTING_SQL;

  --生成qc其余检测环节sql
  FUNCTION F_GET_QC_ELSE_SQL(V_ID IN VARCHAR2, V_COMPID IN VARCHAR2)
    RETURN CLOB IS
    V_EXESQL CLOB;
  BEGIN
    V_EXESQL := 'SELECT CI.RELA_GOO_ID,
         CI.STYLE_NUMBER,
         SU.SUPPLIER_COMPANY_NAME,
         A.QC_CHECK_NODE,
         a.QC_FINISH_DATE,
         A.TS_PRODUCT_NUM,
         A.TS_CHECK_NUM,
         A.TS_UNQUALITY_NUM,
         A.TS_CHECK_PERCENTY,
         A.TS_QUALITY_PERCENTY,
         
         a.second_final_check,
         a.measure_number,
         A.QC_CHECK_NUM QC_CHECK_NUM,
         (SELECT COMPANY_USER_NAME
            FROM SCMDATA.SYS_COMPANY_USER
           WHERE USER_ID = A.CREATE_ID
             AND COMPANY_ID = ''' || V_COMPID ||
                ''') QC_CHECK_USER,
         A.QC_FILE_ID,
         (SELECT LISTAGG(O.ORDER_ID, ''; '') WITHIN GROUP(ORDER BY 1)
            FROM SCMDATA.T_QC_CHECK_RELA_ORDER K
           INNER JOIN SCMDATA.T_ORDERS O
              ON O.ORDERS_ID = K.ORDERS_ID
           WHERE K.QC_CHECK_ID = A.QC_CHECK_ID) RELA_ORDER_ID,
         A.QC_RESULT,
         A.QC_UNQ_SAY,
         A.QC_UNQ_ADVICE,
         (select nvl(ga.group_dict_name, listagg(abn_range_desc, '' ''))
          from (select c.colorname abn_range_desc
                  from scmdata.t_commodity_color c
                 where c.goo_id = ci.goo_id
                   and c.company_id = ci.company_id
                   and instr(qca.abnormal_range, c.color_code) > 0
                   and qca.abnormal_range not in (''00'', ''01''))) ABN_RANGE_QC_DESC,
         qca.delay_amount DELAY_AMOUNT_PR,
       qca.CAUSE_DETAILED PROBLEM_CLASS_QC,
         a.need_recheck,
         A.MEMO,
         ''样衣核对'' CHECK_TYPE_DESC_1,
         QCR.SAMPLER_RESULT,
         QCR.SAMPLER_UNQ,
         ''面辅料查验'' CHECK_TYPE_DESC_2,
         QCR.FABRIB_RESULT,
         QCR.FABRIB_UNQ,
         ''工艺做工查验'' CHECK_TYPE_DESC_3,
         QCR.CRAFT_RESULT,
         QCR.CRAFT_UNQ,
         ''版型尺寸查验'' CHECK_TYPE_DESC_4,
         QCR.TYPE_SIZE_RESULT,
         QCR.TYPE_SIZE_UNQ,
         /*(SELECT LISTAGG(PICTURE_ID, '','') WITHIN GROUP(ORDER BY 1)
            FROM SCMDATA.T_COMMODITY_FILE
           WHERE COMMODITY_INFO_ID = CI.COMMODITY_INFO_ID
             AND FILE_TYPE = ''01'') COMMODITY_SIZE_CHART*/
         ''尺寸表核对查看'' SIZE_CHART_CHECK,
         A.QC_CHECK_ID

    FROM SCMDATA.T_QC_CHECK A
   INNER JOIN SCMDATA.T_QC_CHECK_REPORT QCR
      ON A.QC_CHECK_ID = QCR.QC_CHECK_ID
   INNER JOIN SCMDATA.T_COMMODITY_INFO CI
      ON A.GOO_ID = CI.GOO_ID
     AND A.COMPANY_ID = CI.COMPANY_ID
   INNER JOIN SCMDATA.T_SUPPLIER_INFO SU
      ON A.SUPPLIER_CODE = SU.SUPPLIER_CODE
     AND A.COMPANY_ID = SU.COMPANY_ID
   left join scmdata.t_qc_check_abnormal qca
    on qca.qc_check_id = a.qc_check_id
  left join scmdata.sys_group_dict ga
    on ga.group_dict_type = ''ABN_RANGE''
   AND ga.pause = 0
   and ga.group_dict_value = qca.abnormal_range
   and qca.abnormal_range in (''00'', ''01'')
   WHERE A.QC_CHECK_CODE = ''' || V_ID || '''
     AND A.COMPANY_ID = ''' || V_COMPID || '''';
    RETURN V_EXESQL;
  END F_GET_QC_ELSE_SQL;

  --生成QA检测sql
  FUNCTION F_GET_QA_REPORT_SQL(V_ID IN VARCHAR2, V_COMPID IN VARCHAR2)
    RETURN CLOB IS
  
  BEGIN
  
   -- return pkg_qa_ld.f_get_qarepsql(v_inp_qarepid => v_id,
                         --           v_inp_compid  => v_compid);
                         return null;
  END F_GET_QA_REPORT_SQL;

  --获取多重展示页面正确sql
  FUNCTION F_GET_RIGHT_SQL_FOR_MULTI_VIEW(V_ID     IN VARCHAR2,
                                          V_COMPID IN VARCHAR2) RETURN CLOB IS
    V_SQL  CLOB;
    V_NODE VARCHAR2(32);
  BEGIN
    IF V_ID LIKE 'AP_VERSION%' THEN
      V_SQL := F_GET_APPROVE_VERSION_SQL(V_ID => V_ID, V_COMPID => V_COMPID);
    ELSIF V_ID LIKE 'SJ%' THEN
      V_SQL := F_GET_FABRIC_SQL(V_ID => V_ID, V_COMPID => V_COMPID);
    ELSIF V_ID LIKE 'QA%' THEN
      V_SQL := F_GET_QA_REPORT_SQL(V_ID => V_ID, V_COMPID => V_COMPID);
    ELSE
      SELECT MAX(A.QC_CHECK_NODE)
        INTO V_NODE
        FROM SCMDATA.T_QC_CHECK A
       WHERE A.QC_CHECK_CODE = V_ID
         AND A.COMPANY_ID = V_COMPID;
      IF V_NODE = 'QC_PRE_MEETING' THEN
        V_SQL := F_GET_QC_PRE_MEETING_SQL(V_ID     => V_ID,
                                          V_COMPID => V_COMPID);
      ELSIF V_NODE = 'QC_WASH_TESTING' THEN
        V_SQL := F_GET_QC_WASH_TESTING_SQL(V_ID     => V_ID,
                                           V_COMPID => V_COMPID);
      ELSE
        V_SQL := F_GET_QC_ELSE_SQL(V_ID => V_ID, V_COMPID => V_COMPID);
      END IF;
    END IF;
    RETURN V_SQL;
  END F_GET_RIGHT_SQL_FOR_MULTI_VIEW;

end pkg_qc_view;
/

