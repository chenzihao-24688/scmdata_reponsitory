BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_uncheck_factory();
  @strresult := v_sql;
END;}

--原有逻辑
/*WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TFA.FACTORY_ASK_ID,
       TFA.FACTRORY_ASK_FLOW_STATUS,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       TFA.ASK_DATE FACTORY_ASK_DATE,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECK_APPLY_USERNAME,
       SU.PHONE CHECK_APPLY_PHONE,
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT LISTAGG(B.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TFA.FACTORY_ASK_ID
                   AND BE_COMPANY_ID = TFA.COMPANY_ID) A
         INNER JOIN DIC B
            ON A.TMP = B.GROUP_DICT_VALUE
           AND B.GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       TFA.COMPANY_ADDRESS,
       --TFA.FACTORY_NAME,
       TFA.ASK_ADDRESS,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_TYPE
           AND GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC,
       TFA.FACTORY_ASK_TYPE CHECK_METHOD,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = CAST(TFA.FACTORY_ASK_TYPE AS VARCHAR2(32))
           AND GROUP_DICT_TYPE = 'FACTORY_ASK_TYPE') CHECK_METHOD_SP
  FROM (SELECT FACTORY_ASK_ID,
               FACTRORY_ASK_FLOW_STATUS,
               ASK_DATE,
               FACTORY_ASK_TYPE,
               COOPERATION_COMPANY_ID,
               ASK_COMPANY_ID,
               ASK_USER_ID,
               ASK_ADDRESS,
               COOPERATION_TYPE,
               COOPERATION_MODEL,
               COMPANY_NAME,
               COMPANY_ADDRESS,
               COMPANY_ID,
               CREATE_DATE,
               --FACTORY_NAME,
               (SELECT GROUP_DICT_NAME
                  FROM SCMDATA.SYS_GROUP_DICT
                 WHERE GROUP_DICT_VALUE = FACTRORY_ASK_FLOW_STATUS
                   AND GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW') STATUS
          FROM SCMDATA.T_FACTORY_ASK A
         WHERE ASK_COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND FACTRORY_ASK_FLOW_STATUS = 'FA11'
           AND {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'EXISTS (SELECT 1
          FROM SCMDATA.T_ASK_SCOPE B
         WHERE OBJECT_ID = A.FACTORY_ASK_ID
           AND COMPANY_ID = A.COMPANY_ID
           AND SCMDATA.INSTR_PRIV(%coop_class_priv%,B.COOPERATION_CLASSIFICATION,'','')>0)';
  END IF;

  @StrResult := V_TMPSQL;
END;}) TFA
  LEFT JOIN SCMDATA.SYS_USER SU
    ON TFA.ASK_USER_ID = SU.USER_ID
 ORDER BY TFA.CREATE_DATE DESC*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_101''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,FACTRORY_ASK_FLOW_STATUS,CHECK_METHOD]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_101''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_101'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,FACTRORY_ASK_FLOW_STATUS,CHECK_METHOD]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[SELECT SCMDATA.PKG_PLAT_COMM.F_GETKEYID_PLAT('CR', 'seq_cr', 99) FACTORY_REPORT_ID FROM DUAL]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_check_factory_base();
  @strresult := v_sql;
END;}

--原有逻辑
/*SELECT (SELECT LOGN_NAME
          FROM SCMDATA.SYS_COMPANY
         WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%) CHECK_COMPANY_NAME,
			 (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFR.COMPANY_ID
           AND USER_ID = %CURRENT_USERID%) CHECK_USERNAME,
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = %CURRENT_USERID%) CHECK_PHONE,
       TFR.CHECK_REPORT_FILE,
       TFR.CHECK_SAY,
       TFR.CHECK_RESULT,
       TFA.FACTORY_ASK_TYPE,
       '' FACTORY_ASK_TYPE_DESC,
       NVL(TFR.CHECK_DATE,SYSDATE) CHECK_DATE,
       TFR.FACTORY_REPORT_ID
  FROM (SELECT FACTORY_ASK_ID,
               FACTORY_REPORT_ID,
							 CHECK_USER_ID,
               CHECK_SAY,
               COMPANY_ID,
               CHECK_RESULT,
               CHECK_DATE,
               CHECK_REPORT_FILE
          FROM SCMDATA.T_FACTORY_REPORT
         WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID) TFR
  LEFT JOIN SCMDATA.T_FACTORY_ASK TFA
    ON TFR.FACTORY_ASK_ID = TFA.FACTORY_ASK_ID*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[DECLARE
  p_fac_rec scmdata.t_factory_report%ROWTYPE;
BEGIN
  p_fac_rec.factory_report_id   := :factory_report_id;
  p_fac_rec.product_line        := :product_line;
  p_fac_rec.product_line_num    := :product_line_num;
  p_fac_rec.worker_num          := :worker_num;
  p_fac_rec.machine_num         := :machine_num;
  p_fac_rec.reserve_capacity    := rtrim(:reserve_capacity,'%');
  p_fac_rec.product_efficiency  := rtrim(:product_efficiency,'%');
  p_fac_rec.work_hours_day      := :work_hours_day;
  p_fac_rec.quality_step        := :quality_step;
  p_fac_rec.pattern_cap         := :pattern_cap;
  p_fac_rec.fabric_purchase_cap := :fabric_purchase_cap;
  p_fac_rec.fabric_check_cap    := :fabric_check_cap;
  p_fac_rec.cost_step           := :cost_step;
  p_fac_rec.check_person1       := :check_person1;
  p_fac_rec.check_person1_phone := :check_person1_phone;
  p_fac_rec.check_person2       := :check_person2;
  p_fac_rec.check_person2_phone := :check_person2_phone;
  p_fac_rec.check_say           := :check_say;
  p_fac_rec.check_result        := :CHECK_FAC_RESULT;
  p_fac_rec.update_id           := :user_id;
  p_fac_rec.update_date         := SYSDATE;
  p_fac_rec.remarks             := :remarks;

  scmdata.pkg_ask_record_mange.p_update_check_factory_report(p_fac_rec => p_fac_rec,p_type => 0);
END;

--原逻辑
/*DECLARE

BEGIN
  IF LENGTHB(:CHECK_REPORT_FILE) > 256 THEN
    RAISE_APPLICATION_ERROR(-20002, '最多只可上传7个附件！');
  END IF;

  UPDATE SCMDATA.T_FACTORY_REPORT
     SET CHECK_REPORT_FILE = :CHECK_REPORT_FILE,
         CHECK_SAY         = :CHECK_SAY,
         CHECK_RESULT      = :CHECK_RESULT,
         CHECK_DATE        = :CHECK_DATE,
         UPDATE_ID         = %CURRENT_USERID%,
         UPDATE_DATE       = SYSDATE
   WHERE FACTORY_REPORT_ID = :FACTORY_REPORT_ID;

END;*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_101_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,CHECK_METHOD,COOPERATION_TYPE,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent,PRODUCT_LINE,QUALITY_STEP,PATTERN_CAP,FABRIC_PURCHASE_CAP,FABRIC_CHECK_CAP,COST_STEP,CHECK_FAC_RESULT,check_person1,check_person2]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_101_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_101_1'',q''[]'',q''[]'',,q''[]'',,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,CHECK_METHOD,COOPERATION_TYPE,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent,PRODUCT_LINE,QUALITY_STEP,PATTERN_CAP,FABRIC_PURCHASE_CAP,FABRIC_CHECK_CAP,COST_STEP,CHECK_FAC_RESULT,check_person1,check_person2]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[DECLARE
  JUG_NUM   NUMBER(4);
  CCCP_SIN  VARCHAR2(256);
  CCCP_STR  VARCHAR2(2048);
  EXE_SQL CLOB := 'DELETE FROM SCMDATA.T_FACTORY_REPORT_ABILITY WHERE FACTORY_REPORT_ABILITY_ID=:A';
BEGIN
  SELECT COOPERATION_SUBCATEGORY
    INTO CCCP_SIN
    FROM SCMDATA.T_FACTORY_REPORT_ABILITY
   WHERE FACTORY_REPORT_ABILITY_ID = :FACTORY_REPORT_ABILITY_ID
     AND COMPANY_ID = %DEFAULT_COMPANY_ID%;

  SELECT LISTAGG(COOPERATION_SUBCATEGORY,';^^^^')
    INTO CCCP_STR
    FROM SCMDATA.T_ASK_SCOPE
   WHERE (OBJECT_ID, BE_COMPANY_ID) IN
         (SELECT FACTORY_ASK_ID, BE_COMPANY_ID
            FROM SCMDATA.T_FACTORY_ASK
           WHERE (FACTORY_ASK_ID, COMPANY_ID) IN
                 (SELECT FACTORY_ASK_ID, COMPANY_ID
                    FROM SCMDATA.T_FACTORY_REPORT
                   WHERE FACTORY_REPORT_ID = :FACTORY_REPORT_ID
                     AND COMPANY_ID = %DEFAULT_COMPANY_ID%));

  IF INSTR(CCCP_STR||';^^^^',CCCP_SIN||';^^^^') = 0 THEN
    EXECUTE IMMEDIATE EXE_SQL USING :FACTORY_REPORT_ABILITY_ID;
  ELSE
    RAISE_APPLICATION_ERROR(-20002,'从验厂申请-意向合作范围中带入的数据不可删除！请点击取消后重新编辑！');
  END IF;
END;]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[DECLARE
  NEWID     VARCHAR2(32);
  CS_JUGSTR VARCHAR2(1024);
  JUG_STR   VARCHAR2(4);
  JUG_CNT   NUMBER(1);
BEGIN
  SELECT LISTAGG(COOPERATION_SUBCATEGORY, ',')
    INTO CS_JUGSTR
    FROM SCMDATA.T_FACTORY_REPORT_ABILITY
   WHERE FACTORY_REPORT_ID = :FACTORY_REPORT_ID
     AND COMPANY_ID = %DEFAULT_COMPANY_ID%;

  IF TRIM(:INCOMPATIBLE_REASON) IS NULL AND :ABILITY_RESULT = 'DISAGREE' THEN
    RAISE_APPLICATION_ERROR(-20002,
                            '当能力评估结果为不通过时，不符合原因必填！');
  ELSE
    SCMDATA.PKG_FACTORY_INSPECTION.P_JUG_MULTI_SUBCATE(V_MULTI => CS_JUGSTR, V_SINGLE => :COOPERATION_SUBCATEGORY);

    SELECT SCMDATA.PKG_PLAT_COMM.F_GETKEYID_PLAT('RA', 'seq_ra', 99)
      INTO NEWID
      FROM DUAL;

    INSERT INTO SCMDATA.T_FACTORY_REPORT_ABILITY
      (FACTORY_REPORT_ABILITY_ID,
       COMPANY_ID,
       FACTORY_REPORT_ID,
       COOPERATION_TYPE,
       COOPERATION_CLASSIFICATION,
       COOPERATION_PRODUCT_CATE,
       COOPERATION_SUBCATEGORY,
       ABILITY_RESULT,
       INCOMPATIBLE_REASON)
    VALUES
      (NEWID,
       (SELECT COMPANY_ID
          FROM SCMDATA.T_FACTORY_REPORT
         WHERE FACTORY_REPORT_ID = :FACTORY_REPORT_ID),
       :FACTORY_REPORT_ID,
       :COOPERATION_TYPE,
       :COOPERATION_CLASSIFICATION,
       :COOPERATION_PRODUCT_CATE,
       :COOPERATION_SUBCATEGORY,
       :ABILITY_RESULT,
       :INCOMPATIBLE_REASON);
  END IF;
END;]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[SELECT FACTORY_REPORT_ABILITY_ID,
       FACTORY_REPORT_ID,
       COOPERATION_TYPE,
       COOPERATION_CLASSIFICATION,
       (SELECT LISTAGG(B.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_FACTORY_REPORT_ABILITY
                 WHERE FACTORY_REPORT_ABILITY_ID =
                       Z.FACTORY_REPORT_ABILITY_ID) A
         INNER JOIN SCMDATA.SYS_GROUP_DICT B
            ON A.TMP = B.GROUP_DICT_VALUE
           AND B.GROUP_DICT_TYPE = COOPERATION_TYPE) COOPERATION_CLASSIFICATION_SP,
       COOPERATION_PRODUCT_CATE,
       (SELECT LISTAGG(B.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_PRODUCT_CATE TMP
                  FROM SCMDATA.T_FACTORY_REPORT_ABILITY
                 WHERE FACTORY_REPORT_ABILITY_ID =
                       Z.FACTORY_REPORT_ABILITY_ID) A
         INNER JOIN SCMDATA.SYS_GROUP_DICT B
            ON A.TMP = B.GROUP_DICT_VALUE
           AND B.GROUP_DICT_TYPE = Z.COOPERATION_CLASSIFICATION) COOPERATION_PRODUCT_CATE_SP,
       COOPERATION_SUBCATEGORY,
       (SELECT LISTAGG(B.COMPANY_DICT_NAME, ';')
          FROM (SELECT DISTINCT REGEXP_SUBSTR(A.TMP, '[^;]+', 1, LEVEL) COL
                  FROM (SELECT COOPERATION_SUBCATEGORY TMP
                          FROM SCMDATA.T_FACTORY_REPORT_ABILITY
                         WHERE FACTORY_REPORT_ABILITY_ID =
                               Z.FACTORY_REPORT_ABILITY_ID) A
                CONNECT BY LEVEL <= REGEXP_COUNT(A.TMP, ';') + 1) Z
         INNER JOIN SCMDATA.SYS_COMPANY_DICT B
            ON Z.COL = B.COMPANY_DICT_VALUE
            AND B.COMPANY_ID = %default_company_id%
           AND B.COMPANY_DICT_TYPE = Z.COOPERATION_PRODUCT_CATE) COOPERATION_SUBCATEGORY_SP,
       ABILITY_RESULT,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_TYPE = 'ABILITY_RESULT'
           AND GROUP_DICT_VALUE = ABILITY_RESULT) ABILITY_RESULT_DESC,
       Z.INCOMPATIBLE_REASON
  FROM SCMDATA.T_FACTORY_REPORT_ABILITY Z
 WHERE FACTORY_REPORT_ID = :FACTORY_REPORT_ID]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[DECLARE
  CS_JUGSTR VARCHAR2(2048);
  V_CPSUB   VARCHAR2(512);
  V_ABSUB   VARCHAR2(512);
  JUG_STR   VARCHAR2(4);
BEGIN
  SELECT LISTAGG(COOPERATION_SUBCATEGORY, ',')
    INTO CS_JUGSTR
    FROM SCMDATA.T_FACTORY_REPORT_ABILITY
   WHERE FACTORY_REPORT_ABILITY_ID <> :FACTORY_REPORT_ABILITY_ID
     AND FACTORY_REPORT_ID = :FACTORY_REPORT_ID
     AND COMPANY_ID = %DEFAULT_COMPANY_ID%;

  SELECT LISTAGG(COOPERATION_SUBCATEGORY,';^^^^')
    INTO V_CPSUB
    FROM SCMDATA.T_ASK_SCOPE
   WHERE (OBJECT_ID,BE_COMPANY_ID) IN
     (SELECT FACTORY_ASK_ID,COMPANY_ID
        FROM SCMDATA.T_FACTORY_REPORT
       WHERE FACTORY_REPORT_ID = :FACTORY_REPORT_ID
         AND COMPANY_ID = %DEFAULT_COMPANY_ID%);

  SELECT COOPERATION_SUBCATEGORY
    INTO V_ABSUB
    FROM SCMDATA.T_FACTORY_REPORT_ABILITY
   WHERE FACTORY_REPORT_ABILITY_ID = :FACTORY_REPORT_ABILITY_ID
     AND COMPANY_ID = %DEFAULT_COMPANY_ID%;

  SCMDATA.PKG_FACTORY_INSPECTION.P_JUG_MULTI_SUBCATE(V_MULTI => CS_JUGSTR, V_SINGLE => :COOPERATION_SUBCATEGORY);

  IF TRIM(:INCOMPATIBLE_REASON) IS NULL AND :ABILITY_RESULT = 'DISAGREE' THEN
    RAISE_APPLICATION_ERROR(-20002,
                            '当能力评估结果为不通过时，不符合原因必填！');
  ELSE
    IF INSTR(V_CPSUB||';^^^^',V_ABSUB||';^^^^') > 0 AND V_ABSUB <> :COOPERATION_SUBCATEGORY THEN
      RAISE_APPLICATION_ERROR(-20002,
                              '验厂申请-新增意向供应商-意向合作范围”带过来的数据，不可修改');
    ELSE
      UPDATE SCMDATA.T_FACTORY_REPORT_ABILITY
         SET COOPERATION_TYPE           = :COOPERATION_TYPE,
             COOPERATION_CLASSIFICATION = :COOPERATION_CLASSIFICATION,
             COOPERATION_PRODUCT_CATE   = :COOPERATION_PRODUCT_CATE,
             COOPERATION_SUBCATEGORY    = :COOPERATION_SUBCATEGORY,
             ABILITY_RESULT             = :ABILITY_RESULT,
             INCOMPATIBLE_REASON        = :INCOMPATIBLE_REASON
       WHERE FACTORY_REPORT_ABILITY_ID  = :FACTORY_REPORT_ABILITY_ID
         AND COMPANY_ID = %DEFAULT_COMPANY_ID%;
    END IF;
  END IF;
END;]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_101_3''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ABILITY_ID,COMPANY_ID,FACTORY_REPORT_ID,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_PRODUCT_CATE,ABILITY_RESULT,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_101_3''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_101_3'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ABILITY_ID,COMPANY_ID,FACTORY_REPORT_ID,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_PRODUCT_CATE,ABILITY_RESULT,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_check_factory_file();
  @strresult := v_sql;
END;}]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[DECLARE
  p_fac_rec scmdata.t_factory_report%ROWTYPE;
BEGIN
  p_fac_rec.factory_report_id   := :factory_report_id;
  p_fac_rec.certificate_file    := :certificate_file;
  p_fac_rec.supplier_gate       := :supplier_gate;
  p_fac_rec.supplier_office     := :supplier_office;
  p_fac_rec.supplier_site       := :supplier_site;
  p_fac_rec.supplier_product    := :supplier_product;
  p_fac_rec.check_report_file   := :check_report_file;
  p_fac_rec.update_id           := :user_id;
  p_fac_rec.update_date         := SYSDATE;

  scmdata.pkg_ask_record_mange.p_update_check_factory_report(p_fac_rec => p_fac_rec,p_type => 1);
END;]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_101_4''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 4,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[factory_report_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_101_4''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 4,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_101_4'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[factory_report_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_checked_factory(p_type => 1);
  @strresult := v_sql;
END;}

--原有逻辑
/*WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TFA.FACTORY_ASK_ID, --验厂申请ID
       TFA.FACTRORY_ASK_FLOW_STATUS, --流程状态
       SUBSTR(STATUS, 1, INSTR(STATUS, '+') - 1) FLOW_NODE_NAME,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECK_APPLY_USERNAME, --验厂申请人
       SU.PHONE CHECK_APPLY_PHONE, --验厂申请人手机
       TFA.COMPANY_NAME ASK_COMPANY_NAME, --公司名称
       (SELECT LISTAGG(B.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TFA.FACTORY_ASK_ID) A
         INNER JOIN DIC B
            ON A.TMP = B.GROUP_DICT_VALUE
           AND B.GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.ASK_ADDRESS, --验厂地址
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_TYPE
           AND GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC, --意向合作类型-名称
       TFA.FACTORY_ASK_TYPE CHECK_METHOD, --验厂方式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = CAST(TFA.FACTORY_ASK_TYPE AS VARCHAR2(32))
           AND GROUP_DICT_TYPE = 'FACTORY_ASK_TYPE') CHECK_METHOD_SP --验厂方式-名称
  FROM (SELECT FACTORY_ASK_ID,
               FACTRORY_ASK_FLOW_STATUS,
               ASK_DATE,
               FACTORY_ASK_TYPE,
               COOPERATION_COMPANY_ID,
               ASK_COMPANY_ID,
               ASK_USER_ID,
               ASK_ADDRESS,
               COOPERATION_TYPE,
               COOPERATION_MODEL,
               COMPANY_NAME,
               COMPANY_ID,
               COMPANY_ADDRESS,
               CREATE_DATE,
               FACTORY_NAME,
               (SELECT GROUP_DICT_NAME
                  FROM DIC
                 WHERE GROUP_DICT_VALUE = FACTRORY_ASK_FLOW_STATUS
                   AND GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW') STATUS
          FROM SCMDATA.T_FACTORY_ASK A
         WHERE INSTR('FA12,FA21,FA22,FA32,FA33,',FACTRORY_ASK_FLOW_STATUS||',') > 0
           AND ASK_COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'EXISTS (SELECT 1
          FROM SCMDATA.T_ASK_SCOPE B
         WHERE OBJECT_ID = A.FACTORY_ASK_ID
           AND COMPANY_ID = A.COMPANY_ID
           AND SCMDATA.INSTR_PRIV(%coop_class_priv%,B.COOPERATION_CLASSIFICATION,'','')>0)';
  END IF;

  @StrResult := V_TMPSQL;
END;}) TFA
  LEFT JOIN SCMDATA.SYS_USER SU
    ON TFA.ASK_USER_ID = SU.USER_ID
 ORDER BY CREATE_DATE DESC*/


/*

WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TFA.FACTORY_ASK_ID, --验厂申请ID
       TFA.FACTRORY_ASK_FLOW_STATUS, --流程状态
       SUBSTR(STATUS, 1, INSTR(STATUS, '+') - 1) FLOW_NODE_NAME,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECK_APPLY_USERNAME, --验厂申请人
       SU.PHONE CHECK_APPLY_PHONE, --验厂申请人手机
       TFA.COMPANY_NAME ASK_COMPANY_NAME, --公司名称
       (SELECT LISTAGG(B.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TFA.FACTORY_ASK_ID) A
         INNER JOIN DIC B
            ON A.TMP = B.GROUP_DICT_VALUE
           AND B.GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.ASK_ADDRESS, --验厂地址
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_TYPE
           AND GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC, --意向合作类型-名称
       TFA.FACTORY_ASK_TYPE CHECK_METHOD, --验厂方式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = CAST(TFA.FACTORY_ASK_TYPE AS VARCHAR2(32))
           AND GROUP_DICT_TYPE = 'FACTORY_ASK_TYPE') CHECK_METHOD_SP --验厂方式-名称
  FROM (SELECT FACTORY_ASK_ID,
               FACTRORY_ASK_FLOW_STATUS,
               ASK_DATE,
               FACTORY_ASK_TYPE,
               COOPERATION_COMPANY_ID,
               ASK_COMPANY_ID,
               ASK_USER_ID,
               ASK_ADDRESS,
               COOPERATION_TYPE,
               COOPERATION_MODEL,
               COMPANY_NAME,
               COMPANY_ID,
               COMPANY_ADDRESS,
               CREATE_DATE,
               FACTORY_NAME,
               (SELECT GROUP_DICT_NAME
                  FROM DIC
                 WHERE GROUP_DICT_VALUE = FACTRORY_ASK_FLOW_STATUS
                   AND GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW') STATUS
          FROM SCMDATA.T_FACTORY_ASK A
         WHERE INSTR('FA12,FA21,FA22,FA32,FA33,',FACTRORY_ASK_FLOW_STATUS||',') > 0
           AND ASK_COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND ((%is_company_admin% = 1) OR EXISTS
                (SELECT 1
                   FROM SCMDATA.T_ASK_SCOPE B
                  WHERE OBJECT_ID = A.FACTORY_ASK_ID
                    AND COMPANY_ID = A.COMPANY_ID
                    AND scmdata.instr_priv(p_str1  => scmdata.pkg_data_privs.parse_json(p_jsonstr => %data_privs_json_strs%,
                                                                                        p_key     => 'COL_2'),
                                           p_str2  => B.COOPERATION_CLASSIFICATION,
                                           p_split => ';') > 0))) TFA
  LEFT JOIN SCMDATA.SYS_USER SU
    ON TFA.ASK_USER_ID = SU.USER_ID
 ORDER BY CREATE_DATE DESC*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_102''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,CHECK_METHOD,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COMPANY_ID,FACTRORY_ASK_FLOW_STATUS,COOPERATION_MODEL,factory_report_id,CHECK_FAC_RESULT]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_102''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_102'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,CHECK_METHOD,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COMPANY_ID,FACTRORY_ASK_FLOW_STATUS,COOPERATION_MODEL,factory_report_id,CHECK_FAC_RESULT]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_check_factory_base();
  @strresult := v_sql;
END;}

--原有逻辑
/*WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT),
COMP AS
 (SELECT COMPANY_ID, LOGN_NAME, COMPANY_NAME FROM SCMDATA.SYS_COMPANY)
SELECT (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID = TFA.ASK_USER_DEPT_ID) CHECK_DEPT_NAME, --验厂申请部门
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PERSON, --验厂申请人
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PHONE, --验厂申请人电话
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.COMPANY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.COMPANY_COUNTY) PCC, --公司所在区域
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.FACTORY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.FACTORY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.FACTORY_COUNTY) FPCC, --工厂所在区域
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.ASK_ADDRESS, --工厂地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.CONTACT_NAME, --工厂联系人
       TFA.CONTACT_PHONE, --工厂联系人电话
       TFA.ASK_FILES, --验厂申请附件
       'PRODUCT_TYPE' COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE='PRODUCT_TYPE') COOPERATION_TYPE_DESC,
       TFA.COOPERATION_MODEL, --意向合作模式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC, --意向合作模式名称
       TFA.ASK_SAY CHECKAPPLY_INTRO, --验厂申请说明
       TFA.ASK_USER_DEPT_ID,
       TFA.FACTORY_ASK_ID,
       TFA.SOCIAL_CREDIT_CODE,
       TFA.RELA_SUPPLIER_ID,
       TFA.COMPANY_PROVINCE,
       TFA.COMPANY_CITY,
       TFA.COMPANY_COUNTY,
       TFA.FACTORY_PROVINCE,
       TFA.FACTORY_CITY,
       TFA.FACTORY_COUNTY,
       TFA.COOPERATION_COMPANY_ID,
       TFA.FACTRORY_ASK_FLOW_STATUS
  FROM (SELECT *
          FROM SCMDATA.T_FACTORY_ASK
         WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID) TFA*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_102_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,CHECK_METHOD,COOPERATION_TYPE,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent,PRODUCT_LINE,QUALITY_STEP,PATTERN_CAP,FABRIC_PURCHASE_CAP,FABRIC_CHECK_CAP,COST_STEP,CHECK_FAC_RESULT,check_person1,check_person2]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_102_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_102_1'',q''[]'',q''[]'',,q''[]'',,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,CHECK_METHOD,COOPERATION_TYPE,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent,PRODUCT_LINE,QUALITY_STEP,PATTERN_CAP,FABRIC_PURCHASE_CAP,FABRIC_CHECK_CAP,COST_STEP,CHECK_FAC_RESULT,check_person1,check_person2]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[SELECT
  LOGO,--企业图标
  COMPANY_NAME,--企业简称
  LOGN_NAME,--企业全称
  CREATE_TIME,--创建时间
  TIPS,--简介说明
  LICENCE_TYPE,--证件类型
  LICENCE_NUM,--统一社会信用代码
  IS_OPEN,--企业是否公开
  AREA,--区域
  ATTRIBUTOR_ID,--归属人
  ADDRESS,--地址
  PRODUCT,--产品
  RIVAL--竞争力
FROM SCMDATA.SYS_COMPANY
WHERE LOGN_NAME=%ASS_COMPANY_ID%]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_102_3''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_102_3''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_102_3'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_checked_factory(p_type => 0);
  @strresult := v_sql;
END;}]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_103''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,CHECK_METHOD,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COMPANY_ID,FACTRORY_ASK_FLOW_STATUS,COOPERATION_MODEL,factory_report_id,CHECK_FAC_RESULT]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_103''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_103'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,CHECK_METHOD,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COMPANY_ID,FACTRORY_ASK_FLOW_STATUS,COOPERATION_MODEL,factory_report_id,CHECK_FAC_RESULT]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.company_id,a.logo,a.company_name,a.logn_name,a.tips,
       a.is_open,a.attributor_id,nvl(c.COMPANY_USER_NAME,b.username) attributor,a.create_time,dp.province || dci.city || dc.county area,a.address,
       a.product,a.rival,a.licence_type,a.licence_num
  from scmdata.sys_company a
 left join sys_user b on a.attributor_id=b.user_id
 left join sys_company_user c on b.user_id=c.user_id and a.company_id=c.company_id
 left join scmdata.dic_province dp
    on dp.provinceid = a.company_province
  left join scmdata.dic_county dc
    on a.company_county = dc.countyid
  left join scmdata.dic_city dci
    on dci.cityno = a.company_city
 where a.company_id=:BE_COMPANY_ID]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_103''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_103''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_103'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.company_id,a.logo,a.company_name,a.logn_name,a.tips,
       a.is_open,a.attributor_id,nvl(c.COMPANY_USER_NAME,b.username) attributor,a.create_time,a.area,a.address,
       a.product,a.rival,a.licence_type,a.licence_num
  from scmdata.sys_company a
 left join sys_user b on a.attributor_id=b.user_id
 left join sys_company_user c on b.user_id=c.user_id and a.company_id=c.company_id
 where a.company_id=%ASS_COMPANY_ID%]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_103_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_103_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_103_1'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_factory_ask(p_type => 1);
  @strresult := v_sql;
END;}
--原代码
/*WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT),
COMP AS
 (SELECT COMPANY_ID, LOGN_NAME, COMPANY_NAME FROM SCMDATA.SYS_COMPANY)
SELECT (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID = TFA.ASK_USER_DEPT_ID) CHECK_DEPT_NAME, --验厂申请部门
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PERSON, --验厂申请人
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PHONE, --验厂申请人电话
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.COMPANY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.COMPANY_COUNTY) PCC, --公司所在区域
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.FACTORY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.FACTORY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.FACTORY_COUNTY) FPCC, --工厂所在区域
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.ASK_ADDRESS, --工厂地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.CONTACT_NAME, --工厂联系人
       TFA.CONTACT_PHONE, --工厂联系人电话
       TFA.ASK_FILES, --验厂申请附件
       'PRODUCT_TYPE' COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE='PRODUCT_TYPE') COOPERATION_TYPE_DESC,
       TFA.COOPERATION_MODEL, --意向合作模式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC, --意向合作模式名称
       TFA.ASK_SAY CHECKAPPLY_INTRO, --验厂申请说明
       TFA.ASK_USER_DEPT_ID,
       TFA.FACTORY_ASK_ID,
       TFA.COMPANY_PROVINCE,
       TFA.COMPANY_CITY,
       TFA.COMPANY_COUNTY,
       TFA.FACTORY_PROVINCE,
       TFA.SOCIAL_CREDIT_CODE,
       TFA.FACTORY_CITY,
       TFA.RELA_SUPPLIER_ID,
       TFA.FACTORY_COUNTY,
       TFA.COOPERATION_COMPANY_ID,
       TFA.FACTRORY_ASK_FLOW_STATUS
  FROM (SELECT *
          FROM SCMDATA.T_FACTORY_ASK
         WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID) TFA*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_104''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTRORY_ASK_FLOW_STATUS,COMPANY_ID,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,FACTORY_ASK_ID,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_104''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_104'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTRORY_ASK_FLOW_STATUS,COMPANY_ID,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,FACTORY_ASK_ID,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.ask_scope_id,
       a.company_id,
       a.object_id factory_ask_id,
       a.object_type,
       a.cooperation_type,
       a.cooperation_classification,
       a.cooperation_product_cate,
       ga.group_dict_name cooperation_classification_des,
       gb.group_dict_name cooperation_product_cate_desc,
       a.cooperation_subcategory,
       (SELECT listagg(company_dict_name, ';') within GROUP(ORDER BY 1)
          FROM sys_company_dict
         WHERE company_dict_type = a.cooperation_product_cate
           and company_id = a.be_company_id
           AND instr(';' || a.cooperation_subcategory || ';',
                     ';' || company_dict_value || ';') > 0) cooperation_subcategory_desc,
       a.be_company_id
  from (select *
          from t_ask_scope
         where object_id = :factory_ask_id
           and object_type = 'CA') a
  left join sys_group_dict ga
    on a.cooperation_classification = ga.group_dict_value
   and ga.group_dict_type = 'PRODUCT_TYPE'
  left join sys_group_dict gb
    on a.cooperation_product_cate = gb.group_dict_value
   and gb.group_dict_type = a.cooperation_classification]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_104_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[be_company_id,cooperation_product_cate,cooperation_subcategory,cooperation_classification,cooperation_type,factory_ask_id,ask_scope_id,object_type,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_104_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_104_1'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[be_company_id,cooperation_product_cate,cooperation_subcategory,cooperation_classification,cooperation_type,factory_ask_id,ask_scope_id,object_type,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_check_factory_base();
  @strresult := v_sql;
END;}

--原代码
/*WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT),
COMP AS
 (SELECT COMPANY_ID, LOGN_NAME, COMPANY_NAME FROM SCMDATA.SYS_COMPANY)
SELECT (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID = TFA.ASK_USER_DEPT_ID) CHECK_DEPT_NAME, --验厂申请部门
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.ASK_USER_ID
           AND USER_ID = TFA.COMPANY_ID) CHECKAPPLY_PERSON, --验厂申请人
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PHONE, --验厂申请人电话

       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.COMPANY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.COMPANY_COUNTY) PCC, --公司所在区域
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.FACTORY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.FACTORY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.FACTORY_COUNTY) FPCC, --工厂所在区域
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.ASK_ADDRESS, --工厂地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.CONTACT_NAME, --工厂联系人
       TFA.CONTACT_PHONE, --工厂联系人电话
       TFA.ASK_FILES, --验厂申请附件
       'PRODUCT_TYPE' COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE='PRODUCT_TYPE') COOPERATION_TYPE_DESC,
       TFA.COOPERATION_MODEL, --意向合作模式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC, --意向合作模式名称
       TFA.ASK_SAY CHECKAPPLY_INTRO, --验厂申请说明
       TFA.ASK_USER_DEPT_ID,
       TFA.FACTORY_ASK_ID,
       TFA.COMPANY_PROVINCE,
         TFA.SOCIAL_CREDIT_CODE,
       TFA.RELA_SUPPLIER_ID,
       TFA.COMPANY_CITY,
       TFA.COMPANY_COUNTY,
       TFA.FACTORY_PROVINCE,
       TFA.FACTORY_CITY,
       TFA.FACTORY_COUNTY,
       TFA.COOPERATION_COMPANY_ID,
       TFA.FACTRORY_ASK_FLOW_STATUS
  FROM (SELECT *
          FROM SCMDATA.T_FACTORY_ASK
         WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID) TFA*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_105''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,CHECK_METHOD,COOPERATION_TYPE,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent,PRODUCT_LINE,QUALITY_STEP,PATTERN_CAP,FABRIC_PURCHASE_CAP,FABRIC_CHECK_CAP,COST_STEP,CHECK_FAC_RESULT,check_person1,check_person2]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_105''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_105'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,CHECK_METHOD,COOPERATION_TYPE,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent,PRODUCT_LINE,QUALITY_STEP,PATTERN_CAP,FABRIC_PURCHASE_CAP,FABRIC_CHECK_CAP,COST_STEP,CHECK_FAC_RESULT,check_person1,check_person2]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.log_id,
       cua.company_user_name oper_user_name,
       goper.group_dict_name oper_code_desc,
       substr(gs.group_dict_name,0,instr(gs.group_dict_name,'+')-1) FLOW_NODE_NAME_AF,
       substr(gs.group_dict_name,instr(gs.group_dict_name,'+')+1,length(gs.group_dict_name)) FLOW_NODE_STATUS_DESC_AF,
       a.oper_time,
       a.remarks,
       a.ask_record_id,
       a.factory_ask_id
  from t_factory_ask_oper_log a
  inner join sys_group_dict goper
    on goper.group_dict_value = upper(a.oper_code)
   and goper.group_dict_type = 'DICT_FLOW_STATUS'
  inner join sys_group_dict gs
    on gs.group_dict_value = a.status_af_oper
   and gs.group_dict_type = 'FACTORY_ASK_FLOW'
   inner join sys_company_user cua on a.oper_user_id=cua.user_id and a.oper_user_company_id=cua.company_id
 where a.factory_ask_id = :factory_ask_id
    or (a.ask_record_id is not null and
       a.ask_record_id =
       (select ask_record_id
           from t_factory_ask
          where factory_ask_id = :factory_ask_id) and a.factory_ask_id is null)
 order by a.oper_time desc]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_106''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ask_record_id,log_id,factory_ask_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_106''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_106'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ask_record_id,log_id,factory_ask_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[select a.LOGO,a.company_name,a.LOGN_NAME,a.tips from sys_company a
where company_id=:company_id]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select company_id, logo, company_name, logn_name
  from sys_company a
 where /*company_id='a972dd1ffe3b3a10e0533c281cac8fd7' and*/
 a.company_id <> %default_company_id%
and  not exists
(select 1 from scmdata.t_ask_record k where k.be_company_id = a.company_id and k.company_id=%default_company_id%)
 and a.pause = 0]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_110''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[]'',,0,q''[]'',q''[]'',q''[]'',,q''[COMPANY_NAME,LOGN_NAME]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_110''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_110'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[]'',,0,q''[]'',q''[]'',q''[]'',,q''[COMPANY_NAME,LOGN_NAME]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[{declare
  v_sql         varchar2(400);
  p_licence_num varchar2(100);
  p_i           int;
begin
  select nvl(max(1), 0)
    into p_i
    from scmdata.t_ask_record a
   where a.company_id = %default_company_id%
     and a.be_company_id = %ASS_company_id%;
  if p_i = 1 then
    raise_application_error(-20002,
                            '已对该企业发起过申请，请从申请记录页面查看！');
  end if;

  select a.licence_num
    into p_licence_num
    from sys_company a
   where company_id = %default_company_id%;
  pkg_ask_record_mange.has_coop_submit(pi_be_company_id      => %ASS_company_id%,
                                       pi_social_credit_code => p_licence_num);
  v_sql      := 'select t.SUPPLIER_TYPE_ID,
       t.supplier_type_code,
       gd.group_dict_name supplier_type_name,
       t.remarks
  from t_supplier_type t
 inner join sys_group_dict gd
    on gd.group_dict_type = ''COOPERATION_TYPE''
   and gd.group_dict_value = t.supplier_type_code
 where t.company_id = %ASS_company_id%
   and t.IS_SUPPLIER_TYPE_OPEN = 1
   and t.pause = 0';
  @strResult := v_sql;
end;

}]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_120''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[''{{SUPPLIER_TYPE_NAME}}''==''成品供应商'']'',q''[SUPPLIER_TYPE_NAME]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[SUPPLIER_TYPE_ID,supplier_type_code]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_120''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_120'',q''[''{{SUPPLIER_TYPE_NAME}}''==''成品供应商'']'',q''[SUPPLIER_TYPE_NAME]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[SUPPLIER_TYPE_ID,supplier_type_code]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[--czh 重构逻辑
DECLARE
  p_ar_rec         scmdata.t_ask_record%ROWTYPE;
  v_logn_name      VARCHAR2(32);
  v_lice_num       VARCHAR2(32);
  v_be_company_id  VARCHAR2(32);
  v_supp_type_code VARCHAR2(32);
BEGIN
  SELECT MAX(logn_name), MAX(licence_num)
    INTO v_logn_name, v_lice_num
    FROM sys_company
   WHERE company_id = %default_company_id%;

  SELECT MAX(company_id), MAX(supplier_type_code)
    INTO v_be_company_id, v_supp_type_code
    FROM t_supplier_type
   WHERE supplier_type_id = :supplier_type_id;

  p_ar_rec.ask_record_id              := :ask_record_id;
  p_ar_rec.company_id                 := %default_company_id%;
  p_ar_rec.be_company_id              := v_be_company_id;
  p_ar_rec.company_name               := :ask_company_name;
  p_ar_rec.ask_user_id                := :user_id;
  p_ar_rec.company_address            := :company_address;
  p_ar_rec.cooperation_type           := v_supp_type_code;
  --p_ar_rec.cooperation_classification := :cooperation_classification;
  --p_ar_rec.cooperation_subcategory    := :cooperation_subcategory;
  p_ar_rec.cooperation_model          := :cooperation_model;
  p_ar_rec.ask_say                    := :ask_say;
  p_ar_rec.ask_date                   := :ask_date;
  p_ar_rec.certificate_file           := :certificate_file;
  p_ar_rec.other_file                 := :other_file;
  p_ar_rec.create_id                  := :user_id;
  p_ar_rec.create_date                := SYSDATE;
  p_ar_rec.update_id                  := :user_id;
  p_ar_rec.update_date                := SYSDATE;
  p_ar_rec.company_province           := :company_province;
  p_ar_rec.company_city               := :company_city;
  p_ar_rec.company_county             := :company_county;
  p_ar_rec.company_abbreviation       := :company_abbreviation;
  p_ar_rec.legal_representative       := :legal_representative;
  p_ar_rec.company_contact_phone      := :company_contact_phone;
  p_ar_rec.company_type               := :company_type;
  p_ar_rec.brand_type                 := :brand_type;
  p_ar_rec.cooperation_brand          := :cooperation_brand;
  p_ar_rec.product_link               := :product_link;
  p_ar_rec.coor_ask_flow_status       := 'CA00';
  p_ar_rec.company_name               := v_logn_name;
  p_ar_rec.social_credit_code         := v_lice_num;
  p_ar_rec.supplier_gate              := :supplier_gate;
  p_ar_rec.supplier_office            := :supplier_office;
  p_ar_rec.supplier_site              := :supplier_site;
  p_ar_rec.supplier_product           := :supplier_product;
  p_ar_rec.sapply_user                := :ask_user_name;
  p_ar_rec.sapply_phone               := :ask_user_phone;

  /*p_ar_rec.production_mode       := :production_mode;
  p_ar_rec.remarks               := :remarks;
  p_ar_rec.collection            := :collection;
  p_ar_rec.origin                := :origin;
  p_ar_rec.cooperation_statement := :cooperation_statement;
  p_ar_rec.sapply_user           := :sapply_user;
  p_ar_rec.sapply_phone          := :sapply_phone;*/

  scmdata.pkg_ask_record_mange.p_check_data_by_save(p_ar_rec => p_ar_rec,p_type   => 0);

  scmdata.pkg_ask_record_mange.p_insert_t_ask_record(p_ar_rec => p_ar_rec);

END;



--原有逻辑
/*declare
  p_id   varchar2(32);
  p_desc varchar2(256);
begin
  p_desc := :PCC;
  p_id   := :ask_record_id;
  insert into t_ask_record
    (ask_record_id,
     company_name,
     social_credit_code,
     ask_user_id,
     company_id,
     be_company_id,
     company_address,
     cooperation_type,
     cooperation_classification,
     cooperation_subcategory,
     cooperation_model,
     ask_say,
     certificate_file,
     other_file,
     create_id,
     create_date,
     update_id,
     update_date,
     company_province,
     company_city,
     company_county,
     company_abbreviation,
     legal_representative,
     company_contact_phone,
     company_type,
     COOPERATION_BRAND,
     product_link,
     coor_ask_flow_status)
  values
    (p_id,
     (select logn_name
        from sys_company
       where company_id = %default_company_id%),
     (select licence_num
        from sys_company
       where company_id = %default_company_id%),
     :user_id,
     %default_company_id%,
     (select company_id
        from t_supplier_type
       where supplier_type_id = :supplier_type_id),
     :company_address,
     (select supplier_type_code
        from t_supplier_type
       where supplier_type_id = :supplier_type_id),
     :cooperation_classification,
     :cooperation_subcategory,
     :cooperation_model,
     :ask_say,
     :CERTIFICATE_FILE,
     :other_file,
     :user_id,
     sysdate,
     :user_id,
     sysdate,
     :company_province,
     :company_city,
     :company_county,
     :company_abbreviation,
     :legal_representative,
     :company_contact_phone,
     :company_type_desc,
     :COOPERATION_BRAND_DESC,
     :product_link,
     'CA00');
end;*/]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[select pkg_plat_comm.f_getkeyid_plat(pi_pre     => 'HZ',
                                       pi_seqname => 'SEQ_T_ASK_RECORD',
                                       pi_seqnum  => 99) ask_record_id from dual]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_coop_fp_supplier(p_type => 0);
  @strresult := v_sql;
END;}

--原有逻辑
/*select a.ask_record_id,
       a.company_id,
       a.be_company_id,
       a.company_name ASK_COMPANY_NAME,
       a.company_abbreviation,
       a.ask_date,
       a.ask_user_id,
       a.social_credit_code,
      (select company_user_name from sys_company_user where user_id =a.ask_user_id and company_id= nvl(a.company_id,a.be_company_id)) ask_user_name,
       a.company_province,
       a.company_city,
       a.company_county,
       dp.province || dc.city || dco.county PCC,
       u.phone ask_user_phone,
       a.company_address,
       a.cooperation_type,
       ga.group_dict_name cooperation_type_desc,
       a.cooperation_model,
       a.ask_say,
       a.certificate_file,
       a.other_file,
       a.legal_representative,
       a.company_contact_phone,
       a.company_type,
       a.COOPERATION_BRAND,
       a.product_link
  from t_ask_record a
 inner join sys_user u
    on a.ask_user_id = u.user_id
 inner join sys_group_dict ga
    on a.cooperation_type = ga.group_dict_value
   and ga.group_dict_type = 'COOPERATION_TYPE'
  left join dic_province dp
    on a.company_province = to_char(dp.provinceid)
  left join dic_city dc
    on a.company_city = to_char(dc.cityno)
  left join dic_county dco
    on a.company_county = to_char(dco.countyid)
 where a.company_id = %default_company_id%
   and a.COOR_ASK_FLOW_STATUS in ('CA00')
   and be_company_id =
       (select company_id
          from t_supplier_type
         where supplier_type_id = :supplier_type_id)
 order by create_date desc*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[--czh 重构逻辑
DECLARE
  p_ar_rec scmdata.t_ask_record%ROWTYPE;
BEGIN
  p_ar_rec.ask_record_id              := :ask_record_id;
  p_ar_rec.be_company_id              := :be_company_id;
  p_ar_rec.company_name               := :ask_company_name;
  p_ar_rec.company_address            := :company_address;
  p_ar_rec.cooperation_type           := :cooperation_type;
  --p_ar_rec.cooperation_classification := :cooperation_classification;
  --p_ar_rec.cooperation_subcategory    := :cooperation_subcategory;
  p_ar_rec.cooperation_model          := :cooperation_model;
  p_ar_rec.ask_say                    := :ask_say;
  p_ar_rec.ask_date                   := :ask_date;
  p_ar_rec.certificate_file           := :certificate_file;
  p_ar_rec.other_file                 := :other_file;
  p_ar_rec.update_id                  := :user_id;
  p_ar_rec.update_date                := SYSDATE;
  p_ar_rec.company_province           := :company_province;
  p_ar_rec.company_city               := :company_city;
  p_ar_rec.company_county             := :company_county;
  p_ar_rec.company_abbreviation       := :company_abbreviation;
  p_ar_rec.legal_representative       := :legal_representative;
  p_ar_rec.company_contact_phone      := :company_contact_phone;
  p_ar_rec.company_type               := :company_type;
  p_ar_rec.brand_type                 := :brand_type;
  p_ar_rec.cooperation_brand          := :cooperation_brand;
  p_ar_rec.product_link               := :product_link;
  p_ar_rec.supplier_gate              := :supplier_gate;
  p_ar_rec.supplier_office            := :supplier_office;
  p_ar_rec.supplier_site              := :supplier_site;
  p_ar_rec.supplier_product           := :supplier_product;
  p_ar_rec.sapply_user                := :ask_user_name;
  p_ar_rec.sapply_phone               := :ask_user_phone;

  /*  p_ar_rec.ask_user_id := :user_id;
  p_ar_rec.company_name               := v_logn_name;
  p_ar_rec.social_credit_code         := v_lice_num;;*/

  scmdata.pkg_ask_record_mange.p_check_data_by_save(p_ar_rec => p_ar_rec,p_type   => 0);

  scmdata.pkg_ask_record_mange.p_update_t_ask_record(p_ar_rec => p_ar_rec);

END;

--原有逻辑
/*declare
p_status varchar2(32);
  p_desc varchar2(256);
begin
  p_desc:=:PCC;
  select a.coor_ask_flow_status into p_status from t_ask_record a where a.ask_record_id=:ask_record_id;
  if p_status = 'CA01' then
    raise_application_error(-20002, '已提交的申请不能重新修改');
  end if;

  update  t_ask_record set company_address=:company_address,
                    cooperation_type=:cooperation_type,
                    cooperation_classification=:cooperation_classification,
                    cooperation_subcategory=:cooperation_subcategory,
                    cooperation_model=:cooperation_model,
                    ask_say=:ask_say,
                    certificate_file=:certificate_file,
                    other_file=:other_file,
                    update_id=:user_id,
                    update_date=sysdate,
                    company_province=:company_province,company_city=:company_city,company_county=:company_county,
                    company_abbreviation =:company_abbreviation,company_contact_phone = :company_contact_phone,
                    legal_representative = :legal_representative,
                    company_type = :company_type_desc,COOPERATION_BRAND = :COOPERATION_BRAND_DESC,
                    product_link = :product_link
                    where       ask_record_id=:ask_record_id;
end;*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_121''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 3,q''[]'',q''[]'',q''[]'',,q''[为了增加双方的合作机会，建议您上传更多的真实资料：如公司简介、营业执照照片、产品照片等资料。]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[cooperation_model,production_mode,brand_type]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_121''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 3,q''[]'',q''[]'',q''[]'',,q''[为了增加双方的合作机会，建议您上传更多的真实资料：如公司简介、营业执照照片、产品照片等资料。]'',q''[]'',,''a_coop_121'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[cooperation_model,production_mode,brand_type]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select ask_record_id,
       ask_company_name,
       be_company_id,
       be_ask_company_name,
       case
         when flow_status in ('FA01','FA02', 'FA03', 'FA11') then
          'CA01'
         else
          flow_status
       end flow_status,
       substr(fals.group_dict_name, 0, instr(fals.group_dict_name, '+') - 1) FLOW_NODE_NAME,
       substr(fals.group_dict_name,
              instr(fals.group_dict_name, '+') + 1,
              length(fals.group_dict_name)) FLOW_NODE_STATUS_DESC,
       back_reason,
       ask_user_name,
       ask_date
  from (select a.ask_record_id,
               b.logn_name ask_company_name,
               a.be_company_id,

               c.logn_name be_ask_company_name,
               nvl(fa.factrory_ask_flow_status, a.coor_ask_flow_status) flow_status,
               (select remarks
                  from (select remarks
                          from t_factory_ask_oper_log
                         where ask_record_id = a.ask_record_id
                           and (fa.factrory_ask_flow_status is null or
                               fa.factrory_ask_flow_status not in
                               ('FA22', 'FA32'))
                         order by oper_time desc)
                 where rownum <= 1) back_reason,
                (select company_user_name from sys_company_user where user_id =a.ask_user_id and company_id= a.company_id) ask_user_name,
               a.ask_date
          from T_ASK_RECORD a
          left join sys_company b
            on a.company_id = b.company_id
          left join sys_company c
            on a.be_company_id = c.company_id

          left join t_factory_ask fa
            on fa.factory_ask_id =
               (select factory_ask_id
                  from t_factory_ask
                 where update_date = (select max(update_date)
                                        from t_factory_ask
                                       where ask_record_id = a.ask_record_id
                                         and factrory_ask_flow_status not in
                                             ('FA01', 'CA01')))
         where COOR_ASK_FLOW_STATUS is not null
           and a.company_id = %default_company_id%) ttt
  left join sys_group_dict fals
    on ttt.flow_status = fals.group_dict_value
   and fals.group_dict_type = 'FACTORY_ASK_FLOW']';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[/*declare
begin

  update  t_ask_record set company_address=:company_address,
                    cooperation_type=:cooperation_type,
                    cooperation_classification=:cooperation_classification,
                    cooperation_subcategory=:cooperation_subcategory,
                    cooperation_model=:cooperation_model,
                    production_mode=:production_mode,
                    ask_say=:ask_say,
                    certificate_file=:certificate_file,
                    other_file=:other_file,
                    update_id=:update_id,
                    update_date=:update_date
                    where       ask_record_id=:ask_record_id;
end;*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_130''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[flow_status,ask_company_name,be_company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[ask_record_id,be_ask_company_name]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_130''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_130'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[flow_status,ask_company_name,be_company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[ask_record_id,be_ask_company_name]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.ask_record_id,
       a.company_id,
       a.be_company_id,
       a.company_name ASK_COMPANY_NAME,
       a.ask_date,
       a.ask_user_id,
       a.social_credit_code,
       (select company_user_name from sys_company_user where user_id =a.ask_user_id and company_id= nvl(a.company_id,a.be_company_id)) ask_user_name,
       a.company_province,
       a.company_city,
       a.company_county,
       dp.province || dc.city || dco.county PCC,
       u.phone ask_user_phone,
       a.company_address,
       a.cooperation_type,
       ga.group_dict_name cooperation_type_desc,
       a.cooperation_model,
       a.ask_say,
       a.certificate_file,
       a.other_file
  from t_ask_record a
 inner join sys_user u
    on a.ask_user_id = u.user_id
 inner join sys_group_dict ga
    on a.cooperation_type = ga.group_dict_value
   and ga.group_dict_type = 'COOPERATION_TYPE'
  left join dic_province dp
    on a.company_province = to_char(dp.provinceid)
  left join dic_city dc
    on a.company_city = to_char(dc.cityno)
  left join dic_county dco
    on a.company_county = to_char(dco.countyid)
 where a.ask_record_id=:ask_record_id]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_131''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[cooperation_model,ask_record_id,ask_user_id,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_131''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_131'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[cooperation_model,ask_record_id,ask_user_id,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.ask_scope_id,
       a.company_id,
       a.object_id ask_record_id,
       a.object_type,
       a.cooperation_type,
       a.cooperation_classification,
       a.cooperation_product_cate,
       ga.group_dict_name cooperation_classification_des,
       gb.group_dict_name cooperation_product_cate_desc,
       a.cooperation_subcategory,
       (SELECT listagg(company_dict_name, ';') within GROUP(ORDER BY 1)
          FROM sys_company_dict
         WHERE company_dict_type = a.cooperation_product_cate
           and company_id=a.be_company_id
           AND instr(';' || a.cooperation_subcategory || ';',
                     ';' || company_dict_value || ';') > 0) cooperation_subcategory_desc,
       a.be_company_id
  from (select *
          from t_ask_scope
         where object_id = :ask_record_id
           and object_type = 'HZ') a
  left join sys_group_dict ga
    on a.cooperation_classification = ga.group_dict_value
   and ga.group_dict_type = 'PRODUCT_TYPE'
  left join sys_group_dict gb
    on a.cooperation_product_cate = gb.group_dict_value
   and gb.group_dict_type = a.cooperation_classification]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_131_2''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[be_company_id,cooperation_product_cate,cooperation_subcategory,cooperation_classification,cooperation_type,ask_record_id,ask_scope_id,object_type,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_131_2''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_131_2'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[be_company_id,cooperation_product_cate,cooperation_subcategory,cooperation_classification,cooperation_type,ask_record_id,ask_scope_id,object_type,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_coop_fp_supplier(p_type => 1);
  @strresult := v_sql;
END;}

--原有逻辑
/*
 {
declare
  v_sql           varchar2(1000);
  p_status        varchar2(50);
  p_be_company_id varchar2(32);
  p_licence_num   varchar2(100);
begin

  select coor_ask_flow_status, be_company_id
    into p_status, p_be_company_id
    from t_ask_record
   where ask_record_id = :ask_record_id;
  if p_status not in ('CA00', 'CA03') then
    raise_application_error(-20002, '已经提交的合作申请不能重新申请!');
  end if;

  select a.licence_num
    into p_licence_num
    from sys_company a
   where company_id = %default_company_id%;
  pkg_ask_record_mange.has_coop_submit(pi_be_company_id      => p_be_company_id,
                                       pi_social_credit_code => p_licence_num);

  v_sql      := 'select a.ask_record_id,a.company_id,a.be_company_id,a.company_name ASK_COMPANY_NAME,a.ask_date,a.ask_user_id,a.social_credit_code,
       (select company_user_name from sys_company_user where user_id =a.ask_user_id and company_id= nvl(a.company_id,a.be_company_id)) ask_user_name,
       a.company_province,a.company_city,a.company_county,dp.province || dc.city || dco.county PCC,u.phone ask_user_phone,
       a.company_address,a.cooperation_type,ga.group_dict_name cooperation_type_desc,a.cooperation_model,a.ask_say,a.certificate_file,a.other_file
  from t_ask_record a inner join sys_user u on a.ask_user_id = u.user_id
 inner join sys_group_dict ga on a.cooperation_type = ga.group_dict_value and ga.group_dict_type = ''COOPERATION_TYPE''
  left join dic_province dp on a.company_province = to_char(dp.provinceid)
  left join dic_city dc on a.company_city = to_char(dc.cityno)
  left join dic_county dco on a.company_county = to_char(dco.countyid)
 where a.ask_record_id=:ask_record_id';
  @strResult := v_sql;
end;
}
*/

/*

 {
declare
  v_sql    varchar2(1000);
  p_status varchar2(50);
  p_licence_num varchar2(100);
begin
  select coor_ask_flow_status
    into p_status
    from t_ask_record
   where ask_record_id = %ASS_ask_record_id%;
  if p_status not in ('CA00', 'CA03') then
    raise_application_error(-20002, '已经提交的合作申请不能重新申请!');
  end if;
  v_sql      := 'select a.ask_record_id,a.company_id,a.be_company_id,a.company_name ASK_COMPANY_NAME,a.ask_date,a.ask_user_id,a.social_credit_code,
       (select company_user_name from sys_company_user where user_id =a.ask_user_id and company_id= nvl(a.company_id,a.be_company_id)) ask_user_name,
       a.company_province,a.company_city,a.company_county,dp.province || dc.city || dco.county PCC,u.phone ask_user_phone,
       a.company_address,a.cooperation_type,ga.group_dict_name cooperation_type_desc,a.cooperation_model,a.ask_say,a.certificate_file,a.other_file
  from t_ask_record a inner join sys_user u on a.ask_user_id = u.user_id
 inner join sys_group_dict ga on a.cooperation_type = ga.group_dict_value and ga.group_dict_type = ''COOPERATION_TYPE''
  left join dic_province dp on a.company_province = to_char(dp.provinceid)
  left join dic_city dc on a.company_city = to_char(dc.cityno)
  left join dic_county dco on a.company_county = to_char(dco.countyid)
 where a.ask_record_id=%ASS_ask_record_id%';
  @strResult := v_sql;
end;
}*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[--czh 重构逻辑
DECLARE
  p_ar_rec scmdata.t_ask_record%ROWTYPE;
BEGIN
  p_ar_rec.ask_record_id              := :ask_record_id;
  p_ar_rec.be_company_id              := :be_company_id;
  p_ar_rec.company_name               := :ask_company_name;
  p_ar_rec.company_address            := :company_address;
  p_ar_rec.cooperation_type           := :cooperation_type;
  --p_ar_rec.cooperation_classification := :cooperation_classification;
  --p_ar_rec.cooperation_subcategory    := :cooperation_subcategory;
  p_ar_rec.cooperation_model          := :cooperation_model;
  p_ar_rec.ask_say                    := :ask_say;
  p_ar_rec.ask_date                   := :ask_date;
  p_ar_rec.certificate_file           := :certificate_file;
  p_ar_rec.other_file                 := :other_file;
  p_ar_rec.update_id                  := :user_id;
  p_ar_rec.update_date                := SYSDATE;
  p_ar_rec.company_province           := :company_province;
  p_ar_rec.company_city               := :company_city;
  p_ar_rec.company_county             := :company_county;
  p_ar_rec.company_abbreviation       := :company_abbreviation;
  p_ar_rec.legal_representative       := :legal_representative;
  p_ar_rec.company_contact_phone      := :company_contact_phone;
  p_ar_rec.company_type               := :company_type;
  p_ar_rec.brand_type                 := :brand_type;
  p_ar_rec.cooperation_brand          := :cooperation_brand;
  p_ar_rec.product_link               := :product_link;
  p_ar_rec.supplier_gate              := :supplier_gate;
  p_ar_rec.supplier_office            := :supplier_office;
  p_ar_rec.supplier_site              := :supplier_site;
  p_ar_rec.supplier_product           := :supplier_product;
  p_ar_rec.sapply_user                := :ask_user_name;
  p_ar_rec.sapply_phone               := :ask_user_phone;

  /*  p_ar_rec.ask_user_id := :user_id;
  p_ar_rec.company_name               := v_logn_name;
  p_ar_rec.social_credit_code         := v_lice_num;;*/

  scmdata.pkg_ask_record_mange.p_check_data_by_save(p_ar_rec => p_ar_rec,p_type   => 0);

  scmdata.pkg_ask_record_mange.p_update_t_ask_record(p_ar_rec => p_ar_rec);

END;
--原有逻辑
/*declare
p_status varchar2(32);
p_desc varchar2(256);
begin
p_desc:=:PCC;
  select a.coor_ask_flow_status into p_status from t_ask_record a where a.ask_record_id=:ask_record_id;
  if :ask_date is not null and p_status = 'CA01' then
    raise_application_error(-20002, '已提交的申请不能重新修改');
  end if;

  update  t_ask_record set company_address=:company_address,
                    cooperation_type=:cooperation_type,
                    cooperation_classification=:cooperation_classification,
                    cooperation_subcategory=:cooperation_subcategory,
                    cooperation_model=:cooperation_model,
                    ask_say=:ask_say,
                    certificate_file=:certificate_file,
                    other_file=:other_file,
                    update_id=:user_id,
                    update_date=sysdate,
                    company_province=:company_province,company_city=:company_city,company_county=:company_county
                    where       ask_record_id=:ask_record_id;
end;*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_132_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[cooperation_subcategory,ask_record_id,company_id,ask_user_id,cooperation_type,cooperation_classification,cooperation_model,production_mode,brand_type]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_132_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_132_1'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[cooperation_subcategory,ask_record_id,company_id,ask_user_id,cooperation_type,cooperation_classification,cooperation_model,production_mode,brand_type]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[
declare
  p_status varchar2(32);
begin
  select a.coor_ask_flow_status
    into p_status
    from t_ask_record a
   where a.ask_record_id = :ask_record_id;
  if :ask_date is not null and p_status = 'CA01' then
    raise_application_error(-20002, '已提交的申请不能重新修改');
  end if;
delete from t_ask_scope where ask_scope_id=:ask_scope_id;
end;]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[
declare
  p_status varchar2(32);
  p_desc   varchar2(256);
  p_id     varchar2(32);
begin
  p_desc := :cooperation_classification_des ||
            :cooperation_subcategory_desc;
  select a.coor_ask_flow_status
    into p_status
    from t_ask_record a
   where a.ask_record_id = :ask_record_id;
  if :ask_date is not null and p_status = 'CA01' then
    raise_application_error(-20002, '已提交的申请不能重新修改');
  end if;
  p_id := f_get_uuid();
  insert into t_ask_scope
    (ask_scope_id,
     company_id,
     object_id,
     object_type,
     cooperation_type,
     cooperation_classification,
     cooperation_product_cate,
     cooperation_subcategory,
     be_company_id,
     update_time,
     update_id,
     create_id,
     create_time,
     remarks,
     pause)
  values
    (p_id,
     %default_company_id%,
     :ask_record_id,
     'HZ',
     :cooperation_type,
     :cooperation_classification,
     :cooperation_product_cate,
     :cooperation_subcategory,
     :be_company_id,
     null,
     null,
     :user_id,
     sysdate,
     null,
     0);

  scmdata.pkg_ask_record_mange.check_repeat_scope(pi_Ask_Scope_Id               => p_id,
                                                  pi_Object_Id                  => :ask_record_id,
                                                  pi_OBJECT_TYPE                => 'HZ',
                                                  pi_Cooperation_Classification => :cooperation_classification,
                                                  pi_Cooperation_Product_Cate   => :cooperation_product_cate,
                                                  pi_COOPERATION_TYPE           => :cooperation_type);
end;]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.ask_scope_id,
       a.company_id,
       a.object_id ask_record_id,
       a.object_type,
       a.cooperation_type,
       a.cooperation_classification,
       a.cooperation_product_cate,
       ga.group_dict_name cooperation_classification_des,
       gb.group_dict_name cooperation_product_cate_desc,
       a.cooperation_subcategory,
       (SELECT listagg(company_dict_name, ';') within GROUP(ORDER BY 1)
          FROM sys_company_dict
         WHERE company_dict_type = a.cooperation_product_cate
           and company_id=a.be_company_id
           AND instr(';' || a.cooperation_subcategory || ';',
                     ';' || company_dict_value || ';') > 0) cooperation_subcategory_desc,
       a.be_company_id
  from (select *
          from t_ask_scope
         where object_id = :ask_record_id
           and object_type = 'HZ') a
  left join sys_group_dict ga
    on a.cooperation_classification = ga.group_dict_value
   and ga.group_dict_type = 'PRODUCT_TYPE'
  left join sys_group_dict gb
    on a.cooperation_product_cate = gb.group_dict_value
   and gb.group_dict_type = a.cooperation_classification]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[declare
  p_status varchar2(32);
  p_desc   varchar2(256);
begin
  p_desc := :cooperation_classification_des ||
            :cooperation_subcategory_desc;
  select a.coor_ask_flow_status
    into p_status
    from t_ask_record a
   where a.ask_record_id = :ask_record_id;
  if :ask_date is not null and p_status = 'CA01' then
    raise_application_error(-20002, '已提交的申请不能重新修改');
  end if;

  update t_ask_scope a
     set a.cooperation_type           = :cooperation_type,
         a.cooperation_classification = :cooperation_classification,
         a.cooperation_product_cate   = :cooperation_product_cate,
         a.cooperation_subcategory    = :cooperation_subcategory,
         a.update_time                = sysdate,
         a.update_id                  = :user_id
   where a.ask_scope_id = :ask_scope_id;
scmdata.pkg_ask_record_mange.check_repeat_scope(pi_Ask_Scope_Id               => :ask_scope_id,
                                                pi_Object_Id                  => :ask_record_id,
                                                pi_OBJECT_TYPE                => 'HZ',
                                                pi_Cooperation_Classification => :cooperation_classification,
                                                pi_Cooperation_Product_Cate   => :cooperation_product_cate,
                                                pi_COOPERATION_TYPE           => :cooperation_type);
end;]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_132_2''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[be_company_id,cooperation_product_cate,cooperation_subcategory,cooperation_classification,cooperation_type,ask_record_id,ask_scope_id,object_type,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_132_2''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_132_2'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[be_company_id,cooperation_product_cate,cooperation_subcategory,cooperation_classification,cooperation_type,ask_record_id,ask_scope_id,object_type,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.log_id,
       cu.company_user_name oper_user_name,
       goper.group_dict_name oper_code_desc,
       substr(gs.group_dict_name,0,instr(gs.group_dict_name,'+')-1) FLOW_NODE_NAME_AF,
       substr(gs.group_dict_name,instr(gs.group_dict_name,'+')+1,length(gs.group_dict_name)) FLOW_NODE_STATUS_DESC_AF,
       a.oper_time,
       a.remarks,
       a.ask_record_id
  from t_factory_ask_oper_log a
 inner join sys_group_dict goper
    on goper.group_dict_value = upper(a.oper_code)
   and goper.group_dict_type = 'DICT_FLOW_STATUS'
 inner join sys_group_dict gs
    on gs.group_dict_value = a.status_af_oper
   and gs.group_dict_type = 'FACTORY_ASK_FLOW'
   inner join sys_company_user cu
   on cu.user_id=a.oper_user_id and cu.company_id=a.oper_user_company_id
 where a.ask_record_id = :ask_record_id
   and a.status_af_oper in ('CA01',
                            'CA00',
                            'CA02',
                            'CA03',
                            'FA12',
                            'FA21',
                            'FA22',
                            'FA31',
                            'FA32',
                            'FA33')
 order by a.oper_time desc]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_133''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ask_record_id,log_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_133''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_133'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ask_record_id,log_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.log_id,
       (select company_user_name from sys_company_user where user_id =a.oper_user_id and company_id=a.oper_user_company_id) oper_user_name,
       goper.group_dict_name oper_code_desc,
       substr(gs.group_dict_name,0,instr(gs.group_dict_name,'+')-1) FLOW_NODE_NAME_AF,
       substr(gs.group_dict_name,instr(gs.group_dict_name,'+')+1,length(gs.group_dict_name)) FLOW_NODE_STATUS_DESC_AF,
       a.oper_time,
       a.remarks,
       a.ask_record_id
  from t_factory_ask_oper_log a
  inner join sys_group_dict goper
    on goper.group_dict_value = upper(a.oper_code)
   and goper.group_dict_type = 'DICT_FLOW_STATUS'
  inner join sys_group_dict gs
    on gs.group_dict_value = a.status_af_oper
   and gs.group_dict_type = 'FACTORY_ASK_FLOW'
 where a.ask_record_id = :ask_record_id
 order by a.oper_time desc]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_133_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ask_record_id,log_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_133_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_133_1'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ask_record_id,log_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_coop_supp_list();
  @strresult := v_sql;
END;}
--原代码
/*WITH DIC AS
 (SELECT GROUP_DICT_NAME, GROUP_DICT_VALUE, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT (CASE
         WHEN TAR.COLLECTION = 1 THEN
          '收藏'
       END) COLLECTION,
       TAR.COOR_ASK_FLOW_STATUS,
       TAR.CREATE_DATE COOP_APPLY_DATE,
       TAR.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT LISTAGG(Y.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TAR.ASK_RECORD_ID
                   AND COMPANY_ID = DECODE(TAR.ORIGIN, 'MA', TAR.BE_COMPANY_ID, TAR.COMPANY_ID)) Z
         INNER JOIN DIC Y
            ON Z.TMP = Y.GROUP_DICT_VALUE
           AND Y.GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       TAR.COOPERATION_MODEL,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE TAR.COOPERATION_MODEL = GROUP_DICT_VALUE
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       SUBSTR(STATUS, 1, INSTR(STATUS, '+') - 1) FLOW_NODE_NAME,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       SAPPLY_USER,
       SAPPLY_PHONE,
       (SELECT LISTAGG(W.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_TYPE TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TAR.ASK_RECORD_ID) X
         INNER JOIN DIC W
            ON X.TMP = W.GROUP_DICT_VALUE
           AND W.GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC,
       TAR.COMPANY_ADDRESS,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID =
               DECODE(TAR.ORIGIN, 'MA', TAR.BE_COMPANY_ID, TAR.COMPANY_ID)
           AND USER_ID = TAR.CREATE_ID) CREATOR,
       TAR.CREATE_DATE CREATE_TIME,
       TAR.ASK_RECORD_ID,
       TAR.ASK_USER_ID,
       TAR.COMPANY_ID
  FROM (SELECT A.*,
               (SELECT GROUP_DICT_NAME
                  FROM DIC
                 WHERE GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW'
                   AND GROUP_DICT_VALUE =
                       NVL((SELECT STATUS_AF_OPER
                             FROM (SELECT STATUS_AF_OPER
                                     FROM SCMDATA.T_FACTORY_ASK_OPER_LOG
                                    WHERE ASK_RECORD_ID = A.ASK_RECORD_ID
                                    ORDER BY OPER_TIME DESC)
                            WHERE ROWNUM < 2),
                           A.COOR_ASK_FLOW_STATUS)) STATUS
          FROM SCMDATA.T_ASK_RECORD A
         WHERE BE_COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND INSTR('CA03,CA00,', COOR_ASK_FLOW_STATUS || ',') = 0
           AND {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'EXISTS (SELECT 1
                  FROM SCMDATA.T_ASK_SCOPE B
                 WHERE COMPANY_ID = DECODE(A.ORIGIN, ''MA'', A.BE_COMPANY_ID, A.COMPANY_ID)
                   AND OBJECT_ID = A.ASK_RECORD_ID
                   AND SCMDATA.INSTR_PRIV(%coop_class_priv%,COOPERATION_CLASSIFICATION,'','')>0)';
  END IF;

  @StrResult := V_TMPSQL;
END;}) TAR
 ORDER BY COLLECTION, COOP_APPLY_DATE DESC  */]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_150''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,COOR_ASK_FLOW_STATUS,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_MODEL,PRODUCTION_MODE,BE_COMPANY_ID,ASK_USER_ID,COMPANY_ID,FACTORY_ASK_ID,COOPERATION_PRODUCT_CATE]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_150''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_150'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,COOR_ASK_FLOW_STATUS,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_MODEL,PRODUCTION_MODE,BE_COMPANY_ID,ASK_USER_ID,COMPANY_ID,FACTORY_ASK_ID,COOPERATION_PRODUCT_CATE]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.company_id,a.logo,a.company_name,a.logn_name,a.tips,
       a.is_open,a.attributor_id,nvl(c.COMPANY_USER_NAME,b.username) attributor,a.create_time,dp.province || dci.city || dc.county area,a.address,
       a.product,a.rival,a.licence_type,a.licence_num
  from (select * from scmdata.sys_company WHERE LOGN_NAME=%ASS_ASK_COMPANY_NAME%) a
 left join sys_user b on a.attributor_id=b.user_id
 left join sys_company_user c on b.user_id=c.user_id and a.company_id=c.company_id
   left join scmdata.dic_province dp
    on dp.provinceid = a.company_province
  left join scmdata.dic_county dc
    on a.company_county = dc.countyid
  left join scmdata.dic_city dci
    on dci.cityno = a.company_city]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_150_0''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',0,q''[]'',q''[]'',q''[]'',q''[]'',q''[COMPANY_ID]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_150_0''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_150_0'',q''[]'',q''[]'',,q''[]'',0,q''[]'',q''[]'',q''[]'',q''[]'',q''[COMPANY_ID]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[SELECT SCMDATA.F_GETKEYID_PLAT('CA', 'seq_ca') FACTORY_ASK_ID FROM DUAL]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_factory_ask(p_type => 0);
  @strresult := v_sql;
END;}
--原代码
/*WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT),
COMP AS
 (SELECT COMPANY_ID, LOGN_NAME, COMPANY_NAME FROM SCMDATA.SYS_COMPANY)
SELECT (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID =(SELECT COMPANY_DEPT_ID
                            FROM SYS_COMPANY_USER_DEPT
                           WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
                             AND USER_ID = %CURRENT_USERID%)) CHECK_DEPT_NAME,
       TFA.ASK_DATE FACTORY_ASK_DATE,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND USER_ID = %CURRENT_USERID%) CHECKAPPLY_PERSON,
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = %CURRENT_USERID%) CHECKAPPLY_PHONE,
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.COMPANY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.COMPANY_COUNTY) PCC,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.FACTORY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.FACTORY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.FACTORY_COUNTY) FPCC,
       TFA.COMPANY_ADDRESS,
       TFA.ASK_ADDRESS,
       TFA.FACTORY_NAME,
       TFA.CONTACT_NAME,
       TFA.CONTACT_PHONE,
       TFA.ASK_FILES,
       'PRODUCT_TYPE' COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE = 'PRODUCT_TYPE') COOPERATION_TYPE_DESC,
       TFA.COOPERATION_MODEL,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       TFA.SOCIAL_CREDIT_CODE,
       TFA.RELA_SUPPLIER_ID,
       TFA.ASK_SAY CHECKAPPLY_INTRO,
       TFA.ASK_USER_DEPT_ID,
       TFA.FACTORY_ASK_ID,
       TFA.COMPANY_PROVINCE,
       TFA.COMPANY_CITY,
       TFA.COMPANY_COUNTY,
       TFA.FACTORY_PROVINCE,
       TFA.FACTORY_CITY,
       TFA.FACTORY_COUNTY,
       TFA.COOPERATION_COMPANY_ID,
       TAR.ORIGIN
  FROM (SELECT *
          FROM SCMDATA.T_FACTORY_ASK
         WHERE ASK_RECORD_ID = :ASK_RECORD_ID) TFA
  LEFT JOIN SCMDATA.T_ASK_RECORD TAR
         ON TFA.ASK_RECORD_ID = TAR.ASK_RECORD_ID
 ORDER BY TFA.CREATE_DATE DESC*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[--czh 20211016重构代码
DECLARE
  p_fa_rec scmdata.t_factory_ask%ROWTYPE;
BEGIN
  --验厂申请
  --申请信息
  p_fa_rec.ask_date          := :factory_ask_date;
  p_fa_rec.is_urgent         := :is_urgent;
  p_fa_rec.cooperation_model := :cooperation_model;
  p_fa_rec.product_type      := :product_type;
  p_fa_rec.ask_say           := :checkapply_intro;
  --供应商基本信息
  p_fa_rec.factory_ask_id       := :factory_ask_id;
  p_fa_rec.company_name         := :ask_company_name;
  p_fa_rec.company_abbreviation := :company_abbreviation;
  --p_fa_rec.social_credit_code    := :social_credit_code;
  p_fa_rec.company_province := :company_province;
  p_fa_rec.company_city     := :company_city;
  p_fa_rec.company_county   := :company_county;
  p_fa_rec.company_address  := nvl(:company_address, :pcc);
  p_fa_rec.factory_name     := :factory_name;
  p_fa_rec.factory_province := :company_province;
  p_fa_rec.factory_city     := :company_city;
  p_fa_rec.factory_county   := :company_county;
  p_fa_rec.ask_address      := nvl(:ask_address, :fpcc);
  p_fa_rec.legal_representative  := :legal_representative;
  p_fa_rec.company_contact_phone := :company_contact_phone;
  p_fa_rec.contact_name          := :ask_user_name;
  p_fa_rec.contact_phone         := :ask_user_phone;
  p_fa_rec.company_type          := :company_type;
  p_fa_rec.brand_type            := :brand_type;
  p_fa_rec.cooperation_brand     := :cooperation_brand;
  p_fa_rec.com_manufacturer      := :com_manufacturer;
  p_fa_rec.certificate_file      := :certificate_file;
  p_fa_rec.supplier_gate         := :supplier_gate;
  p_fa_rec.supplier_office       := :supplier_office;
  p_fa_rec.supplier_site         := :supplier_site;
  p_fa_rec.supplier_product      := :supplier_product;
  p_fa_rec.ask_user_id           := %current_userid%;
  p_fa_rec.update_id             := %current_userid%;
  p_fa_rec.update_date           := SYSDATE;
  p_fa_rec.rela_supplier_id      := :rela_supplier_id;
  p_fa_rec.product_link          := :product_link;
  p_fa_rec.memo               := :remarks;
  --生产信息
  p_fa_rec.worker_num          := :worker_num;
  p_fa_rec.machine_num         := :machine_num;
  p_fa_rec.reserve_capacity    := rtrim(:reserve_capacity,'%');
  p_fa_rec.product_efficiency  := rtrim(:product_efficiency,'%');
  p_fa_rec.work_hours_day      := :work_hours_day;

  scmdata.pkg_ask_record_mange.p_save_factory_ask(p_fa_rec => p_fa_rec);

END;


/*--czh 重构代码
DECLARE
  p_fa_rec scmdata.t_factory_ask%ROWTYPE;
  p_fo_rec scmdata.t_factory_ask_out%ROWTYPE;
BEGIN
  --验厂申请
  --申请信息
  p_fa_rec.ask_date          := :factory_ask_date;
  p_fa_rec.is_urgent         := :is_urgent;
  p_fa_rec.cooperation_model := :cooperation_model;
  p_fa_rec.product_type      := :product_type;
  p_fa_rec.ask_say           := :checkapply_intro;

  --供应商基本信息
  p_fa_rec.factory_ask_id       := :factory_ask_id;
  p_fa_rec.company_name         := :ask_company_name;
  p_fa_rec.company_abbreviation := :company_abbreviation;
  --p_fa_rec.social_credit_code    := :social_credit_code;
  p_fa_rec.company_province      := :company_province;
  p_fa_rec.company_city          := :company_city;
  p_fa_rec.company_county        := :company_county;
  p_fa_rec.company_address       := :pcc;
  p_fa_rec.ask_address           := :company_address;
  p_fa_rec.legal_representative  := :legal_representative;
  p_fa_rec.company_contact_phone := :company_contact_phone;
  p_fa_rec.contact_name          := :contact_name;
  p_fa_rec.contact_phone         := :contact_phone;
  p_fa_rec.company_type          := :company_type;
  p_fa_rec.brand_type            := :brand_type;
  p_fa_rec.cooperation_brand     := :cooperation_brand;
  p_fa_rec.com_manufacturer      := :com_manufacturer;
  p_fa_rec.certificate_file      := :certificate_file;
  p_fa_rec.supplier_gate         := :supplier_gate;
  p_fa_rec.supplier_office       := :supplier_office;
  p_fa_rec.supplier_site         := :supplier_site;
  p_fa_rec.supplier_product      := :supplier_product;
  p_fa_rec.ask_user_id           := %current_userid%;
  p_fa_rec.update_id             := %current_userid%;
  p_fa_rec.update_date           := SYSDATE;
  p_fa_rec.rela_supplier_id      := :rela_supplier_id;
  p_fa_rec.product_link          := :product_link;

  /*
  p_fa_rec.ask_files             := :ask_files;
  p_fa_rec.cooperation_method    := :cooperation_method;
  p_fa_rec.company_mold          := :company_mold;
  p_fa_rec.origin                   := :origin;
  p_fa_rec.create_id                := :create_id;
  p_fa_rec.create_date              := :create_date;
  p_fa_rec.remarks                  := :remarks;
  p_fa_rec.ask_company_id           := :ask_company_id;
  p_fa_rec.ask_record_id            := :ask_record_id;
  p_fa_rec.factrory_ask_flow_status := :factrory_ask_flow_status;
  p_fa_rec.factory_ask_type         := :factory_ask_type;
  p_fa_rec.cooperation_type         := :cooperation_type;
  p_fa_rec.cooperation_company_id   := :cooperation_company_id;
  p_fa_rec.ask_user_dept_id         := :ask_user_dept_id;*/

  --工厂信息
  /* IF :factory_ask_out_id IS NULL THEN
    p_fo_rec.factory_ask_out_id := scmdata.f_get_uuid();
  ELSE
    p_fo_rec.factory_ask_out_id := :factory_ask_out_id;
  END IF;
  p_fo_rec.factory_ask_id         := :factory_ask_id; --外键
  p_fo_rec.company_id             := :company_id;
  p_fo_rec.factory_name := CASE
                             WHEN :com_manufacturer = '00' THEN
                              :ask_company_name
                             ELSE
                              :factory_name
                           END;
  p_fo_rec.factory_abbreviation := CASE
                                     WHEN :com_manufacturer = '00' THEN
                                      :company_abbreviation
                                     ELSE
                                      nvl(:factory_abbreviation, '')
                                   END;
  p_fo_rec.fa_social_credit_code := CASE
                                      WHEN :com_manufacturer = '00' THEN
                                       :social_credit_code
                                      ELSE
                                       nvl(:fa_social_credit_code, '')
                                    END;
  p_fo_rec.factory_province := CASE
                                 WHEN :com_manufacturer = '00' THEN
                                  :company_province
                                 ELSE
                                  nvl(:factory_province, '')
                               END;
  p_fo_rec.factory_city := CASE
                             WHEN :com_manufacturer = '00' THEN
                              :company_city
                             ELSE
                              nvl(:factory_city, '')
                           END;
  p_fo_rec.factory_county := CASE
                               WHEN :com_manufacturer = '00' THEN
                                :company_county
                               ELSE
                                nvl(:factory_county, '')
                             END;
  p_fo_rec.factory_detail_adress := CASE
                                      WHEN :com_manufacturer = '00' THEN
                                       :company_address
                                      ELSE
                                       nvl(:factory_detail_adress, '')
                                    END;
  p_fo_rec.factory_representative := CASE
                                       WHEN :com_manufacturer = '00' THEN
                                        :legal_representative
                                       ELSE
                                        nvl(:factory_representative, '')
                                     END;
  p_fo_rec.factory_contact_phone := CASE
                                      WHEN :com_manufacturer = '00' THEN
                                       :company_contact_phone
                                      ELSE
                                       nvl(:fa_com_contact_phone, '')
                                    END;
  p_fo_rec.fa_contact_name := CASE
                                WHEN :com_manufacturer = '00' THEN
                                 :contact_name
                                ELSE
                                 nvl(:fa_contact_name, '')
                              END;
  p_fo_rec.fa_contact_phone := CASE
                                 WHEN :com_manufacturer = '00' THEN
                                  :contact_phone
                                 ELSE
                                  nvl(:fa_contact_phone, '')
                               END;
  --p_fo_rec.factory_contact_phone  := :fa_com_contact_phone;
  p_fo_rec.factory_type := CASE
                             WHEN :com_manufacturer = '00' THEN
                              :company_type
                             ELSE
                              nvl(:factory_type, '')
                           END;

  p_fo_rec.factory_coop_model := :factory_coop_model;

  p_fo_rec.fa_brand_type := CASE
                              WHEN :com_manufacturer = '00' THEN
                               :brand_type
                              ELSE
                               nvl(:fa_brand_type, '')
                            END;
  p_fo_rec.factory_coop_brand := CASE
                                   WHEN :com_manufacturer = '00' THEN
                                    :cooperation_brand
                                   ELSE
                                    nvl(:factory_coop_brand, '')
                                 END;
  IF :com_manufacturer = '00' THEN
    IF :product_link IS NULL THEN
      raise_application_error(-20002,
                              '生产工厂=“本厂”时，工厂基本信息栏中生产环节为必填！');
    ELSE
      p_fo_rec.product_link := :product_link;
    END IF;
  ELSE
    p_fo_rec.product_link := :product_link;
  END IF;

  p_fo_rec.fa_rela_supplier_id := :fa_rela_supplier_id; --关联供应商
  p_fo_rec.fa_certificate_file := CASE
                                    WHEN :com_manufacturer = '00' THEN
                                     :certificate_file
                                    ELSE
                                     nvl(:fa_certificate_file, '')
                                  END;

  p_fo_rec.factory_gate := CASE
                             WHEN :com_manufacturer = '00' THEN
                              :supplier_gate
                             ELSE
                              nvl(:factory_gate, '')
                           END;
  p_fo_rec.factory_office := CASE
                               WHEN :com_manufacturer = '00' THEN
                                :supplier_office
                               ELSE
                                nvl(:factory_office, '')
                             END;
  p_fo_rec.factory_site := CASE
                             WHEN :com_manufacturer = '00' THEN
                              :supplier_site
                             ELSE
                              nvl(:factory_site, '')
                           END;

  p_fo_rec.factory_product := CASE
                                WHEN :com_manufacturer = '00' THEN
                                 :supplier_product
                                ELSE
                                 nvl(:factory_product, '')
                              END;
  p_fo_rec.remarks         := :remarks;
  p_fo_rec.create_id       := :user_id;
  p_fo_rec.create_time     := SYSDATE;
  p_fo_rec.update_id       := :user_id;
  p_fo_rec.update_time     := SYSDATE;*/

  scmdata.pkg_ask_record_mange.p_save_factory_ask(p_fa_rec => p_fa_rec);

END;
*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_150_3''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 4,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,is_urgent,product_type,company_type,cooperation_brand,com_manufacturer,factory_type,factory_coop_brand,product_link,factory_coop_model,factory_ask_out_id,rela_supplier_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_150_3''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 4,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_150_3'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,is_urgent,product_type,company_type,cooperation_brand,com_manufacturer,factory_type,factory_coop_brand,product_link,factory_coop_model,factory_ask_out_id,rela_supplier_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
  v_origin varchar2(32);
BEGIN
  select max(t.origin) into v_origin from scmdata.t_ask_record t where t.be_company_id = %default_company_id% and t.ask_record_id = :ask_record_id;
  v_sql      := pkg_ask_record_mange.f_query_coop_fp_supplier(p_type => 1,p_origin => v_origin);
  @strresult := v_sql;
END;}
--原代码
/*WITH DIC AS
 (SELECT GROUP_DICT_TYPE, GROUP_DICT_VALUE, GROUP_DICT_NAME
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT COMPANY_NAME ASK_COMPANY_NAME, --公司名称
       SAPPLY_USER, --申请人
       SAPPLY_PHONE, --申请人手机
       SOCIAL_CREDIT_CODE,
       ((SELECT PROVINCE
           FROM SCMDATA.DIC_PROVINCE
          WHERE PROVINCEID = COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = COMPANY_CITY) ||
       (SELECT COUNTY
           FROM SCMDATA.DIC_COUNTY
          WHERE COUNTYID = COMPANY_COUNTY)) PCC, --所在区域
       COMPANY_ADDRESS, --详细地址
       CERTIFICATE_FILE, --营业执照
       OTHER_FILE, --其他附件
       COOPERATION_TYPE, --意向合作类型
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_TYPE='COOPERATION_TYPE'
           AND GROUP_DICT_VALUE=COOPERATION_TYPE) COOPERATION_TYPE_DESC,--意向合作类型显示
       COOPERATION_MODEL, --意向合作模式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE'
           AND GROUP_DICT_VALUE != 'SUPPLY_TYPE') COOPERATION_MODEL_DESC, --意向合作模式显示
       ASK_SAY, --合作申请说明
       ASK_RECORD_ID
  FROM SCMDATA.T_ASK_RECORD
 WHERE ASK_RECORD_ID = :ASK_RECORD_ID*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[--czh 重构逻辑
DECLARE
  p_ar_rec           scmdata.t_ask_record%ROWTYPE;
  v_company_province VARCHAR2(48);
  v_company_city     VARCHAR2(48);
  v_company_county   VARCHAR2(48);
BEGIN
  SELECT company_province, company_city, company_county
    INTO v_company_province, v_company_city, v_company_county
    FROM scmdata.t_ask_record
   WHERE ask_record_id = :ask_record_id;

  p_ar_rec.ask_record_id         := :ask_record_id;
  p_ar_rec.social_credit_code    := :social_credit_code;
  p_ar_rec.company_province      := nvl(:company_province,
                                        v_company_province);
  p_ar_rec.company_city          := nvl(:company_city, v_company_city);
  p_ar_rec.company_county        := nvl(:company_county, v_company_county);
  p_ar_rec.company_address       := :area || :company_address;
  p_ar_rec.certificate_file      := :certificate_file;
  p_ar_rec.other_file            := :other_file;
  p_ar_rec.cooperation_model     := :cooperation_model;
  p_ar_rec.ask_say               := :ask_say;
  p_ar_rec.sapply_user           := :sapply_user;
  p_ar_rec.sapply_phone          := :sapply_phone;
  p_ar_rec.update_id             := %current_userid%;
  p_ar_rec.update_date           := SYSDATE;
  p_ar_rec.company_name          := :ask_company_name;
  p_ar_rec.cooperation_type      := :cooperation_type;
  p_ar_rec.company_abbreviation  := :company_abbreviation;
  p_ar_rec.legal_representative  := :legal_representative;
  p_ar_rec.company_contact_phone := :company_contact_phone;
  p_ar_rec.company_type          := :company_type;
  p_ar_rec.brand_type            := :brand_type;
  p_ar_rec.cooperation_brand     := :cooperation_brand;
  p_ar_rec.product_link          := :product_link;
  p_ar_rec.supplier_gate         := :supplier_gate;
  p_ar_rec.supplier_office       := :supplier_office;
  p_ar_rec.supplier_site         := :supplier_site;
  p_ar_rec.supplier_product      := :supplier_product;
  p_ar_rec.sapply_user          := :ask_user_name;
  p_ar_rec.sapply_phone         := :ask_user_phone;
  p_ar_rec.remarks               := :remarks;
  scmdata.pkg_ask_record_mange.p_check_data_by_save(p_ar_rec => p_ar_rec,
                                                    p_type   => 1);

  scmdata.pkg_ask_record_mange.p_update_t_ask_record(p_ar_rec => p_ar_rec);

END;

--原有逻辑
/*UPDATE SCMDATA.T_ASK_RECORD
   SET   COMPANY_PROVINCE    = NVL(:COMPANY_PROVINCE, (SELECT COMPANY_PROVINCE FROM SCMDATA.T_ASK_RECORD WHERE ASK_RECORD_ID=:ASK_RECORD_ID))
       , COMPANY_CITY        = NVL(:COMPANY_CITY, (SELECT COMPANY_CITY FROM SCMDATA.T_ASK_RECORD WHERE ASK_RECORD_ID=:ASK_RECORD_ID))
       , COMPANY_COUNTY      = NVL(:COMPANY_COUNTY, (SELECT COMPANY_COUNTY FROM SCMDATA.T_ASK_RECORD WHERE ASK_RECORD_ID=:ASK_RECORD_ID))
       , COMPANY_ADDRESS     = :AREA || :COMPANY_ADDRESS
       , CERTIFICATE_FILE    = :CERTIFICATE_FILE
       , OTHER_FILE          = :OTHER_FILE
       , COOPERATION_MODEL   = :COOPERATION_MODEL
       , ASK_SAY             = :ASK_SAY
       , SAPPLY_USER         = :SAPPLY_USER
       , SAPPLY_PHONE        = :SAPPLY_PHONE
       , UPDATE_ID           = %CURRENT_USERID%
       , UPDATE_DATE         = SYSDATE
       , COMPANY_NAME        = :ASK_COMPANY_NAME
       , COOPERATION_TYPE    = :COOPERATION_TYPE
 WHERE ASK_RECORD_ID = :ASK_RECORD_ID*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_150_6''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,PRODUCTION_MODE,COOPERATION_MODEL,COOPERATION_METHOD,COOPERATION_SUBCATEGORY,COOPERATION_CLASSIFICATION,COOPERATION_TYPE,coor_ask_flow_status]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_150_6''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_150_6'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,PRODUCTION_MODE,COOPERATION_MODEL,COOPERATION_METHOD,COOPERATION_SUBCATEGORY,COOPERATION_CLASSIFICATION,COOPERATION_TYPE,coor_ask_flow_status]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[--czh add
call scmdata.pkg_ask_record_mange.p_delete_t_ask_record(p_ask_record_id => :ask_record_id)

--原有逻辑
/*
DECLARE
  JUDGE NUMBER(1);
BEGIN
	SELECT COUNT(1) INTO JUDGE
	  FROM SCMDATA.T_FACTORY_ASK
	 WHERE ASK_RECORD_ID=:ASK_RECORD_ID;

	IF JUDGE = 0 THEN
		DELETE FROM SCMDATA.T_ASK_RECORD WHERE ASK_RECORD_ID=:ASK_RECORD_ID;
	ELSE
		RAISE_APPLICATION_ERROR(-20002,'已有单据在流程中不能删除！');
  END IF;
END;*/]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[--czh 重构逻辑
DECLARE
  p_ar_rec scmdata.t_ask_record%ROWTYPE;
  v_company_id VARCHAR2(32);
BEGIN
  SELECT MAX(company_id) INTO v_company_id
    FROM scmdata.sys_company
   WHERE licence_num = :social_credit_code;

  p_ar_rec.ask_record_id        := :ask_record_id;
  p_ar_rec.company_id           := nvl(v_company_id,'');
  p_ar_rec.company_name         := :ask_company_name;
  p_ar_rec.be_company_id        := %default_company_id%;
  p_ar_rec.company_province     := :company_province;
  p_ar_rec.company_city         := :company_city;
  p_ar_rec.company_county       := :company_county;
  p_ar_rec.company_address      := :company_address;
  p_ar_rec.ask_say              := :ask_say;
  p_ar_rec.ask_date             := :ask_date;
  p_ar_rec.ask_user_id          := :user_id;
  p_ar_rec.certificate_file     := :certificate_file;
  p_ar_rec.other_file           := :other_file;
  p_ar_rec.sapply_user          := :ask_user_name;
  p_ar_rec.sapply_phone         := :ask_user_phone;
  p_ar_rec.create_id            := %current_userid%;
  p_ar_rec.create_date          := SYSDATE;
  p_ar_rec.update_id            := %current_userid%;
  p_ar_rec.update_date          := SYSDATE;
  p_ar_rec.coor_ask_flow_status := 'CA00';
  p_ar_rec.social_credit_code   := :social_credit_code;
  p_ar_rec.cooperation_model    := :cooperation_model;
  p_ar_rec.cooperation_type     := :cooperation_type;
  p_ar_rec.origin               := 'MA';
  --p_ar_rec.cooperation_classification := :cooperation_classification;
  --p_ar_rec.cooperation_subcategory    := :cooperation_subcategory;
  p_ar_rec.company_abbreviation  := :company_abbreviation;
  p_ar_rec.legal_representative  := :legal_representative;
  p_ar_rec.company_contact_phone := :company_contact_phone;
  p_ar_rec.company_type          := :company_type;
  p_ar_rec.brand_type            := :brand_type;
  p_ar_rec.cooperation_brand     := :cooperation_brand;
  p_ar_rec.product_link          := :product_link;
  p_ar_rec.supplier_gate         := :supplier_gate;
  p_ar_rec.supplier_office       := :supplier_office;
  p_ar_rec.supplier_site         := :supplier_site;
  p_ar_rec.supplier_product      := :supplier_product;
  p_ar_rec.remarks               := :remarks;
  /*
  p_ar_rec.ask_user_id := :user_id;
    p_ar_rec.production_mode       := :production_mode;
    p_ar_rec.remarks               := :remarks;
    p_ar_rec.collection            := :collection;
    p_ar_rec.origin                := :origin;
    p_ar_rec.cooperation_statement := :cooperation_statement;
    */

  scmdata.pkg_ask_record_mange.p_check_data_by_save(p_ar_rec => p_ar_rec,
                                                    p_type   => 1);

  scmdata.pkg_ask_record_mange.p_insert_t_ask_record(p_ar_rec => p_ar_rec);

END;
--原有逻辑
/*
DECLARE
  JUDGE NUMBER(1);
BEGIN
  IF :COOPERATION_TYPE <> 'PRODUCT_TYPE' THEN
    RAISE_APPLICATION_ERROR(-20002,'除成品供应商外，其余合作类型未开放！');
  END IF;

  SELECT NVL(MAX(1), 0)
    INTO JUDGE
    FROM SCMDATA.T_ASK_RECORD
   WHERE BE_COMPANY_ID = %DEFAULT_COMPANY_ID%
     AND COMPANY_NAME = :ASK_COMPANY_NAME
     AND COOR_ASK_FLOW_STATUS <> 'CA00';
  IF JUDGE = 0 THEN
    SELECT COUNT(1)
       INTO JUDGE
      FROM (SELECT DISTINCT FIRST_VALUE(COMPANY_NAME) OVER(PARTITION BY ASK_RECORD_ID ORDER BY CREATE_DATE DESC) COMPANY_NAME
              FROM SCMDATA.T_FACTORY_ASK
             WHERE FACTRORY_ASK_FLOW_STATUS NOT IN ('CA01','FA01','FA12','FA21','FA22','FA31','FA32','FA33')
               AND COMPANY_ID = %DEFAULT_COMPANY_ID%
               AND ROWNUM < 2)
     WHERE COMPANY_NAME = :ASK_COMPANY_NAME;
    IF JUDGE = 0 THEN
      SELECT COUNT(1)
       INTO JUDGE
      FROM (SELECT DISTINCT FIRST_VALUE(COMPANY_NAME) OVER(PARTITION BY ASK_RECORD_ID ORDER BY CREATE_DATE DESC) COMPANY_NAME
              FROM SCMDATA.T_FACTORY_ASK
             WHERE FACTRORY_ASK_FLOW_STATUS IN ('FA12','FA21','FA22','FA31','FA32','FA33')
               AND COMPANY_ID = %DEFAULT_COMPANY_ID%
               AND ROWNUM < 2)
     WHERE COMPANY_NAME = :ASK_COMPANY_NAME;
      IF JUDGE > 0 THEN
        RAISE_APPLICATION_ERROR(-20002, '公司名称与待建档、已建档的供应商名称重复！');
      END IF;
    ELSE
      RAISE_APPLICATION_ERROR(-20002, '公司名称与准入流程中的公司名称存在重复！');
    END IF;
  ELSE
    RAISE_APPLICATION_ERROR(-20002, '公司名称与意向合作供应商清单的公司名称重复！');
  END IF;

  INSERT INTO SCMDATA.T_ASK_RECORD
    (ASK_RECORD_ID,
     COMPANY_ID,
     COMPANY_NAME,
     BE_COMPANY_ID,
     COMPANY_PROVINCE,
     COMPANY_CITY,
     COMPANY_COUNTY,
     COMPANY_ADDRESS,
     ASK_DATE,
     ASK_SAY,
     CERTIFICATE_FILE,
     OTHER_FILE,
     SAPPLY_USER,
     SAPPLY_PHONE,
     CREATE_ID,
     CREATE_DATE,
     UPDATE_ID,
     UPDATE_DATE,
     COOR_ASK_FLOW_STATUS,
     SOCIAL_CREDIT_CODE,
     COOPERATION_MODEL,
     COOPERATION_TYPE,
     ORIGIN)
  VALUES
    (:ASK_RECORD_ID,
     NVL((SELECT COMPANY_ID
            FROM SCMDATA.SYS_COMPANY
           WHERE LICENCE_NUM = :SOCIAL_CREDIT_CODE),''),
     :ASK_COMPANY_NAME,
     %default_company_id%,
     :COMPANY_PROVINCE,
     :COMPANY_CITY,
     :COMPANY_COUNTY,
     :COMPANY_ADDRESS,
     SYSDATE,
     :ASK_SAY,
     :CERTIFICATE_FILE,
     :OTHER_FILE,
     :SAPPLY_USER,
     :SAPPLY_PHONE,
     %CURRENT_USERID%,
     SYSDATE,
     %CURRENT_USERID%,
     SYSDATE,
     'CA00',
     :SOCIAL_CREDIT_CODE,
     :COOPERATION_MODEL,
     :COOPERATION_TYPE,
     'MA');
END;*/]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[SELECT SCMDATA.F_GETKEYID_PLAT('HZ', 'SEQ_T_ASK_RECORD', 99) ASK_RECORD_ID FROM DUAL]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_coop_fp_supplier(p_type => 2);
  @strresult := v_sql;
END;}

--原有逻辑
/*WITH DIC AS
 (SELECT GROUP_DICT_TYPE, GROUP_DICT_VALUE, GROUP_DICT_NAME
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT Z.COMPANY_NAME ASK_COMPANY_NAME,
       Z.SAPPLY_USER,
       Z.SAPPLY_PHONE,
       Z.SOCIAL_CREDIT_CODE,
       ((SELECT PROVINCE
           FROM SCMDATA.DIC_PROVINCE
          WHERE PROVINCEID = Z.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = Z.COMPANY_CITY) ||
       (SELECT COUNTY
           FROM SCMDATA.DIC_COUNTY
          WHERE COUNTYID = Z.COMPANY_COUNTY)) PCC,
       Z.COMPANY_ADDRESS,
       Z.CERTIFICATE_FILE,
       Z.OTHER_FILE,
       Z.COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_TYPE='COOPERATION_TYPE'
           AND GROUP_DICT_VALUE=Z.COOPERATION_TYPE) COOPERATION_TYPE_DESC,
       Z.COOPERATION_MODEL,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = Z.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE'
           AND GROUP_DICT_VALUE != 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       Z.ASK_SAY,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = Z.COMPANY_ID
           AND USER_ID = Z.CREATE_ID) CREATOR,
       Z.CREATE_DATE,
       Z.ASK_RECORD_ID
  FROM SCMDATA.T_ASK_RECORD Z
 WHERE COOR_ASK_FLOW_STATUS = 'CA00'
   AND BE_COMPANY_ID = %DEFAULT_COMPANY_ID%
   AND CREATE_ID = %CURRENT_USERID%
ORDER BY CREATE_DATE DESC*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[--czh 重构逻辑
DECLARE
  p_ar_rec           scmdata.t_ask_record%ROWTYPE;
  v_company_province VARCHAR2(48);
  v_company_city     VARCHAR2(48);
  v_company_county   VARCHAR2(48);
BEGIN

  SELECT company_province, company_city, company_county
    INTO v_company_province, v_company_city, v_company_county
    FROM scmdata.t_ask_record
   WHERE ask_record_id = :ask_record_id;

  p_ar_rec.ask_record_id         := :ask_record_id;
  p_ar_rec.social_credit_code    := :social_credit_code;
  p_ar_rec.company_province      := nvl(:company_province,
                                        v_company_province);
  p_ar_rec.company_city          := nvl(:company_city, v_company_city);
  p_ar_rec.company_county        := nvl(:company_county, v_company_county);
  p_ar_rec.company_address       := :area || :company_address;
  p_ar_rec.certificate_file      := :certificate_file;
  p_ar_rec.other_file            := :other_file;
  p_ar_rec.cooperation_model     := :cooperation_model;
  p_ar_rec.ask_say               := :ask_say;
  p_ar_rec.sapply_user           := :sapply_user;
  p_ar_rec.sapply_phone          := :sapply_phone;
  p_ar_rec.update_id             := %current_userid%;
  p_ar_rec.update_date           := SYSDATE;
  p_ar_rec.company_name          := :ask_company_name;
  p_ar_rec.cooperation_type      := :cooperation_type;
  p_ar_rec.company_abbreviation  := :company_abbreviation;
  p_ar_rec.legal_representative  := :legal_representative;
  p_ar_rec.company_contact_phone := :company_contact_phone;
  p_ar_rec.company_type          := :company_type;
  p_ar_rec.brand_type            := :brand_type;
  p_ar_rec.cooperation_brand     := :cooperation_brand;
  p_ar_rec.product_link          := :product_link;
  p_ar_rec.supplier_gate         := :supplier_gate;
  p_ar_rec.supplier_office       := :supplier_office;
  p_ar_rec.supplier_site         := :supplier_site;
  p_ar_rec.supplier_product      := :supplier_product;
  p_ar_rec.sapply_user           := :ask_user_name;
  p_ar_rec.sapply_phone          := :ask_user_phone;
  p_ar_rec.remarks               := :remarks;
  scmdata.pkg_ask_record_mange.p_check_data_by_save(p_ar_rec => p_ar_rec,
                                                    p_type   => 1);

  scmdata.pkg_ask_record_mange.p_update_t_ask_record(p_ar_rec => p_ar_rec);

END;

--原有逻辑
/*
DECLARE
  JUDGE NUMBER(1);
BEGIN
  IF :COOPERATION_TYPE <> 'PRODUCT_TYPE' THEN
    RAISE_APPLICATION_ERROR(-20002,'除成品供应商外，其余合作类型未开放！');
  END IF;

  SELECT COUNT(1)
    INTO JUDGE
    FROM SCMDATA.T_ASK_RECORD
   WHERE BE_COMPANY_ID = %DEFAULT_COMPANY_ID%
     AND COMPANY_NAME = :ASK_COMPANY_NAME
     AND COOR_ASK_FLOW_STATUS <> 'CA00';
  IF JUDGE = 0 THEN
    SELECT COUNT(1)
       INTO JUDGE
      FROM (SELECT DISTINCT FIRST_VALUE(COMPANY_NAME) OVER(PARTITION BY ASK_RECORD_ID ORDER BY CREATE_DATE DESC) COMPANY_NAME
              FROM SCMDATA.T_FACTORY_ASK
             WHERE FACTRORY_ASK_FLOW_STATUS NOT IN ('CA01','FA01','FA03','FA21','FA33')
               AND COMPANY_ID = %DEFAULT_COMPANY_ID%)
     WHERE COMPANY_NAME = :ASK_COMPANY_NAME;
    IF JUDGE = 0 THEN
      SELECT COUNT(1)
        INTO JUDGE
        FROM SCMDATA.T_SUPPLIER_INFO
       WHERE SUPPLIER_COMPANY_NAME = :ASK_COMPANY_NAME;
      IF JUDGE > 0 THEN
        RAISE_APPLICATION_ERROR(-20002, '公司名称与待建档、已建档的供应商名称重复！');
      END IF;
    ELSE
      RAISE_APPLICATION_ERROR(-20002, '公司名称与准入流程中的公司名称存在重复！');
    END IF;
  ELSE
    RAISE_APPLICATION_ERROR(-20002, '公司名称与意向合作供应商清单的公司名称重复！');
  END IF;
  UPDATE SCMDATA.T_ASK_RECORD
     SET   SOCIAL_CREDIT_CODE  = :SOCIAL_CREDIT_CODE,
           COMPANY_PROVINCE    = NVL(:COMPANY_PROVINCE, (SELECT COMPANY_PROVINCE FROM SCMDATA.T_ASK_RECORD WHERE ASK_RECORD_ID=:ASK_RECORD_ID)),
           COMPANY_CITY        = NVL(:COMPANY_CITY, (SELECT COMPANY_CITY FROM SCMDATA.T_ASK_RECORD WHERE ASK_RECORD_ID=:ASK_RECORD_ID)),
           COMPANY_COUNTY      = NVL(:COMPANY_COUNTY, (SELECT COMPANY_COUNTY FROM SCMDATA.T_ASK_RECORD WHERE ASK_RECORD_ID=:ASK_RECORD_ID)),
           COMPANY_ADDRESS     = :AREA || :COMPANY_ADDRESS,
           CERTIFICATE_FILE    = :CERTIFICATE_FILE,
           OTHER_FILE          = :OTHER_FILE,
           COOPERATION_MODEL   = :COOPERATION_MODEL,
           ASK_SAY             = :ASK_SAY,
           SAPPLY_USER         = :SAPPLY_USER,
           SAPPLY_PHONE        = :SAPPLY_PHONE,
           UPDATE_ID           = %CURRENT_USERID%,
           UPDATE_DATE         = SYSDATE,
           COMPANY_NAME        = :ASK_COMPANY_NAME,
           COOPERATION_TYPE    = :COOPERATION_TYPE
 WHERE ASK_RECORD_ID = :ASK_RECORD_ID;
END;*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_151''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',2,q''[]'',q''[]'',q''[]'',q''[]'',q''[COOPERATION_MODEL,ASK_RECORD_ID]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_151''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_151'',q''[]'',q''[]'',,q''[]'',2,q''[]'',q''[]'',q''[]'',q''[]'',q''[COOPERATION_MODEL,ASK_RECORD_ID]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[DELETE FROM SCMDATA.T_ASK_SCOPE WHERE ASK_SCOPE_ID=:ASK_SCOPE_ID]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[DECLARE
BEGIN
  SCMDATA.PKG_ASK_RECORD_MANGE.CHECK_REPEAT_SCOPE(pi_Ask_Scope_Id               => ' ',
                                                  pi_Object_Id                  => :ASK_RECORD_ID,
                                                  pi_OBJECT_TYPE                => 'HZ',
                                                  pi_Cooperation_Classification => :COOPERATION_CLASSIFICATION,
                                                  pi_Cooperation_Product_Cate   => :COOPERATION_PRODUCT_CATE,
                                                  pi_COOPERATION_TYPE           => :COOPERATION_TYPE);

  INSERT INTO SCMDATA.T_ASK_SCOPE
    (ASK_SCOPE_ID,
     COMPANY_ID,
     OBJECT_ID,
     OBJECT_TYPE,
     COOPERATION_TYPE,
     COOPERATION_CLASSIFICATION,
     COOPERATION_PRODUCT_CATE,
     COOPERATION_SUBCATEGORY,
     BE_COMPANY_ID,
     UPDATE_TIME,
     UPDATE_ID,
     CREATE_ID,
     CREATE_TIME,
     PAUSE)
  VALUES
    (SCMDATA.F_GET_UUID(),
     %default_company_id%,
     :ASK_RECORD_ID,
     'HZ',
     :COOPERATION_TYPE,
     :COOPERATION_CLASSIFICATION,
     :COOPERATION_PRODUCT_CATE,
     :COOPERATION_SUBCATEGORY,
     %default_company_id%,
     SYSDATE,
     :USER_ID,
     :USER_ID,
     SYSDATE,
     0);
END;]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TAS.ASK_SCOPE_ID,
       TAS.COMPANY_ID,
       TAS.OBJECT_ID,
       TAS.OBJECT_TYPE,
       TAS.COOPERATION_CLASSIFICATION,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TAS.COOPERATION_CLASSIFICATION
           AND GROUP_DICT_TYPE = TAS.COOPERATION_TYPE) COOPERATION_CLASSIFICATION_DES,
       TAS.COOPERATION_PRODUCT_CATE,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TAS.COOPERATION_PRODUCT_CATE
           AND GROUP_DICT_TYPE = TAS.COOPERATION_CLASSIFICATION) COOPERATION_PRODUCT_CATE_DESC,
       COOPERATION_SUBCATEGORY,
       (SELECT LISTAGG(B.COMPANY_DICT_NAME, ';')
          FROM (SELECT REGEXP_SUBSTR(TAS.COOPERATION_SUBCATEGORY,'[^;]+',1,LEVEL) COL
                  FROM DUAL
                CONNECT BY LEVEL <=
                           REGEXP_COUNT(TAS.COOPERATION_SUBCATEGORY, '\;') + 1) A
         INNER JOIN SCMDATA.SYS_COMPANY_DICT B
            ON A.COL = B.COMPANY_DICT_VALUE
					 AND COMPANY_ID=%default_company_id%
           AND B.COMPANY_DICT_TYPE = TAS.COOPERATION_PRODUCT_CATE) COOPERATION_SUBCATEGORY_DESC
  FROM SCMDATA.T_ASK_SCOPE TAS
 WHERE OBJECT_ID = :ASK_RECORD_ID]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[DECLARE

BEGIN
  SCMDATA.PKG_ASK_RECORD_MANGE.CHECK_REPEAT_SCOPE(pi_Ask_Scope_Id               => :ASK_SCOPE_ID,
                                                  pi_Object_Id                  => :ASK_RECORD_ID,
                                                  pi_OBJECT_TYPE                => 'HZ',
                                                  pi_Cooperation_Classification => :COOPERATION_CLASSIFICATION,
                                                  pi_Cooperation_Product_Cate   => :COOPERATION_PRODUCT_CATE,
                                                  pi_COOPERATION_TYPE           => :COOPERATION_TYPE);
  UPDATE SCMDATA.T_ASK_SCOPE
    SET  COOPERATION_CLASSIFICATION  =   :COOPERATION_CLASSIFICATION,
         COOPERATION_PRODUCT_CATE    =   :COOPERATION_PRODUCT_CATE,
         COOPERATION_SUBCATEGORY     =   :COOPERATION_SUBCATEGORY,
         UPDATE_ID                   =   %CURRENT_USERID%,
         UPDATE_TIME                 =   SYSDATE
   WHERE ASK_SCOPE_ID=:ASK_SCOPE_ID;
END;]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_159''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',2,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_SCOPE_ID,COOPERATION_CLASSIFICATION,COOPERATION_PRODUCT_CATE,COOPERATION_SUBCATEGORY,OBJECT_ID,OBJECT_TYPE,COMPANY_ID,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_159''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_159'',q''[]'',q''[]'',,q''[]'',2,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_SCOPE_ID,COOPERATION_CLASSIFICATION,COOPERATION_PRODUCT_CATE,COOPERATION_SUBCATEGORY,OBJECT_ID,OBJECT_TYPE,COMPANY_ID,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[DELETE FROM SCMDATA.T_ASK_SCOPE WHERE ASK_SCOPE_ID=:ASK_SCOPE_ID]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[DECLARE
  STATUS VARCHAR2(8);
BEGIN
  SCMDATA.PKG_ASK_RECORD_MANGE.CHECK_REPEAT_SCOPE(pi_Ask_Scope_Id               => ' ',
                                                  pi_Object_Id                  => :FACTORY_ASK_ID,
                                                  pi_OBJECT_TYPE                => 'CA',
                                                  pi_Cooperation_Classification => :COOPERATION_CLASSIFICATION,
                                                  pi_Cooperation_Product_Cate   => :COOPERATION_PRODUCT_CATE,
                                                  pi_COOPERATION_TYPE           => :COOPERATION_TYPE);
  SELECT T.FACTRORY_ASK_FLOW_STATUS
    INTO STATUS
    FROM SCMDATA.T_FACTORY_ASK T
   WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID;

  IF STATUS NOT IN ('CA01', 'FA01', 'FA03', 'FA21', 'FA33') THEN
    RAISE_APPLICATION_ERROR(-20002,'流程中单据不可编辑！');
  END IF;

  INSERT INTO SCMDATA.T_ASK_SCOPE
    (ASK_SCOPE_ID,
     COMPANY_ID,
     OBJECT_ID,
     OBJECT_TYPE,
     COOPERATION_TYPE,
     COOPERATION_CLASSIFICATION,
     COOPERATION_PRODUCT_CATE,
     COOPERATION_SUBCATEGORY,
     BE_COMPANY_ID,
     UPDATE_TIME,
     UPDATE_ID,
     CREATE_ID,
     CREATE_TIME,
     PAUSE)
  VALUES
    (SCMDATA.F_GET_UUID(),
     (SELECT COMPANY_ID
        FROM SCMDATA.SYS_COMPANY
       WHERE LICENCE_NUM = :SOCIAL_CREDIT_CODE),
     :FACTORY_ASK_ID,
     'CA',
     :COOPERATION_TYPE,
     :COOPERATION_CLASSIFICATION,
     :COOPERATION_PRODUCT_CATE,
     :COOPERATION_SUBCATEGORY,
     %default_company_id%,
     SYSDATE,
     :USER_ID,
     :USER_ID,
     SYSDATE,
     0);
END;]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT Z.ASK_SCOPE_ID,
       Z.COMPANY_ID,
       Z.OBJECT_ID,
       Z.OBJECT_TYPE,
       Z.COOPERATION_CLASSIFICATION,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = Z.COOPERATION_CLASSIFICATION
           AND GROUP_DICT_TYPE = Z.COOPERATION_TYPE) COOPERATION_CLASSIFICATION_DES,
       Z.COOPERATION_PRODUCT_CATE,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = Z.COOPERATION_PRODUCT_CATE
           AND GROUP_DICT_TYPE = Z.COOPERATION_CLASSIFICATION) COOPERATION_PRODUCT_CATE_DESC,
       COOPERATION_SUBCATEGORY,
       (SELECT LISTAGG(B.COMPANY_DICT_NAME, ';')
          FROM (SELECT REGEXP_SUBSTR(Z.COOPERATION_SUBCATEGORY,'[^;]+',1,LEVEL) COL
                  FROM DUAL
                CONNECT BY LEVEL <=
                           REGEXP_COUNT(Z.COOPERATION_SUBCATEGORY, '\;') + 1) A
         INNER JOIN SCMDATA.SYS_COMPANY_DICT B
            ON A.COL = B.COMPANY_DICT_VALUE
						AND B.COMPANY_ID=Z.BE_COMPANY_ID
           AND B.COMPANY_DICT_TYPE = Z.COOPERATION_PRODUCT_CATE) COOPERATION_SUBCATEGORY_DESC
  FROM SCMDATA.T_ASK_SCOPE Z
 WHERE OBJECT_ID = :FACTORY_ASK_ID
   AND BE_COMPANY_ID = %default_company_id%]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[DECLARE
  STATUS VARCHAR2(8);
BEGIN
  SCMDATA.PKG_ASK_RECORD_MANGE.CHECK_REPEAT_SCOPE(pi_Ask_Scope_Id               => :ASK_SCOPE_ID,
                                                  pi_Object_Id                  => :FACTORY_ASK_ID,
                                                  pi_OBJECT_TYPE                => 'CA',
                                                  pi_Cooperation_Classification => :COOPERATION_CLASSIFICATION,
                                                  pi_Cooperation_Product_Cate   => :COOPERATION_PRODUCT_CATE,
                                                  pi_COOPERATION_TYPE           => :COOPERATION_TYPE);
  SELECT T.FACTRORY_ASK_FLOW_STATUS
    INTO STATUS
    FROM SCMDATA.T_FACTORY_ASK T
   WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID;

  IF STATUS NOT IN ('CA01', 'FA01', 'FA03', 'FA21', 'FA33') THEN
    RAISE_APPLICATION_ERROR(-20002,'流程中单据不可编辑！');
  END IF;

  UPDATE SCMDATA.T_ASK_SCOPE SET
    COOPERATION_CLASSIFICATION  =   :COOPERATION_CLASSIFICATION,
    COOPERATION_PRODUCT_CATE    =   :COOPERATION_PRODUCT_CATE,
    COOPERATION_SUBCATEGORY     =   :COOPERATION_SUBCATEGORY
  WHERE ASK_SCOPE_ID=:ASK_SCOPE_ID;
END;]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_159_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',0,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_SCOPE_ID,COOPERATION_CLASSIFICATION,COOPERATION_PRODUCT_CATE,COOPERATION_SUBCATEGORY,OBJECT_ID,OBJECT_TYPE,COMPANY_ID,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_159_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_159_1'',q''[]'',q''[]'',,q''[]'',0,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_SCOPE_ID,COOPERATION_CLASSIFICATION,COOPERATION_PRODUCT_CATE,COOPERATION_SUBCATEGORY,OBJECT_ID,OBJECT_TYPE,COMPANY_ID,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_factory_ask(p_type => 1);
  @strresult := v_sql;
END;}

--原有逻辑
/*
WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT),
COMP AS
 (SELECT COMPANY_ID, LOGN_NAME, COMPANY_NAME FROM SCMDATA.SYS_COMPANY)
SELECT (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID = TFA.ASK_USER_DEPT_ID) CHECK_DEPT_NAME, --验厂申请部门
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PERSON, --验厂申请人
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PHONE, --验厂申请人电话
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.COMPANY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.COMPANY_COUNTY) PCC, --公司所在区域
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.FACTORY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.FACTORY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.FACTORY_COUNTY) FPCC, --工厂所在区域
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.ASK_ADDRESS, --工厂地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.CONTACT_NAME, --工厂联系人
       TFA.CONTACT_PHONE, --工厂联系人电话
       TFA.ASK_FILES, --验厂申请附件
       'PRODUCT_TYPE' COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE='PRODUCT_TYPE') COOPERATION_TYPE_DESC,
       TFA.COOPERATION_MODEL, --意向合作模式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC, --意向合作模式名称
       TFA.ASK_SAY CHECKAPPLY_INTRO, --验厂申请说明
       TFA.ASK_USER_DEPT_ID,
       TFA.FACTORY_ASK_ID,
       TFA.SOCIAL_CREDIT_CODE,
       TFA.RELA_SUPPLIER_ID,
       TFA.COMPANY_PROVINCE,
       TFA.COMPANY_CITY,
       TFA.COMPANY_COUNTY,
       TFA.FACTORY_PROVINCE,
       TFA.FACTORY_CITY,
       TFA.FACTORY_COUNTY,
       TFA.COOPERATION_COMPANY_ID,
       TFA.FACTRORY_ASK_FLOW_STATUS
  FROM (SELECT *
          FROM SCMDATA.T_FACTORY_ASK
         WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID) TFA
         */]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[--czh 重构代码
DECLARE
  p_fa_rec scmdata.t_factory_ask%ROWTYPE;
  p_fo_rec scmdata.t_factory_ask_out%ROWTYPE;
BEGIN
  --验厂申请
  --申请信息
  p_fa_rec.ask_date          := :factory_ask_date;
  p_fa_rec.is_urgent         := :is_urgent;
  p_fa_rec.cooperation_model := :cooperation_model;
  p_fa_rec.product_type      := :product_type;
  p_fa_rec.ask_say           := :checkapply_intro;

  --供应商基本信息
  p_fa_rec.factory_ask_id       := :factory_ask_id;
  p_fa_rec.company_name         := :ask_company_name;
  p_fa_rec.company_abbreviation := :company_abbreviation;
  --p_fa_rec.social_credit_code    := :social_credit_code;
  p_fa_rec.company_province      := :company_province;
  p_fa_rec.company_city          := :company_city;
  p_fa_rec.company_county        := :company_county;
  p_fa_rec.company_address       := :pcc;
  p_fa_rec.ask_address           := :company_address;
  p_fa_rec.factory_name          := :factory_name;
  p_fa_rec.factory_province      := :company_province;
  p_fa_rec.factory_city          := :company_city;
  p_fa_rec.factory_county        := :company_county;
  p_fa_rec.ask_address           := nvl(:ask_address, :fpcc);
  p_fa_rec.legal_representative  := :legal_representative;
  p_fa_rec.company_contact_phone := :company_contact_phone;
  p_fa_rec.contact_name          := :contact_name;
  p_fa_rec.contact_phone         := :contact_phone;
  p_fa_rec.company_type          := :company_type;
  p_fa_rec.brand_type            := :brand_type;
  p_fa_rec.cooperation_brand     := :cooperation_brand;
  p_fa_rec.com_manufacturer      := :com_manufacturer;
  p_fa_rec.certificate_file      := :certificate_file;
  p_fa_rec.supplier_gate         := :supplier_gate;
  p_fa_rec.supplier_office       := :supplier_office;
  p_fa_rec.supplier_site         := :supplier_site;
  p_fa_rec.supplier_product      := :supplier_product;
  p_fa_rec.ask_user_id           := %current_userid%;
  p_fa_rec.update_id             := %current_userid%;
  p_fa_rec.update_date           := SYSDATE;
  p_fa_rec.rela_supplier_id      := :rela_supplier_id;
  p_fa_rec.product_link          := :product_link;

  scmdata.pkg_ask_record_mange.p_save_factory_ask(p_fa_rec => p_fa_rec);

END;

--原有逻辑
/*DECLARE
  JUDGE NUMBER(1);
BEGIN
  SELECT NVL(MAX(1), 0)
    INTO JUDGE
    FROM SCMDATA.T_ASK_RECORD
   WHERE BE_COMPANY_ID = %DEFAULT_COMPANY_ID%
     AND COMPANY_NAME = :ASK_COMPANY_NAME
     AND COOR_ASK_FLOW_STATUS <> 'CA00'
     AND ASK_RECORD_ID !=
         (SELECT ASK_RECORD_ID
            FROM SCMDATA.T_FACTORY_ASK
           WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID);
  IF JUDGE = 0 THEN
    SELECT COUNT(1)
      INTO JUDGE
      FROM (SELECT DISTINCT FIRST_VALUE(COMPANY_NAME) OVER(PARTITION BY ASK_RECORD_ID ORDER BY CREATE_DATE DESC) COMPANY_NAME
              FROM SCMDATA.T_FACTORY_ASK
             WHERE FACTRORY_ASK_FLOW_STATUS NOT IN ('CA01', 'FA01', 'FA03', 'FA21', 'FA33')
               AND COMPANY_ID = %DEFAULT_COMPANY_ID%
               AND ASK_RECORD_ID <>
                   (SELECT ASK_RECORD_ID
                      FROM SCMDATA.T_FACTORY_ASK
                     WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID))
     WHERE COMPANY_NAME = :ASK_COMPANY_NAME;
    IF JUDGE = 0 THEN
      SELECT COUNT(1)
        INTO JUDGE
        FROM (SELECT SUPPLIER_COMPANY_NAME
                FROM SCMDATA.T_SUPPLIER_INFO
               WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%)
       WHERE SUPPLIER_COMPANY_NAME = :ASK_COMPANY_NAME;
      IF JUDGE > 0 THEN
        RAISE_APPLICATION_ERROR(-20002, '公司名称与待建档、已建档的供应商名称重复！');
      END IF;
    ELSE
      RAISE_APPLICATION_ERROR(-20002, '公司名称与准入流程中的公司名称存在重复！');
    END IF;
  ELSE
    RAISE_APPLICATION_ERROR(-20002, '公司名称与意向合作供应商清单的公司名称重复！');
  END IF;

  UPDATE T_FACTORY_ASK
     SET COMPANY_ADDRESS   = :COMPANY_ADDRESS,
         COMPANY_NAME      = :ASK_COMPANY_NAME,
         FACTORY_NAME      = :FACTORY_NAME,
         ASK_ADDRESS       = :ASK_ADDRESS,
         CONTACT_NAME      = :CONTACT_NAME,
         CONTACT_PHONE     = :CONTACT_PHONE,
         COOPERATION_MODEL = :COOPERATION_MODEL,
         ASK_SAY           = :CHECKAPPLY_INTRO,
         ASK_DATE          = :FACTORY_ASK_DATE,
         COMPANY_PROVINCE  = :COMPANY_PROVINCE,
         COMPANY_CITY      = :COMPANY_CITY,
         COMPANY_COUNTY    = :COMPANY_COUNTY,
         FACTORY_PROVINCE  = :FACTORY_PROVINCE,
         FACTORY_CITY      = :FACTORY_CITY,
         FACTORY_COUNTY    = :FACTORY_COUNTY,
         ASK_FILES         = :ASK_FILES,
         UPDATE_ID         = %CURRENT_USERID%,
         UPDATE_DATE       = SYSDATE
   WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID;
END;*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_211''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[FACTRORY_ASK_FLOW_STATUS = ''FA01'']'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',0,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTRORY_ASK_FLOW_STATUS,COMPANY_ID,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,FACTORY_ASK_ID,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_211''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[FACTRORY_ASK_FLOW_STATUS = ''FA01'']'',q''[]'',,q''[]'',q''[]'',,''a_coop_211'',q''[]'',q''[]'',,q''[]'',0,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTRORY_ASK_FLOW_STATUS,COMPANY_ID,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,FACTORY_ASK_ID,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_uncheck_ask_rec();
  @strresult := v_sql;
END;}
--原逻辑
/*with data_pri as
 (select listagg(distinct cooperation_classification, ';') within GROUP(ORDER BY cooperation_classification) category,
         object_id factory_ask_id
    from scmdata.t_ask_scope
   where  object_type = 'CA'
   group by object_id)
 select a.factory_ask_id,
      -- substr(fals.group_dict_name, 0, instr(fals.group_dict_name, '+') - 1) FLOW_NODE_NAME,
       substr(fals.group_dict_name,
              instr(fals.group_dict_name, '+') + 1,
              length(fals.group_dict_name)) FLOW_NODE_STATUS_DESC,
       a.company_name ASK_COMPANY_NAME,
       (SELECT listagg(group_dict_name, ';') within GROUP(ORDER BY 1)
          FROM sys_group_dict
         WHERE group_dict_type = 'PRODUCT_TYPE'
           AND group_dict_value in
               (select distinct cooperation_classification
                  from scmdata.t_ask_scope
                 where object_id = a.factory_ask_id
                   and object_type = 'CA')) cooperation_classification_desc,
       /* (SELECT listagg(group_dict_name, ';') within GROUP(ORDER BY 1)
       from (select distinct group_dict_name
               FROM sys_group_dict
              WHERE group_dict_type in
                    (select cooperation_classification
                       from scmdata.t_ask_scope
                      where object_id = a.factory_ask_id
                        and object_type = 'CA')
                AND group_dict_value in
                    (select cooperation_product_cate
                       from scmdata.t_ask_scope
                      where object_id = a.factory_ask_id
                        and object_type = 'CA'))) cooperation_product_cate_desc,*/
       gd.group_dict_name cooperation_model_desc,
       -- a.COMPANY_ADDRESS,
       a.FACTORY_NAME,
       a.ASK_ADDRESS,

       cd.dept_name ask_user_dept_name,
       (select company_user_name
          from sys_company_user
         where user_id = a.ask_user_id
           and company_id = %default_company_id%) CHECKAPPLY_PERSON,
       a.ask_date FACTORY_ASK_DATE,
       (SELECT GROUP_DICT_NAME
          FROM sys_group_dict
         WHERE GROUP_DICT_VALUE = a.COOPERATION_TYPE
           AND GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC,

       case
         when a.origin = 'CA' then
          (select company_id
             from t_ask_record
            where ask_record_id = a.ask_record_id)
         else
          a.cooperation_company_id
       end company_id
  from t_factory_ask a
  inner join data_pri c
    on c.factory_ask_id=a.factory_ask_id
  left join sys_user u
    on a.ask_user_id = u.user_id
  left join sys_company_dept cd
    on a.ask_user_dept_id = cd.company_dept_id
  left join t_ask_record b
    on a.ask_record_id = b.ask_record_id
  left join sys_group_dict ga
    on a.cooperation_type = ga.group_dict_value
   and ga.group_dict_type = 'COOPERATION_TYPE'
  left join sys_group_dict gd
    on gd.group_dict_value = a.COOPERATION_MODEL
   and gd.group_dict_type = 'SUPPLY_TYPE'
  left join sys_group_dict fals
    on a.factrory_ask_flow_status = fals.group_dict_value
   and fals.group_dict_type = 'FACTORY_ASK_FLOW'
 where a.company_id = %default_company_id%
   and a.factrory_ask_flow_status = 'FA02'
  AND (instr_priv(%coop_class_priv%, c.category) > 0 or %is_company_admin%='1')
 order by a.ask_date asc*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_220''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[company_id,factory_ask_id,cooperation_model,production_mode,factrory_ask_flow_status,factory_ask_type]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_220''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_220'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[company_id,factory_ask_id,cooperation_model,production_mode,factrory_ask_flow_status,factory_ask_type]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[DELETE FROM SCMDATA.T_ASK_SCOPE WHERE ASK_SCOPE_ID=:ASK_SCOPE_ID]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[DECLARE
  JUDGE NUMBER(1);
BEGIN
  SELECT COUNT(1)
     INTO JUDGE
    FROM SCMDATA.T_FACTORY_ASK
   WHERE FACTORY_ASK_ID=:FACTORY_ASK_ID
     AND FACTRORY_ASK_FLOW_STATUS='FA01';

  IF JUDGE = 0 THEN
    RAISE_APPLICATION_ERROR(-20002,'非待验厂状态下的单据不可保存');
  END IF;

  SCMDATA.PKG_ASK_RECORD_MANGE.CHECK_REPEAT_SCOPE(pi_Ask_Scope_Id               => ' ',
                                                  pi_Object_Id                  => :FACTORY_ASK_ID,
                                                  pi_OBJECT_TYPE                => 'CA',
                                                  pi_Cooperation_Classification => :COOPERATION_CLASSIFICATION,
                                                  pi_Cooperation_Product_Cate   => :COOPERATION_PRODUCT_CATE,
                                                  pi_COOPERATION_TYPE           => :COOPERATION_TYPE);
  INSERT INTO SCMDATA.T_ASK_SCOPE
    (ASK_SCOPE_ID,
     COMPANY_ID,
     OBJECT_ID,
     OBJECT_TYPE,
     COOPERATION_TYPE,
     COOPERATION_CLASSIFICATION,
     COOPERATION_PRODUCT_CATE,
     COOPERATION_SUBCATEGORY,
     BE_COMPANY_ID,
     UPDATE_TIME,
     UPDATE_ID,
     CREATE_ID,
     CREATE_TIME,
     PAUSE)
  VALUES
    (SCMDATA.F_GET_UUID(),
     (SELECT COMPANY_ID FROM SCMDATA.SYS_COMPANY WHERE LICENCE_NUM=:SOCIAL_CREDIT_CODE),
     :FACTORY_ASK_ID,
     'CA',
     :COOPERATION_TYPE,
     :COOPERATION_CLASSIFICATION,
     :COOPERATION_PRODUCT_CATE,
     :COOPERATION_SUBCATEGORY,
     %default_company_id%,
     SYSDATE,
     :USER_ID,
     :USER_ID,
     SYSDATE,
     0);
END;]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT Z.ASK_SCOPE_ID,
       Z.COMPANY_ID,
       Z.OBJECT_ID,
       Z.OBJECT_TYPE,
       Z.COOPERATION_CLASSIFICATION,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = Z.COOPERATION_CLASSIFICATION
           AND GROUP_DICT_TYPE = Z.COOPERATION_TYPE) COOPERATION_CLASSIFICATION_DES,
       Z.COOPERATION_PRODUCT_CATE,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = Z.COOPERATION_PRODUCT_CATE
           AND GROUP_DICT_TYPE = Z.COOPERATION_CLASSIFICATION) COOPERATION_PRODUCT_CATE_DESC,
       COOPERATION_SUBCATEGORY,
       (SELECT LISTAGG(B.COMPANY_DICT_NAME, ';')
          FROM (SELECT REGEXP_SUBSTR(Z.COOPERATION_SUBCATEGORY,'[^;]+',1,LEVEL) COL
                  FROM DUAL
                CONNECT BY LEVEL <=
                           REGEXP_COUNT(Z.COOPERATION_SUBCATEGORY, '\;') + 1) A
         INNER JOIN SCMDATA.SYS_COMPANY_DICT B
            ON A.COL = B.COMPANY_DICT_VALUE
            AND B.COMPANY_ID=Z.BE_COMPANY_ID
           AND B.COMPANY_DICT_TYPE = Z.COOPERATION_PRODUCT_CATE) COOPERATION_SUBCATEGORY_DESC
  FROM SCMDATA.T_ASK_SCOPE Z
 WHERE OBJECT_ID = :FACTORY_ASK_ID
   AND BE_COMPANY_ID = %default_company_id%]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[DECLARE

BEGIN
  SCMDATA.PKG_ASK_RECORD_MANGE.CHECK_REPEAT_SCOPE(pi_Ask_Scope_Id               => :ASK_SCOPE_ID,
                                                  pi_Object_Id                  => :ASK_RECORD_ID,
                                                  pi_OBJECT_TYPE                => 'HZ',
                                                  pi_Cooperation_Classification => :COOPERATION_CLASSIFICATION,
                                                  pi_Cooperation_Product_Cate   => :COOPERATION_PRODUCT_CATE,
                                                  pi_COOPERATION_TYPE           => :COOPERATION_TYPE);
  UPDATE SCMDATA.T_ASK_SCOPE
    SET  COOPERATION_CLASSIFICATION  =   :COOPERATION_CLASSIFICATION,
         COOPERATION_PRODUCT_CATE    =   :COOPERATION_PRODUCT_CATE,
         COOPERATION_SUBCATEGORY     =   :COOPERATION_SUBCATEGORY,
         UPDATE_ID                   =   %CURRENT_USERID%,
         UPDATE_TIME                 =   SYSDATE
   WHERE ASK_SCOPE_ID=:ASK_SCOPE_ID;
END;]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_159_2''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[(SELECT FACTRORY_ASK_FLOW_STATUS FROM SCMDATA.T_FACTORY_ASK WHERE FACTORY_ASK_ID=:FACTORY_ASK_ID) = ''FA01'']'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',0,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_SCOPE_ID,COOPERATION_CLASSIFICATION,COOPERATION_PRODUCT_CATE,COOPERATION_SUBCATEGORY,OBJECT_ID,OBJECT_TYPE,COMPANY_ID,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_159_2''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[(SELECT FACTRORY_ASK_FLOW_STATUS FROM SCMDATA.T_FACTORY_ASK WHERE FACTORY_ASK_ID=:FACTORY_ASK_ID) = ''FA01'']'',q''[]'',,q''[]'',q''[]'',,''a_coop_159_2'',q''[]'',q''[]'',,q''[]'',0,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_SCOPE_ID,COOPERATION_CLASSIFICATION,COOPERATION_PRODUCT_CATE,COOPERATION_SUBCATEGORY,OBJECT_ID,OBJECT_TYPE,COMPANY_ID,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_my_ask_rec();
  @strresult := v_sql;
END;}
--原逻辑
/*
WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TFA.FACTORY_ASK_ID,
       TFA.FACTRORY_ASK_FLOW_STATUS,
       SUBSTR(STATUS, 1, INSTR(STATUS, '+')-1) FLOW_NODE_NAME,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT LISTAGG(B.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TFA.FACTORY_ASK_ID) A
         INNER JOIN DIC B
            ON A.TMP = B.GROUP_DICT_VALUE
           AND B.GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       TFA.COOPERATION_MODEL,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       TFA.FACTORY_NAME,
       TFA.ASK_ADDRESS,
       (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID =
           (SELECT COMPANY_DEPT_ID FROM SCMDATA.SYS_COMPANY_USER_DEPT
             WHERE USER_ID = %CURRENT_USERID%
               AND COMPANY_ID = %DEFAULT_COMPANY_ID%)) CHECK_DEPT_NAME,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID=TFA.COMPANY_ID
           AND USER_ID= TFA.ASK_USER_ID) CHECK_APPLY_USERNAME,
       TFA.ASK_DATE FACTORY_ASK_DATE,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_TYPE
           AND GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC,
       TFA.FACTORY_ASK_TYPE CHECK_METHOD,
       CASE
         WHEN FACTORY_ASK_TYPE = 0 THEN
          '不验厂'
         WHEN FACTORY_ASK_TYPE = 1 THEN
          '内部验厂'
         WHEN FACTORY_ASK_TYPE = 2 THEN
          '第三方验厂'
       END CHECK_METHOD_SP,
       (SELECT LOGN_NAME
          FROM SCMDATA.SYS_COMPANY
         WHERE COMPANY_ID = TFA.ASK_COMPANY_ID) CHECK_COMPANY_NAME
  FROM (SELECT FACTORY_ASK_ID,FACTRORY_ASK_FLOW_STATUS,ASK_DATE,FACTORY_ASK_TYPE,
               COOPERATION_COMPANY_ID,ASK_COMPANY_ID,ASK_USER_ID,ASK_ADDRESS,
               COOPERATION_TYPE,COOPERATION_MODEL,COMPANY_NAME,COMPANY_ADDRESS,
               COMPANY_ID,FACTORY_NAME,CREATE_DATE,
               (SELECT GROUP_DICT_NAME
                  FROM DIC
                 WHERE GROUP_DICT_VALUE = FACTRORY_ASK_FLOW_STATUS
                   AND GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW') STATUS
          FROM SCMDATA.T_FACTORY_ASK
         WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND ASK_USER_ID = %CURRENT_USERID%
           AND FACTRORY_ASK_FLOW_STATUS <> 'CA01'
         ORDER BY CREATE_DATE DESC) TFA
  LEFT JOIN SCMDATA.SYS_USER SU
    ON TFA.ASK_USER_ID = SU.USER_ID*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_210''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,FACTORY_ASK_ID,FACTRORY_ASK_FLOW_STATUS,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,ASK_COMPANY_ID,COMPANY_ID,ASK_USER_ID,FACTORY_ASK_TYPE,CHECK_METHOD,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_210''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_210'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,FACTORY_ASK_ID,FACTRORY_ASK_FLOW_STATUS,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,ASK_COMPANY_ID,COMPANY_ID,ASK_USER_ID,FACTORY_ASK_TYPE,CHECK_METHOD,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_factory_ask(p_type => 1);
  @strresult := v_sql;
END;}

--原有逻辑
/*WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT),
COMP AS
 (SELECT COMPANY_ID, LOGN_NAME, COMPANY_NAME FROM SCMDATA.SYS_COMPANY)
SELECT (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID = TFA.ASK_USER_DEPT_ID) CHECK_DEPT_NAME, --验厂申请部门
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PERSON, --验厂申请人
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PHONE, --验厂申请人电话
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.COMPANY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.COMPANY_COUNTY) PCC, --公司所在区域
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.FACTORY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.FACTORY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.FACTORY_COUNTY) FPCC, --工厂所在区域
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.ASK_ADDRESS, --工厂地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.CONTACT_NAME, --工厂联系人
       TFA.CONTACT_PHONE, --工厂联系人电话
       TFA.ASK_FILES, --验厂申请附件
       'PRODUCT_TYPE' COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE='PRODUCT_TYPE') COOPERATION_TYPE_DESC,
       TFA.COOPERATION_MODEL, --意向合作模式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC, --意向合作模式名称
       TFA.ASK_SAY CHECKAPPLY_INTRO, --验厂申请说明
       TFA.ASK_USER_DEPT_ID,
       TFA.FACTORY_ASK_ID,
       TFA.COMPANY_PROVINCE,
       TFA.SOCIAL_CREDIT_CODE,
       TFA.COMPANY_CITY,
       TFA.RELA_SUPPLIER_ID,
       TFA.COMPANY_COUNTY,
       TFA.FACTORY_PROVINCE,
       TFA.FACTORY_CITY,
       TFA.FACTORY_COUNTY,
       TFA.COOPERATION_COMPANY_ID,
       TFA.FACTRORY_ASK_FLOW_STATUS,
       TFA.ORIGIN
  FROM (SELECT *
          FROM SCMDATA.T_FACTORY_ASK
         WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID) TFA*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[--czh 重构代码
DECLARE
  p_fa_rec scmdata.t_factory_ask%ROWTYPE;
  p_fo_rec scmdata.t_factory_ask_out%ROWTYPE;
BEGIN
  --验厂申请
  --申请信息
  p_fa_rec.ask_date          := :factory_ask_date;
  p_fa_rec.is_urgent         := :is_urgent;
  p_fa_rec.cooperation_model := :cooperation_model;
  p_fa_rec.product_type      := :product_type;
  p_fa_rec.ask_say           := :checkapply_intro;
  --供应商基本信息
  p_fa_rec.factory_ask_id       := :factory_ask_id;
  p_fa_rec.company_name         := :ask_company_name;
  p_fa_rec.company_abbreviation := :company_abbreviation;
  --p_fa_rec.social_credit_code    := :social_credit_code;
  p_fa_rec.company_province      := :company_province;
  p_fa_rec.company_city          := :company_city;
  p_fa_rec.company_county        := :company_county;
  p_fa_rec.company_address       := :pcc;
  p_fa_rec.ask_address           := :company_address;
  p_fa_rec.factory_name          := :factory_name;
  p_fa_rec.factory_province      := :company_province;
  p_fa_rec.factory_city          := :company_city;
  p_fa_rec.factory_county        := :company_county;
  p_fa_rec.ask_address           := nvl(:ask_address, :fpcc);
  p_fa_rec.legal_representative  := :legal_representative;
  p_fa_rec.company_contact_phone := :company_contact_phone;
  p_fa_rec.contact_name          := :ask_user_name;
  p_fa_rec.contact_phone         := :ask_user_phone;
  p_fa_rec.company_type          := :company_type;
  p_fa_rec.brand_type            := :brand_type;
  p_fa_rec.cooperation_brand     := :cooperation_brand;
  p_fa_rec.com_manufacturer      := :com_manufacturer;
  p_fa_rec.certificate_file      := :certificate_file;
  p_fa_rec.supplier_gate         := :supplier_gate;
  p_fa_rec.supplier_office       := :supplier_office;
  p_fa_rec.supplier_site         := :supplier_site;
  p_fa_rec.supplier_product      := :supplier_product;
  p_fa_rec.ask_user_id           := %current_userid%;
  p_fa_rec.update_id             := %current_userid%;
  p_fa_rec.update_date           := SYSDATE;
  p_fa_rec.rela_supplier_id      := :rela_supplier_id;
  p_fa_rec.product_link          := :product_link;
  p_fa_rec.memo               := :remarks;
  --生产信息
  p_fa_rec.worker_num          := :worker_num;
  p_fa_rec.machine_num         := :machine_num;
  p_fa_rec.reserve_capacity    := rtrim(:reserve_capacity,'%');
  p_fa_rec.product_efficiency  := rtrim(:product_efficiency,'%');
  p_fa_rec.work_hours_day      := :work_hours_day;

  scmdata.pkg_ask_record_mange.p_save_factory_ask(p_fa_rec => p_fa_rec);

END;

--原有逻辑
/*declare
  JUDGE NUMBER(1);
begin

SELECT COUNT(1)
     INTO JUDGE
    FROM SCMDATA.T_FACTORY_ASK
   WHERE FACTORY_ASK_ID=:FACTORY_ASK_ID
     AND FACTRORY_ASK_FLOW_STATUS IN ('CA01', 'FA01', 'FA02');

  IF JUDGE = 0 THEN
    RAISE_APPLICATION_ERROR(-20002, '除合作申请已提交、验厂待申请、验厂待审批状态外，都不可保存');
  ELSE
    IF LENGTHB(:ASK_FILES) > 256 THEN
      RAISE_APPLICATION_ERROR(-20002, '最多只可上传7个附件！');
    END IF;
    SELECT NVL(MAX(1), 0)
      INTO JUDGE
      FROM SCMDATA.T_ASK_RECORD
     WHERE BE_COMPANY_ID = %DEFAULT_COMPANY_ID%
       AND COMPANY_NAME = :ASK_COMPANY_NAME
       AND COOR_ASK_FLOW_STATUS <> 'CA00'
       AND ASK_RECORD_ID !=
           (SELECT ASK_RECORD_ID
              FROM SCMDATA.T_FACTORY_ASK
             WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID);
    IF JUDGE = 0 THEN
      SELECT COUNT(1)
         INTO JUDGE
        FROM (SELECT DISTINCT FIRST_VALUE(COMPANY_NAME) OVER(PARTITION BY ASK_RECORD_ID ORDER BY CREATE_DATE DESC) COMPANY_NAME
                FROM SCMDATA.T_FACTORY_ASK
               WHERE FACTRORY_ASK_FLOW_STATUS NOT IN ('CA01','FA01','FA03','FA21','FA33')
                 AND COMPANY_ID = %DEFAULT_COMPANY_ID%
                 AND ASK_RECORD_ID <>
                     (SELECT ASK_RECORD_ID
                        FROM SCMDATA.T_FACTORY_ASK
                       WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID))
       WHERE COMPANY_NAME = :ASK_COMPANY_NAME;
      IF JUDGE = 0 THEN
        SELECT COUNT(1)
         INTO JUDGE
        FROM (SELECT SUPPLIER_COMPANY_NAME
                FROM SCMDATA.T_SUPPLIER_INFO
               WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%)
       WHERE SUPPLIER_COMPANY_NAME = :ASK_COMPANY_NAME;
        IF JUDGE > 0 THEN
          RAISE_APPLICATION_ERROR(-20002, '公司名称与待建档、已建档的供应商名称重复！');
        END IF;
      ELSE
        RAISE_APPLICATION_ERROR(-20002, '公司名称与准入流程中的公司名称存在重复！');
      END IF;
    ELSE
      RAISE_APPLICATION_ERROR(-20002, '公司名称与意向合作供应商清单的公司名称重复！');
    END IF;

    IF :COOPERATION_MODEL = 'OF' THEN
      IF :RELA_SUPPLIER_ID IS NULL THEN
        RAISE_APPLICATION_ERROR(-20002,'当意向合作模式为外协工厂时，必须填写关联供应商！');
      END IF;
    END IF;
 end if;

  UPDATE scmdata.T_FACTORY_ASK
     SET COMPANY_ADDRESS   = :COMPANY_ADDRESS, --公司地址
         FACTORY_NAME      = :FACTORY_NAME, --工厂名称
         ASK_ADDRESS       = :ASK_ADDRESS, --验厂地址
         CONTACT_NAME      = :CONTACT_NAME, --联系人
         CONTACT_PHONE     = :CONTACT_PHONE, --联系人手机
         COOPERATION_MODEL = :COOPERATION_MODEL, --需求公司类型
         ASK_SAY           = :CHECKAPPLY_INTRO, --验厂申请说明
         COMPANY_PROVINCE  = :COMPANY_PROVINCE,
         COMPANY_CITY      = :COMPANY_CITY,
         COMPANY_COUNTY    = :COMPANY_COUNTY,
         FACTORY_PROVINCE  = :FACTORY_PROVINCE,
         FACTORY_CITY      = :FACTORY_CITY,
         FACTORY_COUNTY    = :FACTORY_COUNTY,
         UPDATE_ID         = %CURRENT_USERID%,
         UPDATE_DATE       = SYSDATE,
         SOCIAL_CREDIT_CODE=:SOCIAL_CREDIT_CODE,
         company_name      = :ASK_COMPANY_NAME,
         RELA_SUPPLIER_ID  = :RELA_SUPPLIER_ID
   WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID;

  scmdata.pkg_ask_record_mange.has_company_name_repeat(pi_factory_ask_id => :FACTORY_ASK_ID);
end;*/]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_221''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 3,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTRORY_ASK_FLOW_STATUS,COMPANY_ID,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,company_type,cooperation_brand,product_link,rela_supplier_id,product_type,is_urgent]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_221''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 3,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_221'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTRORY_ASK_FLOW_STATUS,COMPANY_ID,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,company_type,cooperation_brand,product_link,rela_supplier_id,product_type,is_urgent]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[delete from t_ask_scope where ask_scope_id=:ask_scope_id]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[declare
  p_desc varchar2(256);
  p_id   varchar2(32);
begin
  p_desc := :cooperation_classification_des ||
            :cooperation_subcategory_desc;
  p_id   := f_get_uuid();
  insert into t_ask_scope
    (ask_scope_id,
     company_id,
     object_id,
     object_type,
     cooperation_type,
     cooperation_classification,
     cooperation_product_cate,
     cooperation_subcategory,
     be_company_id,
     update_time,
     update_id,
     create_id,
     create_time,
     remarks,
     pause)
  values
    (p_id,
     %default_company_id%,
     :factory_ask_id,
     'CA',
     :cooperation_type,
     :cooperation_classification,
     :cooperation_product_cate,
     :cooperation_subcategory,
     %default_company_id%,
     null,
     null,
     :user_id,
     sysdate,
     null,
     0);
  scmdata.pkg_ask_record_mange.check_repeat_scope(pi_Ask_Scope_Id               => p_id,
                                                  pi_Object_Id                  => :factory_ask_id,
                                                  pi_OBJECT_TYPE                => 'CA',
                                                  pi_Cooperation_Classification => :cooperation_classification,
                                                  pi_Cooperation_Product_Cate   => :cooperation_product_cate,
                                                  pi_COOPERATION_TYPE           => :cooperation_type);
end;]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[select a.ask_scope_id,
       a.company_id,
       a.object_id factory_ask_id,
       a.object_type,
       a.cooperation_type,
       a.cooperation_classification,
       a.cooperation_product_cate,
       ga.group_dict_name cooperation_classification_des,
       gb.group_dict_name cooperation_product_cate_desc,
       a.cooperation_subcategory,
       (SELECT listagg(company_dict_name, ';') within GROUP(ORDER BY 1)
          FROM sys_company_dict
         WHERE company_dict_type = a.cooperation_product_cate
           and company_id = a.be_company_id
           AND instr(';' || a.cooperation_subcategory || ';',
                     ';' || company_dict_value || ';') > 0) cooperation_subcategory_desc,
       a.be_company_id
  from (select *
          from t_ask_scope
         where object_id = :factory_ask_id
           and object_type = 'CA') a
  left join sys_group_dict ga
    on a.cooperation_classification = ga.group_dict_value
   and ga.group_dict_type = 'PRODUCT_TYPE'
  left join sys_group_dict gb
    on a.cooperation_product_cate = gb.group_dict_value
   and gb.group_dict_type = a.cooperation_classification]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[declare
  p_desc varchar2(256);
begin
  p_desc := :cooperation_classification_des ||
            :cooperation_subcategory_desc;

  update t_ask_scope a
     set a.cooperation_type           = :cooperation_type,
         a.cooperation_classification = :cooperation_classification,
         a.cooperation_product_cate   = :cooperation_product_cate,
         a.cooperation_subcategory    = :cooperation_subcategory,
         a.update_time                = sysdate,
         a.update_id                  = :user_id
   where a.ask_scope_id = :ask_scope_id;

scmdata.pkg_ask_record_mange.check_repeat_scope(pi_Ask_Scope_Id               => :ask_scope_id,
                                                pi_Object_Id                  => :factory_ask_id,
                                                pi_OBJECT_TYPE                => 'CA',
                                                pi_Cooperation_Classification => :cooperation_classification,
                                                pi_Cooperation_Product_Cate   => :cooperation_product_cate,
                                                pi_COOPERATION_TYPE           => :cooperation_type);
end;]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_221_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[be_company_id,cooperation_product_cate,cooperation_subcategory,cooperation_classification,cooperation_type,factory_ask_id,ask_scope_id,object_type,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_221_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_221_1'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[be_company_id,cooperation_product_cate,cooperation_subcategory,cooperation_classification,cooperation_type,factory_ask_id,ask_scope_id,object_type,company_id]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_checked_ask_rec();
  @strresult := v_sql;
END;}
--原逻辑
/*WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT),
COMP AS
 (SELECT COMPANY_ID, LOGN_NAME, COMPANY_NAME FROM SCMDATA.SYS_COMPANY)
SELECT (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID = %DEFAULT_DEPT_ID%) CHECK_DEPT_NAME,
       TFA.ASK_DATE CHECK_DATE,
       (SELECT NICK_NAME
          FROM SCMDATA.SYS_USER
         WHERE USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PERSON,
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = TFA.ASK_USER_ID) CHECK_APPLY_PHONE,
       NVL(TFA.REMARKS,
           (SELECT LOGN_NAME
              FROM SYS_COMPANY
             WHERE COMPANY_ID = TFA.COMPANY_ID)) ASK_COMPANY_NAME,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.COMPANY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = COMPANY_COUNTY) PCC,
       TFA.COMPANY_ADDRESS,
       TFA.FACTORY_NAME,
       TFA.ASK_ADDRESS,
       TFA.CONTACT_NAME,
       TFA.CONTACT_PHONE,
       TFA.COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_TYPE
           AND GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC,
       TFA.COOPERATION_CLASSIFICATION,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_CLASSIFICATION
           AND GROUP_DICT_TYPE = TFA.COOPERATION_TYPE) COOPERATION_CLASSIFICATION_DESC,
       TFA.COOPERATION_SUBCATEGORY,
       SCMDATA.F_GET_SUBCATEGORY(TFA.FACTORY_ASK_ID, 'FACTORY_ASK_ID', 'SCMDATA.T_FACTORY_ASK') COOPERATION_SUBCATEGORY_DESC,
       TFA.COOPERATION_MODEL,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       TFA.ASK_SAY CHECKAPPLY_INTRO,
       TFA.ASK_USER_DEPT_ID,
       TFA.FACTORY_ASK_ID,
       TFA.COOPERATION_COMPANY_ID
  FROM (SELECT *
          FROM SCMDATA.T_FACTORY_ASK
         WHERE CREATE_ID = :USER_ID
               AND CREATE_DATE > (SYSDATE-10/24/60/60)) TFA*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_230''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[company_id,factory_ask_id,cooperation_model,production_mode,factrory_ask_flow_status,factory_ask_type]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_230''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_230'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[company_id,factory_ask_id,cooperation_model,production_mode,factrory_ask_flow_status,factory_ask_type]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_uncheck_admit_ask();
  @strresult := v_sql;
END;}
--原逻辑
/*with data_pri as
 (select listagg(distinct cooperation_classification, ';') within GROUP(ORDER BY cooperation_classification asc) category,
         object_id factory_ask_id
    from scmdata.t_ask_scope
   where  object_type = 'CA'
   group by object_id),
    data_ability as
 (select listagg(distinct cooperation_classification, ';') within GROUP(ORDER BY cooperation_classification asc) category,
         factory_report_id
    from scmdata.t_factory_report_ability
   group by factory_report_id)
   select a.factory_ask_id,
       a.factrory_ask_flow_status,
       substr(fals.group_dict_name,0,instr(fals.group_dict_name,'+')-1) FLOW_NODE_NAME,
       substr(fals.group_dict_name,instr(fals.group_dict_name,'+')+1,length(fals.group_dict_name)) FLOW_NODE_STATUS_DESC,
       a.factory_ask_type,
       decode(a.factory_ask_type, 0, '验厂申请', '验厂报告') factory_ask_report_detail,
       case
         when a.origin = 'CA' then
          (select company_id
             from t_ask_record
            where ask_record_id = a.ask_record_id)
         else
          a.cooperation_company_id
       end company_id,
       a.company_name ASK_COMPANY_NAME,
       ga.group_dict_name cooperation_type_sp,
       case
         when a.factory_ask_type = 0 then
          (SELECT listagg(group_dict_name, ';') within GROUP(ORDER BY 1)
             FROM sys_group_dict
            WHERE group_dict_type = 'PRODUCT_TYPE'
              AND group_dict_value in
                  (select distinct cooperation_classification
                     from scmdata.t_ask_scope
                    where object_id = a.factory_ask_id
                      and object_type = 'CA'))
         else
          (SELECT listagg(distinct t.group_dict_name, ';') within GROUP(ORDER BY 1)
             FROM scmdata.t_factory_report_ability fra
             left join scmdata.sys_group_dict t
               on t.group_dict_value = fra.cooperation_classification
              AND t.group_dict_type = a.cooperation_type
            where fra.factory_report_id = fr.factory_report_id)
       end cooperation_classification_sp,
       gd.group_dict_name cooperation_model_sp,
        decode(a.factory_ask_type, 0, '不验厂', 1, '内部验厂', '第三方验厂') factory_ask_type_desc,
       case
         when a.factory_ask_type <> 0 then
          fr.check_result
         else
          null
       end check_result,

       a.ask_date FACTORY_ASK_DATE,
       case
         when a.factory_ask_type <> 0 then
          fr.check_date
         else
          null
       end check_date
  from t_factory_ask a
  inner join data_pri c
    on c.factory_ask_id=a.factory_ask_id
  left join (select max(ol.oper_time) audit_time, ol.factory_ask_id
               from t_factory_ask_oper_log ol
              where ol.status_AF_OPER = 'FA12'
              group by ol.factory_ask_id) k
    on k.factory_ask_id = a.factory_ask_id
  left join t_factory_report fr
    on a.factory_ask_id = fr.factory_ask_id
     left join data_ability frc
    on frc.factory_report_id = fr.factory_report_id
  left join sys_group_dict ga
    on a.cooperation_type = ga.group_dict_value
   and ga.group_dict_type = 'COOPERATION_TYPE'
  left join sys_group_dict gd
    on a.cooperation_model = gd.group_dict_value
   and gd.group_dict_type = 'SUPPLY_TYPE'
  left join sys_group_dict fals
    on a.factrory_ask_flow_status = fals.group_dict_value
   and fals.group_dict_type = 'FACTORY_ASK_FLOW'
 where a.factrory_ask_flow_status in ('FA12', 'FA31')
   and a.company_id = %default_company_id%
   AND (%is_company_admin% = 1 or
       instr_priv(%coop_class_priv%, c.category) > 0 or
       instr_priv(%coop_class_priv%, frc.category) > 0)
 order by k.audit_time asc*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_310''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[FACTORY_ASK_REPORT_DETAIL]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[factrory_ask_flow_status,company_id,factory_ask_id,factory_ask_type,CHECK_FAC_RESULT]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_310''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_310'',q''[]'',q''[FACTORY_ASK_REPORT_DETAIL]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[factrory_ask_flow_status,company_id,factory_ask_id,factory_ask_type,CHECK_FAC_RESULT]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_factory_ask(p_type => 1);
  @strresult := v_sql;
END;}
--原代码
/*
WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT),
COMP AS
 (SELECT COMPANY_ID, LOGN_NAME, COMPANY_NAME FROM SCMDATA.SYS_COMPANY)
SELECT (SELECT DEPT_NAME
          FROM SCMDATA.SYS_COMPANY_DEPT
         WHERE COMPANY_DEPT_ID = TFA.ASK_USER_DEPT_ID) CHECK_DEPT_NAME, --验厂申请部门
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
      (select company_user_name from sys_company_user where user_id=tfa.ask_user_id and company_id=tfa.company_id) CHECKAPPLY_PERSON, --验厂申请人
       (SELECT PHONE FROM SCMDATA.SYS_USER WHERE USER_ID = TFA.ASK_USER_ID) CHECKAPPLY_PHONE, --验厂申请人电话
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.COMPANY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.COMPANY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.COMPANY_COUNTY) PCC, --公司所在区域
       (SELECT PROVINCE
          FROM SCMDATA.DIC_PROVINCE
         WHERE PROVINCEID = TFA.FACTORY_PROVINCE) ||
       (SELECT CITY FROM SCMDATA.DIC_CITY WHERE CITYNO = TFA.FACTORY_CITY) ||
       (SELECT COUNTY
          FROM SCMDATA.DIC_COUNTY
         WHERE COUNTYID = TFA.FACTORY_COUNTY) FPCC, --工厂所在区域
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.ASK_ADDRESS, --工厂地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.CONTACT_NAME, --工厂联系人
       TFA.CONTACT_PHONE, --工厂联系人电话
       TFA.ASK_FILES, --验厂申请附件
       'PRODUCT_TYPE' COOPERATION_TYPE,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE='PRODUCT_TYPE') COOPERATION_TYPE_DESC,
       TFA.COOPERATION_MODEL, --意向合作模式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC, --意向合作模式名称
       TFA.ASK_SAY CHECKAPPLY_INTRO, --验厂申请说明
       TFA.ASK_USER_DEPT_ID,
       TFA.FACTORY_ASK_ID,
       TFA.RELA_SUPPLIER_ID,
       TFA.COMPANY_PROVINCE,
       TFA.COMPANY_CITY,
       TFA.COMPANY_COUNTY,
       TFA.FACTORY_PROVINCE,
       TFA.FACTORY_CITY,
       TFA.FACTORY_COUNTY,
       TFA.SOCIAL_CREDIT_CODE,
       TFA.COOPERATION_COMPANY_ID,
       TFA.factrory_ask_flow_status,
       tfa.factory_ask_type
  FROM (SELECT *
          FROM SCMDATA.T_FACTORY_ASK
         WHERE FACTORY_ASK_ID = :FACTORY_ASK_ID) TFA*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_311''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTRORY_ASK_FLOW_STATUS,COMPANY_ID,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,FACTORY_ASK_ID,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_311''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_311'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTRORY_ASK_FLOW_STATUS,COMPANY_ID,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,ASK_USER_DEPT_ID,COOPERATION_COMPANY_ID,COMPANY_PROVINCE,COMPANY_CITY,COMPANY_COUNTY,FACTORY_PROVINCE,FACTORY_CITY,FACTORY_COUNTY,FACTORY_ASK_ID,rela_supplier_id,company_type,cooperation_brand,product_link,product_type,is_urgent]'',,0,q''[]'',q''[]'',q''[]'',,q''[]'',,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[--czh 重构代码
{DECLARE
  v_sql CLOB;
BEGIN
  v_sql      := pkg_ask_record_mange.f_query_checked_admit_ask();
  @strresult := v_sql;
END;}
--原逻辑
/*with data_pri as
 (select listagg(distinct cooperation_classification, ';') within GROUP(ORDER BY cooperation_classification asc) category,
         object_id factory_ask_id
    from scmdata.t_ask_scope
   where object_type = 'CA'
   group by object_id),
 data_ability as
 (select listagg(distinct cooperation_classification, ';') within GROUP(ORDER BY cooperation_classification asc) category,
         factory_report_id
    from scmdata.t_factory_report_ability
   group by factory_report_id)
select a.factory_ask_id,
       a.factrory_ask_flow_status,
       a.factory_ask_type,
       substr(fals.group_dict_name, 0, instr(fals.group_dict_name, '+') - 1) FLOW_NODE_NAME,
       substr(fals.group_dict_name,
              instr(fals.group_dict_name, '+') + 1,
              length(fals.group_dict_name)) FLOW_NODE_STATUS_DESC,
       decode(a.factory_ask_type, 0, '验厂申请', '验厂报告') factory_ask_report_detail,
       case
         when a.origin = 'CA' then
          (select company_id
             from t_ask_record
            where ask_record_id = a.ask_record_id)
         else
          a.cooperation_company_id
       end company_id,
       a.company_name ASK_COMPANY_NAME,
       ga.group_dict_name cooperation_type_sp,
       case
         when a.factory_ask_type = 0 then
          (SELECT listagg(group_dict_name, ',') within GROUP(ORDER BY 1)
             FROM sys_group_dict
            WHERE group_dict_type = 'PRODUCT_TYPE'
              AND group_dict_value in
                  (select distinct cooperation_classification
                     from scmdata.t_ask_scope
                    where object_id = a.factory_ask_id
                      and object_type = 'CA'))
         else
          (SELECT listagg(distinct t.group_dict_name, ',') within GROUP(ORDER BY 1)
             FROM scmdata.t_factory_report_ability fra
             left join scmdata.sys_group_dict t
               on t.group_dict_value = fra.cooperation_classification
              AND t.group_dict_type = a.cooperation_type
            where fra.factory_report_id = fr.factory_report_id)
       end cooperation_classification_sp,
       gd.group_dict_name cooperation_model_sp,
       --加个审核意见
       (select remarks
          from (select remarks
                  from t_factory_ask_oper_log
                 where factory_ask_id = a.factory_ask_id
                   and status_af_oper in ('FA22', 'FA21', 'FA32', 'FA33')
                 order by oper_time desc)
         where rownum <= 1) audit_comment,
       decode(a.factory_ask_type, 0, '不验厂', 1, '内部验厂', '第三方验厂') factory_ask_type_desc,
       case
         when a.factory_ask_type <> 0 then
          fr.check_result
         else
          null
       end check_result,

       a.ask_date FACTORY_ASK_DATE,
       case
         when a.factory_ask_type <> 0 then
          fr.check_date
         else
          null
       end check_date
  from t_factory_ask a
 inner join (select max(ol.oper_time) audit_time, ol.factory_ask_id
               from t_factory_ask_oper_log ol
              where ol.status_AF_OPER in ('FA21', 'FA22', 'FA32', 'FA33')
              group by ol.factory_ask_id) k
    on k.factory_ask_id = a.factory_ask_id
 inner join data_pri c
    on c.factory_ask_id = a.factory_ask_id
  left join t_factory_report fr
    on a.factory_ask_id = fr.factory_ask_id
  left join data_ability frc
    on frc.factory_report_id = fr.factory_report_id
  left join sys_group_dict ga
    on a.cooperation_type = ga.group_dict_value
   and ga.group_dict_type = 'COOPERATION_TYPE'
  left join sys_group_dict gd
    on a.cooperation_model = gd.group_dict_value
   and gd.group_dict_type = 'SUPPLY_TYPE'
  left join sys_group_dict fals
    on a.factrory_ask_flow_status = fals.group_dict_value
   and fals.group_dict_type = 'FACTORY_ASK_FLOW'
 where a.factrory_ask_flow_status in ('FA22', 'FA21', 'FA32', 'FA33')
   and a.company_id = %default_company_id%
   AND (%is_company_admin% = 1 or
       instr_priv(%coop_class_priv%, c.category) > 0 or
       instr_priv(%coop_class_priv%, frc.category) > 0)
 order by k.audit_time desc*/]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_320''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[FACTORY_ASK_REPORT_DETAIL]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[factory_ask_type,factrory_ask_flow_status,company_id,factory_ask_id,CHECK_FAC_RESULT]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_320''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_320'',q''[]'',q''[FACTORY_ASK_REPORT_DETAIL]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[factory_ask_type,factrory_ask_flow_status,company_id,factory_ask_id,CHECK_FAC_RESULT]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',12,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_NAME, GROUP_DICT_VALUE, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT (CASE
         WHEN TAR.COLLECTION = 1 THEN
          '收藏'
       END) COLLECTION,
       TAR.COOR_ASK_FLOW_STATUS,
       TAR.CREATE_DATE COOP_APPLY_DATE,
       TAR.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT LISTAGG(Y.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TAR.ASK_RECORD_ID
                   AND COMPANY_ID = DECODE(TAR.ORIGIN,
                                           'MA',
                                           TAR.BE_COMPANY_ID,
                                           TAR.COMPANY_ID)) Z
         INNER JOIN DIC Y
            ON Z.TMP = Y.GROUP_DICT_VALUE
           AND Y.GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       TAR.COOPERATION_MODEL,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE TAR.COOPERATION_MODEL = GROUP_DICT_VALUE
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       SUBSTR(STATUS, 1, INSTR(STATUS, '+') - 1) FLOW_NODE_NAME,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       SAPPLY_USER,
       SAPPLY_PHONE,
       (SELECT LISTAGG(W.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_TYPE TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TAR.ASK_RECORD_ID) X
         INNER JOIN DIC W
            ON X.TMP = W.GROUP_DICT_VALUE
           AND W.GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC,
       TAR.COMPANY_ADDRESS,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID =
               DECODE(TAR.ORIGIN, 'MA', TAR.BE_COMPANY_ID, TAR.COMPANY_ID)
           AND USER_ID = TAR.CREATE_ID) CREATOR,
       TAR.CREATE_DATE CREATE_TIME,
       TAR.ASK_RECORD_ID,
       TAR.ASK_USER_ID,
       TAR.COMPANY_ID,
       TAR.ASK_SAY, --合作申请说明
       CERTIFICATE_FILE, --营业执照
       case
         when status like '%待审核%' then
          'icon-renliziyuanxinxiguanlixitong (81)'
         when status like '%不通过%' then
          'icon-renliziyuanxinxiguanlixitong (24)'
         else
          'icon-feiyongshezhi2'
       end status_desc
  FROM (SELECT A.*,
               (SELECT GROUP_DICT_NAME
                  FROM DIC
                 WHERE GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW'
                   AND GROUP_DICT_VALUE =
                       NVL((SELECT STATUS_AF_OPER
                             FROM (SELECT STATUS_AF_OPER
                                     FROM SCMDATA.T_FACTORY_ASK_OPER_LOG
                                    WHERE ASK_RECORD_ID = A.ASK_RECORD_ID
                                    ORDER BY OPER_TIME DESC)
                            WHERE ROWNUM < 2),
                           A.COOR_ASK_FLOW_STATUS)) STATUS
          FROM SCMDATA.T_ASK_RECORD A
         WHERE BE_COMPANY_ID = %DEFAULT_COMPANY_ID%) TAR
 order by TAR.CREATE_DATE desc]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''test_fl_new_list''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,COOR_ASK_FLOW_STATUS,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_MODEL,PRODUCTION_MODE,BE_COMPANY_ID,ASK_USER_ID,COMPANY_ID,FACTORY_ASK_ID,COOPERATION_PRODUCT_CATE]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''test_fl_new_list''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,PAGE_SIZES,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''test_fl_new_list'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,COOR_ASK_FLOW_STATUS,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_MODEL,PRODUCTION_MODE,BE_COMPANY_ID,ASK_USER_ID,COMPANY_ID,FACTORY_ASK_ID,COOPERATION_PRODUCT_CATE]'',,0,q''[]'',q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

