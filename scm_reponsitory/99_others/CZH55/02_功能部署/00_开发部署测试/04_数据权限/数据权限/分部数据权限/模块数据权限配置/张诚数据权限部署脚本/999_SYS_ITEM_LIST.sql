BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TFA.FACTORY_ASK_ID, --验厂申请ID
       TFA.FACTRORY_ASK_FLOW_STATUS, --流程状态
       SUBSTR(STATUS, 1, INSTR(STATUS, '+') - 1) FLOW_NODE_NAME,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       TFA.ASK_DATE FACTORY_ASK_DATE, --验厂申请日期
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECK_APPLY_USERNAME, --验厂申请人
       SU.PHONE CHECK_APPLY_PHONE, --验厂申请人手机
       TFA.COMPANY_NAME ASK_COMPANY_NAME, --公司名称
       Z.ZCLAS,
       (SELECT LISTAGG(GROUP_DICT_NAME, ';')
          FROM DIC
         WHERE INSTR(Z.ZCLAS || ';', GROUP_DICT_VALUE||';') > 0
           AND GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       TFA.COMPANY_ADDRESS, --公司地址
       TFA.FACTORY_NAME, --工厂名称
       TFA.ASK_ADDRESS, --验厂地址
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_TYPE
           AND GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC, --意向合作类型-名称
       TFA.FACTORY_ASK_TYPE CHECK_METHOD, --验厂方式
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = CAST(TFA.FACTORY_ASK_TYPE AS VARCHAR2(32))
           AND GROUP_DICT_TYPE = 'FACTORY_ASK_TYPE') CHECK_METHOD_SP --验厂方式-名称
  FROM (SELECT FACTORY_ASK_ID,
               FACTRORY_ASK_FLOW_STATUS,
               ASK_DATE,
               FACTORY_ASK_TYPE,
               COOPERATION_COMPANY_ID,
               ASK_COMPANY_ID,
               ASK_USER_ID,
               ASK_ADDRESS,
               COOPERATION_TYPE,
               COOPERATION_MODEL,
               COMPANY_NAME,
               COMPANY_ID,
               COMPANY_ADDRESS,
               CREATE_DATE,
               FACTORY_NAME,
               (SELECT GROUP_DICT_NAME
                  FROM SCMDATA.SYS_GROUP_DICT
                 WHERE GROUP_DICT_VALUE = FACTRORY_ASK_FLOW_STATUS
                   AND GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW') STATUS
          FROM SCMDATA.T_FACTORY_ASK A
         WHERE INSTR('FA12,FA21,FA22,FA32,FA33,',
                     FACTRORY_ASK_FLOW_STATUS || ',') > 0
           AND ASK_COMPANY_ID = %DEFAULT_COMPANY_ID%) TFA
  LEFT JOIN SCMDATA.SYS_USER SU
    ON TFA.ASK_USER_ID = SU.USER_ID
 INNER JOIN (SELECT OBJECT_ID,
                    COMPANY_ID,
                    LISTAGG(DISTINCT COOPERATION_CLASSIFICATION, ';') ZCLAS
               FROM SCMDATA.T_ASK_SCOPE
              GROUP BY OBJECT_ID, COMPANY_ID) Z
    ON TFA.FACTORY_ASK_ID = Z.OBJECT_ID
   AND TFA.COMPANY_ID = Z.COMPANY_ID
   AND (((%is_company_admin%)= '1') OR SCMDATA.INSTR_PRIV(%coop_class_priv%,Z.ZCLAS) > 0)]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_102''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,CHECK_METHOD,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COMPANY_ID,FACTRORY_ASK_FLOW_STATUS,COOPERATION_MODEL,ZCLAS]'',,0,q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_102''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_102'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,CHECK_METHOD,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COMPANY_ID,FACTRORY_ASK_FLOW_STATUS,COOPERATION_MODEL,ZCLAS]'',,0,q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH GDIC AS
 (SELECT GROUP_DICT_NAME, GROUP_DICT_VALUE, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT Z.ORDER_CODE, --采购订单编号
       Z.ORDER_STATUS,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE = Z.ORDER_STATUS
           AND GROUP_DICT_TYPE = 'ORDER_STATUS') ORDER_STATUS_DESC, --订单状态
       (SELECT SUPPLIER_COMPANY_NAME
          FROM SCMDATA.T_SUPPLIER_INFO
         WHERE SUPPLIER_CODE = Z.SUPPLIER_CODE
           AND COMPANY_ID = Z.COMPANY_ID) SUPPLIER, --供应商
       X.RELA_GOO_ID, --货号
       X.STYLE_NUMBER, --款号
       Y.FACTORY_CODE,
       (SELECT SUPPLIER_COMPANY_NAME
          FROM SCMDATA.T_SUPPLIER_INFO
         WHERE COMPANY_ID = Z.COMPANY_ID
           AND SUPPLIER_CODE = Y.FACTORY_CODE) PRODUCT_FACTORY, --生产工厂
       Z.DELIVERY_DATE, --订单交期
       MAX(Y.DELIVERY_DATE) OVER(PARTITION BY Y.ORDER_ID, Y.COMPANY_ID) LATEST_DELIVERY_DATE, --最新计划交期
       Y.ORDER_AMOUNT, --订单数量
       Y.ORDER_PRICE SINGLE_PRICE, --单价
       Y.ORDER_PRICE * Y.ORDER_AMOUNT ORDER_SUM, --订单金额
       Z.MEMO,
       (SELECT GROUP_DICT_NAME
          FROM GDIC
         WHERE GROUP_DICT_VALUE = Z.ORDER_TYPE
           AND GROUP_DICT_TYPE = 'ORDER_TYPE') ORDER_TYPE, --订单类型
       X.STYLE_NAME, --款式名称
       X.GOO_NAME, --品牌
       (SELECT GROUP_DICT_NAME
          FROM GDIC
         WHERE GROUP_DICT_VALUE = X.CATEGORY
           AND GROUP_DICT_TYPE = 'PRODUCT_TYPE') CATEGORY, --分类
       (SELECT GROUP_DICT_NAME
          FROM GDIC
         WHERE GROUP_DICT_VALUE = X.PRODUCT_CATE
           AND GROUP_DICT_TYPE = X.CATEGORY) PRODUCT_CATE, --生产分类
       (SELECT COMPANY_DICT_NAME
          FROM SCMDATA.SYS_COMPANY_DICT
         WHERE COMPANY_DICT_VALUE = X.SAMLL_CATEGORY
           AND COMPANY_DICT_TYPE = X.PRODUCT_CATE
           AND COMPANY_ID = Z.COMPANY_ID) SAMLL_CATEGORY_GD, --产品子类
       (SELECT NICK_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE INNER_USER_ID = Z.SEND_ORDER
           AND COMPANY_ID = Z.COMPANY_ID) SEND_ORDER, --下单人
       Z.SEND_ORDER_DATE SEND_ORDER_DATE, --下单日期
       TO_CHAR(Z.FINISH_TIME_SCM, 'yyyy-MM-dd') FINISH_TIME_SCM, --订单结束时间
       X.GOO_ID, --商品档案编号
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = Z.COMPANY_ID
           AND USER_ID = Z.UPDATE_ID) UPDATE_ID,
       Z.UPDATE_TIME,
       Z.ORDER_ID
  FROM (SELECT ORDER_ID,
               ORDER_CODE,
               ORDER_STATUS,
               SUPPLIER_CODE,
               MEMO,
               ORDER_TYPE,
               SEND_ORDER,
               SEND_ORDER_DATE,
               FINISH_TIME_SCM,
               COMPANY_ID,
               UPDATE_ID,
               UPDATE_TIME,
               DELIVERY_DATE
          FROM SCMDATA.T_ORDERED
         WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND ORDER_STATUS IN ('OS01', 'OS00')) Z
 INNER JOIN SCMDATA.T_ORDERS Y
    ON Z.ORDER_CODE = Y.ORDER_ID
   AND Z.COMPANY_ID = Y.COMPANY_ID
 INNER JOIN SCMDATA.T_COMMODITY_INFO X
    ON X.GOO_ID = Y.GOO_ID
   AND X.COMPANY_ID = Y.COMPANY_ID
 WHERE {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'SCMDATA.INSTR_PRIV(%coop_class_priv%, X.CATEGORY,'','')>0';
  END IF;

  @StrResult := V_TMPSQL;
END;}]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[DECLARE
  V_MEMO         VARCHAR2(512);
  V_FACTORY_CODE VARCHAR2(32);
  V_ORDER_STATUS VARCHAR2(32);
BEGIN
  FOR I IN (SELECT A.ORDER_ID, A.MEMO, B.FACTORY_CODE, A.ORDER_STATUS
              FROM (SELECT ORDER_ID, ORDER_CODE, COMPANY_ID, MEMO, ORDER_STATUS
                      FROM SCMDATA.T_ORDERED
                     WHERE REGEXP_COUNT(:ORDER_ID || ',', ORDER_ID || ',') > 0) A
             INNER JOIN SCMDATA.T_ORDERS B
                ON A.ORDER_CODE = B.ORDER_ID
               AND A.COMPANY_ID = B.COMPANY_ID) LOOP
    IF :MEMO <> NVL(I.MEMO,' ') THEN
      UPDATE SCMDATA.T_ORDERED
         SET MEMO        = :MEMO,
             UPDATE_ID   = %CURRENT_USERID%,
             UPDATE_TIME = SYSDATE
       WHERE REGEXP_COUNT(ORDER_ID || ',', I.ORDER_ID || ',') > 0
         AND COMPANY_ID = %DEFAULT_COMPANY_ID%;
    END IF;

    IF :FACTORY_CODE <> NVL(I.FACTORY_CODE,' ') THEN
      IF I.ORDER_STATUS = 'OS02' THEN
        RAISE_APPLICATION_ERROR(-20002, '所选订单存在已完成订单，已完成订单不可指定工厂，请检查！');
      END IF;

      UPDATE SCMDATA.T_ORDERS
         SET FACTORY_CODE = :FACTORY_CODE
       WHERE (ORDER_ID, COMPANY_ID) IN
             (SELECT ORDER_CODE, COMPANY_ID
                FROM SCMDATA.T_ORDERED
               WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
                 AND REGEXP_COUNT(ORDER_ID || ',', I.ORDER_ID || ',') > 0);

      UPDATE SCMDATA.T_PRODUCTION_PROGRESS
         SET FACTORY_CODE = :FACTORY_CODE
       WHERE (ORDER_ID,GOO_ID,COMPANY_ID) IN
             (SELECT ORDER_ID,GOO_ID,COMPANY_ID
                FROM SCMDATA.T_ORDERS
               WHERE (ORDER_ID,COMPANY_ID) IN
                     (SELECT ORDER_ID,COMPANY_ID
                        FROM SCMDATA.T_ORDERED
                       WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
                         AND REGEXP_COUNT(ORDER_ID || ',', I.ORDER_ID || ',') > 0));

      UPDATE SCMDATA.T_ORDERED
         SET UPDATE_ID = %CURRENT_USERID%, UPDATE_TIME = SYSDATE
       WHERE REGEXP_COUNT(ORDER_ID || ',', I.ORDER_ID || ',') > 0
         AND COMPANY_ID = %DEFAULT_COMPANY_ID%;
    END IF;
  END LOOP;
END;]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_order_101_0''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ORDER_ID,ORDERS_ID,COMPANY_ID,FACTORY_CODE,ORDER_STATUS]'',,0,q''[]'',q''[]'',,q''[ORDER_CODE,RELA_GOO_ID,SUPPLIER,STYLE_NUMBER]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_order_101_0''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_order_101_0'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ORDER_ID,ORDERS_ID,COMPANY_ID,FACTORY_CODE,ORDER_STATUS]'',,0,q''[]'',q''[]'',,q''[ORDER_CODE,RELA_GOO_ID,SUPPLIER,STYLE_NUMBER]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_NAME, GROUP_DICT_VALUE, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT (CASE
         WHEN TAR.COLLECTION = 1 THEN
          '收藏'
       END) COLLECTION,
       TAR.COOR_ASK_FLOW_STATUS,
       TAR.CREATE_DATE COOP_APPLY_DATE,
       TAR.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT LISTAGG(Y.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TAR.ASK_RECORD_ID
                   AND COMPANY_ID = TAR.BE_COMPANY_ID) Z
         INNER JOIN DIC Y
            ON Z.TMP = Y.GROUP_DICT_VALUE
           AND Y.GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       TAR.COOPERATION_MODEL,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE TAR.COOPERATION_MODEL = GROUP_DICT_VALUE
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       SUBSTR(STATUS, 1, INSTR(STATUS, '+') - 1) FLOW_NODE_NAME,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       SAPPLY_USER,
       SAPPLY_PHONE,
       (SELECT LISTAGG(W.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_TYPE TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TAR.ASK_RECORD_ID) X
         INNER JOIN DIC W
            ON X.TMP = W.GROUP_DICT_VALUE
           AND W.GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC,
       TAR.COMPANY_ADDRESS,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID =
               DECODE(TAR.ORIGIN, 'MA', TAR.BE_COMPANY_ID, TAR.COMPANY_ID)
           AND USER_ID = TAR.CREATE_ID) CREATOR,
       TAR.CREATE_DATE CREATE_TIME,
       TAR.ASK_RECORD_ID,
       TAR.ASK_USER_ID,
       TAR.COMPANY_ID
  FROM (SELECT A.*,
               (SELECT GROUP_DICT_NAME
                  FROM DIC
                 WHERE GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW'
                   AND GROUP_DICT_VALUE =
                       NVL((SELECT STATUS_AF_OPER
                             FROM (SELECT STATUS_AF_OPER
                                     FROM SCMDATA.T_FACTORY_ASK_OPER_LOG
                                    WHERE ASK_RECORD_ID = A.ASK_RECORD_ID
                                    ORDER BY OPER_TIME DESC)
                            WHERE ROWNUM < 2),
                           A.COOR_ASK_FLOW_STATUS)) STATUS
          FROM SCMDATA.T_ASK_RECORD A
         WHERE BE_COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND INSTR('CA03,CA00,', COOR_ASK_FLOW_STATUS || ',') = 0
           AND {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'EXISTS (SELECT 1
                  FROM SCMDATA.T_ASK_SCOPE B
                 WHERE COMPANY_ID = A.BE_COMPANY_ID
                   AND OBJECT_ID = A.ASK_RECORD_ID
                   AND SCMDATA.INSTR_PRIV(%coop_class_priv%,COOPERATION_CLASSIFICATION,'','')>0)';
  END IF;

  @StrResult := V_TMPSQL;
END;}) TAR
 ORDER BY COLLECTION, COOP_APPLY_DATE DESC]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_coop_150''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,COOR_ASK_FLOW_STATUS,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_MODEL,PRODUCTION_MODE,BE_COMPANY_ID,ASK_USER_ID,COMPANY_ID,FACTORY_ASK_ID,COOPERATION_PRODUCT_CATE]'',,0,q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_coop_150''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_coop_150'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_RECORD_ID,COOR_ASK_FLOW_STATUS,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,COOPERATION_MODEL,PRODUCTION_MODE,BE_COMPANY_ID,ASK_USER_ID,COMPANY_ID,FACTORY_ASK_ID,COOPERATION_PRODUCT_CATE]'',,0,q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TFA.FACTORY_ASK_ID,
       TFA.FACTRORY_ASK_FLOW_STATUS,
       SUBSTR(STATUS, INSTR(STATUS, '+') + 1, LENGTH(STATUS)) FLOW_NODE_STATUS_DESC,
       TFA.ASK_DATE FACTORY_ASK_DATE,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = TFA.COMPANY_ID
           AND USER_ID = TFA.ASK_USER_ID) CHECK_APPLY_USERNAME,
       SU.PHONE CHECK_APPLY_PHONE,
       TFA.COMPANY_NAME ASK_COMPANY_NAME,
       (SELECT LISTAGG(B.GROUP_DICT_NAME, ';')
          FROM (SELECT DISTINCT COOPERATION_CLASSIFICATION TMP
                  FROM SCMDATA.T_ASK_SCOPE
                 WHERE OBJECT_ID = TFA.FACTORY_ASK_ID
                   AND COMPANY_ID = TFA.COMPANY_ID) A
         INNER JOIN DIC B
            ON A.TMP = B.GROUP_DICT_VALUE
           AND B.GROUP_DICT_TYPE = 'PRODUCT_TYPE') COOPERATION_CLASSIFICATION_DESC,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_MODEL
           AND GROUP_DICT_TYPE = 'SUPPLY_TYPE') COOPERATION_MODEL_DESC,
       TFA.COMPANY_ADDRESS,
       TFA.FACTORY_NAME,
       TFA.ASK_ADDRESS,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TFA.COOPERATION_TYPE
           AND GROUP_DICT_TYPE = 'COOPERATION_TYPE') COOPERATION_TYPE_DESC,
       TFA.FACTORY_ASK_TYPE CHECK_METHOD,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = CAST(TFA.FACTORY_ASK_TYPE AS VARCHAR2(32))
           AND GROUP_DICT_TYPE = 'FACTORY_ASK_TYPE') CHECK_METHOD_SP
  FROM (SELECT FACTORY_ASK_ID,
               FACTRORY_ASK_FLOW_STATUS,
               ASK_DATE,
               FACTORY_ASK_TYPE,
               COOPERATION_COMPANY_ID,
               ASK_COMPANY_ID,
               ASK_USER_ID,
               ASK_ADDRESS,
               COOPERATION_TYPE,
               COOPERATION_MODEL,
               COMPANY_NAME,
               COMPANY_ADDRESS,
               COMPANY_ID,
               CREATE_DATE,
               FACTORY_NAME,
               (SELECT GROUP_DICT_NAME
                  FROM SCMDATA.SYS_GROUP_DICT
                 WHERE GROUP_DICT_VALUE = FACTRORY_ASK_FLOW_STATUS
                   AND GROUP_DICT_TYPE = 'FACTORY_ASK_FLOW') STATUS
          FROM SCMDATA.T_FACTORY_ASK A
         WHERE ASK_COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND FACTRORY_ASK_FLOW_STATUS = 'FA11'
           AND {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'EXISTS (SELECT 1
          FROM SCMDATA.T_ASK_SCOPE B
         WHERE OBJECT_ID = A.FACTORY_ASK_ID
           AND COMPANY_ID = A.COMPANY_ID
           AND SCMDATA.INSTR_PRIV(%coop_class_priv%,B.COOPERATION_CLASSIFICATION,'','')>0)';
  END IF;

  @StrResult := V_TMPSQL;
END;}) TFA
  LEFT JOIN SCMDATA.SYS_USER SU
    ON TFA.ASK_USER_ID = SU.USER_ID
 ORDER BY TFA.CREATE_DATE DESC]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_101''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,FACTRORY_ASK_FLOW_STATUS,CHECK_METHOD]'',,0,q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_101''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT ,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_101'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[FACTORY_REPORT_ID,FACTORY_ASK_ID,COOPERATION_METHOD,COOPERATION_MODEL,PRODUCTION_MODE,COOPERATION_TYPE,COOPERATION_CLASSIFICATION,COOPERATION_SUBCATEGORY,FACTRORY_ASK_FLOW_STATUS,CHECK_METHOD]'',,0,q''[]'',q''[]'',,q''[ASK_COMPANY_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH GDIC AS
 (SELECT GROUP_DICT_NAME, GROUP_DICT_VALUE, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT Z.ORDER_CODE, --采购订单编号
       Z.ORDER_STATUS,
       (SELECT GROUP_DICT_NAME
          FROM SCMDATA.SYS_GROUP_DICT
         WHERE GROUP_DICT_VALUE = Z.ORDER_STATUS
           AND GROUP_DICT_TYPE = 'ORDER_STATUS') ORDER_STATUS_DESC, --订单状态
       (SELECT SUPPLIER_COMPANY_NAME
          FROM SCMDATA.T_SUPPLIER_INFO
         WHERE SUPPLIER_CODE = Z.SUPPLIER_CODE
           AND COMPANY_ID = Z.COMPANY_ID) SUPPLIER, --供应商
       X.RELA_GOO_ID, --货号
       X.STYLE_NUMBER, --款号
       Y.FACTORY_CODE,
       (SELECT SUPPLIER_COMPANY_NAME
          FROM SCMDATA.T_SUPPLIER_INFO
         WHERE COMPANY_ID = Z.COMPANY_ID
           AND SUPPLIER_CODE = Y.FACTORY_CODE) PRODUCT_FACTORY, --生产工厂
       Z.DELIVERY_DATE, --订单交期
       MAX(Y.DELIVERY_DATE) OVER (PARTITION BY Y.ORDER_ID,Y.COMPANY_ID) LATEST_DELIVERY_DATE, --最新计划交期
       Y.ORDER_AMOUNT, --订单数量
       Y.ORDER_PRICE SINGLE_PRICE, --单价
       Y.ORDER_PRICE * Y.ORDER_AMOUNT ORDER_SUM, --订单金额
       Z.MEMO,
       (SELECT GROUP_DICT_NAME
          FROM GDIC
         WHERE GROUP_DICT_VALUE = Z.ORDER_TYPE
           AND GROUP_DICT_TYPE = 'ORDER_TYPE') ORDER_TYPE, --订单类型
       X.STYLE_NAME, --款式名称
       X.GOO_NAME, --品牌
       (SELECT GROUP_DICT_NAME
          FROM GDIC
         WHERE GROUP_DICT_VALUE = X.CATEGORY
           AND GROUP_DICT_TYPE = 'PRODUCT_TYPE') CATEGORY, --分类
       (SELECT GROUP_DICT_NAME
          FROM GDIC
         WHERE GROUP_DICT_VALUE = X.PRODUCT_CATE
           AND GROUP_DICT_TYPE = X.CATEGORY) PRODUCT_CATE, --生产分类
       (SELECT COMPANY_DICT_NAME
          FROM SCMDATA.SYS_COMPANY_DICT
         WHERE COMPANY_DICT_VALUE = X.SAMLL_CATEGORY
           AND COMPANY_DICT_TYPE = X.PRODUCT_CATE
           AND COMPANY_ID = Z.COMPANY_ID) SAMLL_CATEGORY_GD, --产品子类
       (SELECT NICK_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE INNER_USER_ID = Z.SEND_ORDER
           AND COMPANY_ID = Z.COMPANY_ID) SEND_ORDER, --下单人
       Z.SEND_ORDER_DATE SEND_ORDER_DATE, --下单日期
       TO_CHAR(Z.FINISH_TIME_SCM, 'yyyy-MM-dd') FINISH_TIME_SCM, --订单结束时间
       X.GOO_ID, --商品档案编号
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = Z.COMPANY_ID
           AND USER_ID = Z.UPDATE_ID) UPDATE_ID,
       Z.UPDATE_TIME,
       Z.ORDER_ID
  FROM (SELECT ORDER_ID,
               ORDER_CODE,
               ORDER_STATUS,
               SUPPLIER_CODE,
               MEMO,
               ORDER_TYPE,
               SEND_ORDER,
               SEND_ORDER_DATE,
               FINISH_TIME_SCM,
               COMPANY_ID,
               UPDATE_ID,
               UPDATE_TIME,
               DELIVERY_DATE
          FROM SCMDATA.T_ORDERED
         WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND ORDER_STATUS IN ('OS02','OS03')) Z
 INNER JOIN SCMDATA.T_ORDERS Y
    ON Z.ORDER_CODE = Y.ORDER_ID
   AND Z.COMPANY_ID = Y.COMPANY_ID
 INNER JOIN SCMDATA.T_COMMODITY_INFO X
    ON X.GOO_ID = Y.GOO_ID
   AND X.COMPANY_ID = Y.COMPANY_ID
 WHERE {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'SCMDATA.INSTR_PRIV(%coop_class_priv%, X.CATEGORY,'','')>0';
  END IF;

  @StrResult := V_TMPSQL;
END;}]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_order_101_1''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ORDER_ID,ORDERS_ID,COMPANY_ID,FACTORY_CODE,ORDER_STATUS]'',,0,q''[]'',q''[]'',,q''[ORDER_CODE,RELA_GOO_ID,SUPPLIER,STYLE_NUMBER]'',3,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_order_101_1''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_order_101_1'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[ORDER_ID,ORDERS_ID,COMPANY_ID,FACTORY_CODE,ORDER_STATUS]'',,0,q''[]'',q''[]'',,q''[ORDER_CODE,RELA_GOO_ID,SUPPLIER,STYLE_NUMBER]'',3,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[DECLARE
  OI_STR    VARCHAR2(32);
  STATUS    VARCHAR2(10);
  COMP_ID   VARCHAR2(32);
  GOOD_ID   VARCHAR2(32);
  AP_NUM    NUMBER(4);
BEGIN
  SELECT APPROVE_STATUS, ORIGIN, COMPANY_ID, GOO_ID, APPROVE_NUMBER
     INTO STATUS, OI_STR, COMP_ID, GOOD_ID, AP_NUM
    FROM SCMDATA.T_APPROVE_VERSION
   WHERE APPROVE_VERSION_ID = :APPROVE_VERSION_ID;

   IF OI_STR = 'SI' AND AP_NUM = 0 THEN
     RAISE_APPLICATION_ERROR(-20002, '批版次数为 0 且为系统新增的待批版数据不可删除！');
   ELSE
     DELETE FROM SCMDATA.T_APPROVE_VERSION WHERE APPROVE_VERSION_ID=:APPROVE_VERSION_ID;
     DELETE FROM SCMDATA.T_APPROVE_FILE WHERE APPROVE_VERSION_ID=:APPROVE_VERSION_ID;
     DELETE FROM SCMDATA.T_APPROVE_RISK_ASSESSMENT WHERE APPROVE_VERSION_ID=:APPROVE_VERSION_ID;
     UPDATE SCMDATA.T_PRODUCTION_PROGRESS PR
       SET PR.APPROVE_EDITION = (SELECT APPROVE_RESULT
                                   FROM (SELECT APPROVE_RESULT, ROWNUM RN FROM SCMDATA.T_APPROVE_VERSION
                                          WHERE GOO_ID=GOOD_ID AND COMPANY_ID=COMP_ID
                                         ORDER BY CREATE_TIME DESC)
                                  WHERE RN = 1)
       WHERE COMPANY_ID=COMP_ID
         AND GOO_ID=GOOD_ID;
   END IF;
END;]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[DECLARE
  JUDGE     NUMBER(1);
  AV_ID     VARCHAR2(32);
  AP_NUMBER INTEGER;
  OI_STR    VARCHAR2(4);
  ST_NUMBER VARCHAR2(32);
  TARA_ROW  SCMDATA.T_APPROVE_RISK_ASSESSMENT%ROWTYPE;
  TAF_ROW   SCMDATA.T_APPROVE_FILE%ROWTYPE;
  GOOD_ID   VARCHAR2(32);
BEGIN
  IF :RELA_GOO_ID IS NULL THEN
    RAISE_APPLICATION_ERROR(-20002, '未检测到输入货号，请重新输入后再保存！');
  END IF;

  SELECT GOO_ID
     INTO GOOD_ID
    FROM SCMDATA.T_COMMODITY_INFO
   WHERE RELA_GOO_ID=:RELA_GOO_ID
     AND COMPANY_ID=%DEFAULT_COMPANY_ID%;

  IF GOOD_ID IS NULL THEN
    RAISE_APPLICATION_ERROR(-20002, '输入货号有误，请核对后重新输入！');
  ELSE
    --是否存在已批版数据
    SELECT COUNT(1)
       INTO JUDGE
      FROM SCMDATA.T_APPROVE_VERSION
     WHERE COMPANY_ID=%DEFAULT_COMPANY_ID%
       AND GOO_ID=GOOD_ID
       AND APPROVE_STATUS IN ('AS01', 'AS02');
    IF JUDGE > 0 THEN
      --存在已批版数据
      --是否存在待批版数据
      SELECT COUNT(1)
         INTO JUDGE
        FROM SCMDATA.T_APPROVE_VERSION
       WHERE COMPANY_ID=%DEFAULT_COMPANY_ID%
         AND GOO_ID=GOOD_ID
         AND APPROVE_STATUS = 'AS00';

      --非复版流程，报错
      IF JUDGE > 0 THEN
        RAISE_APPLICATION_ERROR(-20002, '待批版页面已有该货号数据，请勿重复新增！');
      ELSE
        --复版
        AV_ID := SCMDATA.F_GETKEYID_PLAT('AP_VERSION',
                                         'seq_approve_version',
                                          '99');

        SELECT APPROVE_NUMBER + 1, ORIGIN
           INTO AP_NUMBER, OI_STR
          FROM (SELECT APPROVE_NUMBER, ORIGIN
                  FROM SCMDATA.T_APPROVE_VERSION
                 WHERE GOO_ID = GOOD_ID
                   AND COMPANY_ID = %DEFAULT_COMPANY_ID%
                 ORDER BY CREATE_TIME DESC)
         WHERE ROWNUM < 2;

        SELECT STYLE_NUMBER
           INTO ST_NUMBER
          FROM SCMDATA.T_COMMODITY_INFO
         WHERE GOO_ID = GOOD_ID
           AND COMPANY_ID = %DEFAULT_COMPANY_ID%;

        --插入 APPROVE_VERSION 表
        INSERT INTO SCMDATA.T_APPROVE_VERSION
          (APPROVE_VERSION_ID, COMPANY_ID, BILL_CODE, APPROVE_STATUS,
           APPROVE_NUMBER,  APPROVE_RESULT, GOO_ID, STYLE_CODE,
           CREATE_TIME, ORIGIN, CREATE_ID)
        VALUES
          (AV_ID, %DEFAULT_COMPANY_ID%,
           SCMDATA.F_GETKEYID_PLAT('BILL_CODE', 'seq_billcode', '99'),
           'AS00', AP_NUMBER, 'AS00', GOOD_ID, ST_NUMBER, SYSDATE, OI_STR, %CURRENT_USERID%);

        --插入 APPROVE_RISK_ASSESSMENT 表
        FOR TARA_ROW IN (SELECT *
                           FROM SCMDATA.T_APPROVE_RISK_ASSESSMENT
                          WHERE APPROVE_VERSION_ID = :APPROVE_VERSION_ID) LOOP
          INSERT INTO SCMDATA.T_APPROVE_RISK_ASSESSMENT
            (APPROVE_RISK_ASSESSMENT_ID, APPROVE_VERSION_ID, COMPANY_ID,
             ASSESS_TYPE, ASSESS_SAY, RISK_WARNING, ASSESS_RESULT,
             UNQUALIFIED_SAY, ASSESS_USER_ID, ASSESS_TIME, REMARKS)
          VALUES
            (SCMDATA.F_GET_UUID(), AV_ID, %DEFAULT_COMPANY_ID%,
             TARA_ROW.ASSESS_TYPE, TARA_ROW.ASSESS_SAY,
             TARA_ROW.RISK_WARNING, TARA_ROW.ASSESS_RESULT,
             TARA_ROW.UNQUALIFIED_SAY, TARA_ROW.ASSESS_USER_ID,
             TARA_ROW.ASSESS_TIME, TARA_ROW.REMARKS);
        END LOOP;

        --插入 APPROVE_FILE 表
        FOR TAF_ROW IN (SELECT *
                          FROM SCMDATA.T_APPROVE_FILE
                         WHERE APPROVE_VERSION_ID=:APPROVE_VERSION_ID) LOOP
          INSERT INTO SCMDATA.T_APPROVE_FILE
            (APPROVE_FILE_ID,APPROVE_VERSION_ID,COMPANY_ID,FILE_ID,
             UPLOAD_USER_ID,UPLOAD_TIME,REMARKS,DEL_FLAG)
          VALUES
            (SCMDATA.F_GET_UUID(),AV_ID,
             TAF_ROW.COMPANY_ID,TAF_ROW.FILE_ID,TAF_ROW.UPLOAD_USER_ID,
             TAF_ROW.UPLOAD_TIME,TAF_ROW.REMARKS,0);
        END LOOP;
      END IF;
    ELSE
      --不存在已批版数据
      --是否存在待批版数据
      SELECT COUNT(1)
         INTO JUDGE
        FROM SCMDATA.T_APPROVE_VERSION
       WHERE COMPANY_ID=%DEFAULT_COMPANY_ID%
         AND GOO_ID=GOOD_ID
         AND APPROVE_STATUS = 'AS00';

      --非新增流程，报错
      IF JUDGE > 0 THEN
        RAISE_APPLICATION_ERROR(-20002, '待批版页面已有该货号数据，请勿重复新增！');
      ELSE
        --新增流程
        AV_ID := SCMDATA.F_GETKEYID_PLAT('AP_VERSION',
                                         'seq_approve_version',
                                          '99');
        AP_NUMBER := 0;

        SELECT STYLE_NUMBER
           INTO ST_NUMBER
          FROM SCMDATA.T_COMMODITY_INFO
         WHERE GOO_ID = GOOD_ID
           AND COMPANY_ID = %DEFAULT_COMPANY_ID%;

        --插入 APPROVE_VERSION 表
        INSERT INTO SCMDATA.T_APPROVE_VERSION
          (APPROVE_VERSION_ID, COMPANY_ID, BILL_CODE, APPROVE_STATUS,
           APPROVE_NUMBER,  APPROVE_RESULT, GOO_ID, STYLE_CODE,
           CREATE_TIME, ORIGIN, CREATE_ID)
        VALUES
          (AV_ID, %DEFAULT_COMPANY_ID%,
           SCMDATA.F_GETKEYID_PLAT('BILL_CODE', 'seq_billcode', '99'),
           'AS00', AP_NUMBER, 'AS00', GOOD_ID, ST_NUMBER, SYSDATE, 'MI', %CURRENT_USERID%);

        SCMDATA.PKG_APPROVE_INSERT.P_APPROVE_REVERSION_INSERT(%DEFAULT_COMPANY_ID%,AV_ID);

      END IF;
    END IF;
  END IF;

  UPDATE SCMDATA.T_PRODUCTION_PROGRESS PR
    SET PR.APPROVE_EDITION = 'AS00'
   WHERE COMPANY_ID=%DEFAULT_COMPANY_ID%
     AND GOO_ID=GOOD_ID;
END;]';
  CV4 CLOB:=q'[SELECT * FROM SCMDATA.T_APPROVE_VERSION WHERE APPROVE_VERSION_ID = :APPROVE_VERSION_ID AND COMPANY_ID = %DEFAULT_COMPANY_ID% FOR UPDATE;]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TAV.APPROVE_VERSION_ID,
       TAV.APPROVE_NUMBER,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TAV.APPROVE_RESULT) APPROVE_RESULT_DESC,
       (SELECT SUPPLIER_COMPANY_NAME
          FROM SCMDATA.T_SUPPLIER_INFO
         WHERE SUPPLIER_CODE = TCI.SUPPLIER_CODE
           AND COMPANY_ID = TAV.COMPANY_ID) SUPPLIER,
       TCI.RELA_GOO_ID,
       TCI.STYLE_NUMBER STYLE_CODE,
       TCI.STYLE_NAME,
       TARA.ALREADY_EVALTYPE,
       TARA.LASTEST_ASSESS_TIME,
       TCI.EXECUTIVE_STD,
       K.COMPOSNAME_LONG,
       TAV.REMARKS,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TCI.CATEGORY
           AND GROUP_DICT_TYPE = 'PRODUCT_TYPE') CATEGORY,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TCI.PRODUCT_CATE
           AND GROUP_DICT_TYPE = TCI.CATEGORY) PRODUCT_CATE,
       (SELECT COMPANY_DICT_NAME
          FROM SCMDATA.SYS_COMPANY_DICT
         WHERE COMPANY_ID = TAV.COMPANY_ID
           AND COMPANY_DICT_VALUE = TCI.SAMLL_CATEGORY
           AND COMPANY_DICT_TYPE = TCI.PRODUCT_CATE) SAMLL_CATEGORY,
       TAV.GOO_ID,
       TAV.ORIGIN,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE USER_ID = TAV.CREATE_ID
           AND COMPANY_ID = TAV.COMPANY_ID) CREATOR,
       TCI.CREATE_TIME COMM_FILE_CREATETIME,
       TAV.CREATE_TIME
  FROM (SELECT APPROVE_VERSION_ID,
               COMPANY_ID,
               BILL_CODE,
               APPROVE_STATUS,
               APPROVE_NUMBER,
               APPROVE_RESULT,
               GOO_ID,
               STYLE_CODE,
               APPROVE_USER_ID,
               APPROVE_TIME,
               CREATE_TIME,
               ORIGIN,
               CREATE_ID,
               REMARKS
          FROM SCMDATA.T_APPROVE_VERSION
         WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND APPROVE_STATUS = 'AS00') TAV
  LEFT JOIN (SELECT T.APPROVE_VERSION_ID,
                    T.COMPANY_ID,
                    MAX(T.ASSESS_TIME) LASTEST_ASSESS_TIME,
                    LISTAGG(X.GROUP_DICT_NAME, ',') WITHIN GROUP(ORDER BY T.ASSESS_TYPE) ALREADY_EVALTYPE
               FROM (SELECT APPROVE_VERSION_ID,
                            COMPANY_ID,
                            ASSESS_TIME,
                            ASSESS_TYPE
                       FROM SCMDATA.T_APPROVE_RISK_ASSESSMENT
                      WHERE LENGTH(TRIM(ASSESS_SAY)) > 0) T
               LEFT JOIN DIC X
                 ON T.ASSESS_TYPE = X.GROUP_DICT_VALUE
                AND X.GROUP_DICT_TYPE = 'BAD_FACTOR'
              GROUP BY T.APPROVE_VERSION_ID, T.COMPANY_ID) TARA
    ON TAV.APPROVE_VERSION_ID = TARA.APPROVE_VERSION_ID
   AND TAV.COMPANY_ID = TARA.COMPANY_ID
 INNER JOIN SCMDATA.T_COMMODITY_INFO TCI
    ON TAV.COMPANY_ID = TCI.COMPANY_ID
   AND TAV.GOO_ID = TCI.GOO_ID
   AND {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'SCMDATA.INSTR_PRIV(%coop_class_priv%, TCI.CATEGORY,'','')>0';
  END IF;

  @StrResult := V_TMPSQL;
END;}
  LEFT JOIN (SELECT COMMODITY_INFO_ID,COMPANY_ID,
       LISTAGG(COMPOSNAME || ' ' || PK, CHR(10)) WITHIN GROUP(ORDER BY SEQ) COMPOSNAME_LONG
  FROM (SELECT DISTINCT COMMODITY_INFO_ID,COMPANY_ID,COMPOSNAME,
               LISTAGG(LOADRATE*100||'%'||' '||GOO_RAW||' '||MEMO,' ') WITHIN GROUP(ORDER BY SORT ASC) OVER(PARTITION BY COMMODITY_INFO_ID,COMPANY_ID,COMPOSNAME) PK,
               CASE COMPOSNAME
                 WHEN '面料1' THEN 1
                 WHEN '面料2' THEN 2
                 WHEN '面料' THEN 3
                 WHEN '里料1' THEN 4
                 WHEN '里料2' THEN 5
                 WHEN '里料' THEN 6
                 WHEN '侧翼面料' THEN 7
                 WHEN '侧翼里料' THEN 8
                 WHEN '罩杯里料' THEN 9
                 WHEN '表层' THEN 10
                 WHEN '基布' THEN 11
                 WHEN '填充物' THEN 12
                 WHEN '填充量' THEN 13
                 WHEN '鞋面材质' THEN 14
                 WHEN '鞋底材质' THEN 15
                 WHEN '帽里填充物' THEN 16
                 ELSE 99 END SEQ
          FROM (SELECT COMMODITY_INFO_ID,COMPANY_ID,COMPOSNAME,
                       LOADRATE,GOO_RAW,MEMO,SORT
                  FROM SCMDATA.T_COMMODITY_COMPOSITION))
 GROUP BY COMMODITY_INFO_ID,COMPANY_ID) K
   ON K.COMMODITY_INFO_ID = TCI.COMMODITY_INFO_ID
  AND K.COMPANY_ID = TCI.COMPANY_ID
 ORDER BY TAV.CREATE_TIME DESC]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[UPDATE SCMDATA.T_APPROVE_VERSION
  SET REMARKS = :REMARKS
WHERE APPROVE_VERSION_ID = :APPROVE_VERSION_ID]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_approve_111''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[APPROVE_VERSION_ID,APPROVE_STATUS,APPROVE_RESULT,APPROVE_USER_ID]'',,0,q''[]'',q''[]'',,q''[SUPPLIER,RELA_GOO_ID,GOO_ID,STYLE_CODE,STYLE_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_approve_111''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_approve_111'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[APPROVE_VERSION_ID,APPROVE_STATUS,APPROVE_RESULT,APPROVE_USER_ID]'',,0,q''[]'',q''[]'',,q''[SUPPLIER,RELA_GOO_ID,GOO_ID,STYLE_CODE,STYLE_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TAV.APPROVE_VERSION_ID,
       TAV.APPROVE_NUMBER,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE COMPANY_ID = %DEFAULT_COMPANY_ID%
           AND USER_ID = TAV.APPROVE_USER_ID) APPROVE_USER,
       TAV.APPROVE_TIME,
       TAV.APPROVE_RESULT,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TAV.APPROVE_RESULT) APPROVE_RESULT_DESC,
       (SELECT SUPPLIER_COMPANY_NAME
          FROM SCMDATA.T_SUPPLIER_INFO
         WHERE SUPPLIER_CODE = TCI.SUPPLIER_CODE
           AND COMPANY_ID = %default_company_id%) SUPPLIER,
       TCI.RELA_GOO_ID,
       TCI.STYLE_NUMBER STYLE_CODE,
       TCI.STYLE_NAME,
       TCI.EXECUTIVE_STD,
       K.COMPOSNAME_LONG,
       TAV.REMARKS,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TCI.CATEGORY
           AND GROUP_DICT_TYPE = 'PRODUCT_TYPE') CATEGORY,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TCI.PRODUCT_CATE
           AND GROUP_DICT_TYPE = TCI.CATEGORY) PRODUCT_CATE,
       (SELECT COMPANY_DICT_NAME
          FROM SCMDATA.SYS_COMPANY_DICT
         WHERE COMPANY_ID = TAV.COMPANY_ID
           AND COMPANY_DICT_VALUE = TCI.SAMLL_CATEGORY
           AND COMPANY_DICT_TYPE = TCI.PRODUCT_CATE) SAMLL_CATEGORY,
       TAV.GOO_ID,
       TAV.ORIGIN,
       (SELECT COMPANY_USER_NAME
          FROM SCMDATA.SYS_COMPANY_USER
         WHERE USER_ID = TAV.CREATE_ID
           AND COMPANY_ID = TAV.COMPANY_ID) CREATOR,
       TCI.CREATE_TIME COMM_FILE_CREATETIME,
       TAV.CREATE_TIME
  FROM (SELECT APPROVE_VERSION_ID,
               COMPANY_ID,
               BILL_CODE,
               APPROVE_STATUS,
               APPROVE_NUMBER,
               APPROVE_RESULT,
               GOO_ID,
               STYLE_CODE,
               APPROVE_USER_ID,
               APPROVE_TIME,
               CREATE_TIME,
               ORIGIN,
               CREATE_ID,
               REMARKS
          FROM SCMDATA.T_APPROVE_VERSION
         WHERE COMPANY_ID = %default_company_id%
           AND APPROVE_STATUS IN ('AS01', 'AS02')) TAV
   INNER JOIN SCMDATA.T_COMMODITY_INFO TCI
          ON TAV.COMPANY_ID = TCI.COMPANY_ID
          AND TAV.GOO_ID = TCI.GOO_ID
          AND {DECLARE
  V_FLAG    NUMBER:=TO_NUMBER(%IS_COMPANY_ADMIN%);
  V_TMPSQL  CLOB;
BEGIN
  IF V_FLAG > 0 THEN
    V_TMPSQL := '1=1';
  ELSE
    V_TMPSQL := 'SCMDATA.INSTR_PRIV(%coop_class_priv%, TCI.CATEGORY,'','')>0';
  END IF;

  @StrResult := V_TMPSQL;
END;}
   LEFT JOIN (SELECT COMMODITY_INFO_ID,COMPANY_ID,
       LISTAGG(COMPOSNAME || ' ' || PK, CHR(10)) WITHIN GROUP(ORDER BY SEQ) COMPOSNAME_LONG
  FROM (SELECT DISTINCT COMMODITY_INFO_ID,COMPANY_ID,COMPOSNAME,
               LISTAGG(LOADRATE*100||'%'||' '||GOO_RAW||' '||MEMO,' ') WITHIN GROUP(ORDER BY SORT ASC) OVER(PARTITION BY COMMODITY_INFO_ID,COMPANY_ID,COMPOSNAME) PK,
               CASE COMPOSNAME
                 WHEN '面料1' THEN 1
                 WHEN '面料2' THEN 2
                 WHEN '面料' THEN 3
                 WHEN '里料1' THEN 4
                 WHEN '里料2' THEN 5
                 WHEN '里料' THEN 6
                 WHEN '侧翼面料' THEN 7
                 WHEN '侧翼里料' THEN 8
                 WHEN '罩杯里料' THEN 9
                 WHEN '表层' THEN 10
                 WHEN '基布' THEN 11
                 WHEN '填充物' THEN 12
                 WHEN '填充量' THEN 13
                 WHEN '鞋面材质' THEN 14
                 WHEN '鞋底材质' THEN 15
                 WHEN '帽里填充物' THEN 16
                 ELSE 99 END SEQ
          FROM (SELECT COMMODITY_INFO_ID,COMPANY_ID,COMPOSNAME,
                       LOADRATE,GOO_RAW,MEMO,SORT
                  FROM SCMDATA.T_COMMODITY_COMPOSITION))
 GROUP BY COMMODITY_INFO_ID,COMPANY_ID) K
   ON K.COMMODITY_INFO_ID = TCI.COMMODITY_INFO_ID
  AND K.COMPANY_ID = TCI.COMPANY_ID
 ORDER BY APPROVE_TIME DESC]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_approve_112''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[APPROVE_VERSION_ID,APPROVE_STATUS,APPROVE_RESULT]'',,0,q''[]'',q''[]'',,q''[SUPPLIER,RELA_GOO_ID,GOO_ID,STYLE_CODE,STYLE_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_approve_112''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_approve_112'',q''[]'',q''[]'',,q''[]'',1,q''[]'',q''[]'',q''[]'',q''[]'',q''[APPROVE_VERSION_ID,APPROVE_STATUS,APPROVE_RESULT]'',,0,q''[]'',q''[]'',,q''[SUPPLIER,RELA_GOO_ID,GOO_ID,STYLE_CODE,STYLE_NAME]'',13,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

BEGIN
  DECLARE
    JUDGE_N NUMBER(4);
    EXE_SQL CLOB;
    VALS    CLOB;
  CV1 CLOB:=q'[]';
  CV2 CLOB:=q'[]';
  CV3 CLOB:=q'[]';
  CV4 CLOB:=q'[]';
  CV5 CLOB:=q'[]';
  CV6 CLOB:=q'[]';
  CV7 CLOB:=q'[WITH DIC AS
 (SELECT GROUP_DICT_VALUE, GROUP_DICT_NAME, GROUP_DICT_TYPE
    FROM SCMDATA.SYS_GROUP_DICT)
SELECT TAS.ASK_SCOPE_ID,
       TAS.COMPANY_ID,
       TAS.OBJECT_ID,
       TAS.OBJECT_TYPE,
       TAS.COOPERATION_CLASSIFICATION,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TAS.COOPERATION_CLASSIFICATION
           AND GROUP_DICT_TYPE = TAS.COOPERATION_TYPE) COOPERATION_CLASSIFICATION_DES,
       TAS.COOPERATION_PRODUCT_CATE,
       (SELECT GROUP_DICT_NAME
          FROM DIC
         WHERE GROUP_DICT_VALUE = TAS.COOPERATION_PRODUCT_CATE
           AND GROUP_DICT_TYPE = TAS.COOPERATION_CLASSIFICATION) COOPERATION_PRODUCT_CATE_DESC,
       TAS.COOPERATION_SUBCATEGORY,
       (SELECT LISTAGG(B.COMPANY_DICT_NAME, ';')
          FROM (SELECT REGEXP_SUBSTR(TAS.COOPERATION_SUBCATEGORY,'[^;]+',1,LEVEL) COL
                  FROM DUAL
                CONNECT BY LEVEL <=
                           REGEXP_COUNT(TAS.COOPERATION_SUBCATEGORY, '\;') + 1) A
         INNER JOIN SCMDATA.SYS_COMPANY_DICT B
            ON A.COL = B.COMPANY_DICT_VALUE
            AND B.COMPANY_ID=%DEFAULT_COMPANY_ID%
           AND B.COMPANY_DICT_TYPE = TAS.COOPERATION_PRODUCT_CATE) COOPERATION_SUBCATEGORY_DESC
  FROM SCMDATA.T_ASK_SCOPE TAS
 INNER JOIN SCMDATA.T_FACTORY_ASK TFA
    ON TAS.OBJECT_ID = TFA.FACTORY_ASK_ID
   AND TAS.COMPANY_ID = TFA.COMPANY_ID
   AND TFA.FACTORY_ASK_ID = :FACTORY_ASK_ID]';
  CV8 CLOB:=q'[]';
  CV9 CLOB:=q'[]';

  BEGIN
    EXE_SQL := 'SELECT COUNT(1) FROM BW3.SYS_ITEM_LIST WHERE ITEM_ID = ''a_check_109_2''';
    EXECUTE IMMEDIATE EXE_SQL INTO JUDGE_N;
    IF JUDGE_N > 0 THEN
       EXE_SQL := 'UPDATE BW3.SYS_ITEM_LIST SET (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) = (SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',q''[]'',,q''[]'',2,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_SCOPE_ID,COOPERATION_CLASSIFICATION,COOPERATION_PRODUCT_CATE,COOPERATION_SUBCATEGORY,OBJECT_ID,OBJECT_TYPE,COMPANY_ID,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL) WHERE ITEM_ID = ''a_check_109_2''';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     ELSE
       EXE_SQL := 'INSERT INTO BW3.SYS_ITEM_LIST (AUTO_REFRESH,BACK_GROUND_ID,EDIT_EXPRESS,END_FIELD,EXECUTE_TIME,FOOTER,HEADER,HINT_TYPE,ITEM_ID,JUMP_EXPRESS,JUMP_FIELD,MAX_ROW_COUNT,MONITOR_ID,MULTI_PAGE_FLAG,NOADD_FIELDS,NOEDIT_FIELDS,NOMODIFY_FIELDS,NOSHOW_APP_FIELDS,NOSHOW_FIELDS,OPEN_MODE,OPERATE_TYPE,OPERATION_TYPE,OUTPUT_PARAMETER,QUERY_COUNT,QUERY_FIELDS,QUERY_TYPE,RFID_FLAG,SCANNABLE_FIELD,SCANNABLE_LOCATION_LINE,SCANNABLE_TIME,SCANNABLE_TYPE,SUBNOSHOW_FIELDS,SUB_EDIT_STATE,SUB_TABLE_JUDGE_FIELD,UI_TMPL,DELETE_SQL,DETAIL_SQL,INSERT_SQL,LOCK_SQL,NEWID_SQL,OPRETION_HINT,SELECT_SQL,SUBSELECT_SQL,UPDATE_SQL) SELECT 1,q''[]'',q''[]'',q''[]'',,q''[]'',q''[]'',,''a_check_109_2'',q''[]'',q''[]'',,q''[]'',2,q''[]'',q''[]'',q''[]'',q''[]'',q''[ASK_SCOPE_ID,COOPERATION_CLASSIFICATION,COOPERATION_PRODUCT_CATE,COOPERATION_SUBCATEGORY,OBJECT_ID,OBJECT_TYPE,COMPANY_ID,COOPERATION_TYPE]'',,0,q''[]'',q''[]'',,q''[]'',0,,q''[]'',q''[]'',,,q''[]'',,q''[]'',q''[]'',:CV1,:CV2,:CV3,:CV4,:CV5,:CV6,:CV7,:CV8,:CV9 FROM DUAL';
       WHILE REGEXP_COUNT(EXE_SQL,',,') > 0 LOOP
         EXE_SQL := REPLACE(EXE_SQL,',,',',NULL,');
       END LOOP;
       EXE_SQL := REPLACE(REPLACE(EXE_SQL,'SELECT ,','SELECT NULL,'),', FROM',',NULL FROM');
       EXECUTE IMMEDIATE EXE_SQL USING CV1,CV2,CV3,CV4,CV5,CV6,CV7,CV8,CV9;
     END IF;
  END;
END;
/

